extends ../layout
script(src='/javascripts/lib/bootstrap/js/bootstrap-collapse.js')
block content

	include ../mixins/menu.jade
	include ../mixins/docsMenu.jade
	
	mixin menu('api')
	

	div.container-fluid
		div.row-fluid
			div.span2
			div.span2.yak-sidebar
				mixin docsMenu('presentation')

						
			div.span6
				div.row-fluid
					div.content-header
						div.header-inner
							h2 Documentation de l'api
							p.subheader 
				hr
				div.row-fluid
					h3#authentification Authentification
					p.subheader Yakwala's API uses the OAuth 2.0 protocol for simple, but effective authentication and authorization.
					h4 Do you need to authenticate?
					p For the most part, Yakwala's API only requires the use of a client_id. A client_id simply associates your server, script, or program with a specific application. However, some requests require authentication - specifically requests made on behalf of a user. Authenticated requests require an access_token.  These tokens are unique to a user and should be stored securely. Access tokens may expire at any time in the future.
					br
					h4 How to get a client id and secret ?
					p For the moment, ask our team develpement by sending a request at this email : info at yakwala  dot fr
					hr
					h3#endpoints Endpoints
					p.subheader User endpoints
					
					
					table.table.table-bordered
						tr
							th METHODS
							th URL
							th DESCRIPTION
						tr
							td GET/POST/PUT
							td /users/<code>user-id</code>
							td Get the user's data details.
						tr
							td(colspan=3)
								b parameters:
								ul
									li access_token:string - the token access
									li v:1 - the version of the api
									li local:'fr' - response language
									li {user:{_id:string}} ( for GET )
									li {user:} ( for POST and PUT )
						tr
							td(colspan=3)
								b response:
								ul
									li {user : {_id:string, name:string, login:string}}
					
					table.table.table-bordered
						tr
							th METHODS
							th URL
							th DESCRIPTION
						tr
							td GET/POST/DELETE/PUT
							td /users/feed/<code>user-id</code>/<code>count</code>
							td Manage the authenticated user's news feed.
						tr
							td(colspan=3)
								b parameters:
								ul
									li access_token:string - the token access
									li v:1 - the version of the api
									li local:'fr' - response language
									li count:int - number of news to get ( for GET )
									li {info:{_id:string}} ( for GET and DELETE )
									li {info:} ( for POST and PUT )
						tr
							td(colspan=3)
								b response:
								ul
									li {user : {_id:string, name:string, login:string}}
					table.table.table-bordered
						tr
							th METHODS
							th URL
							th DESCRIPTION
			
						tr	
							td GET
							td /users/search/<code>string</code>
							td Search for a user by name.
						tr
							td(colspan=3)
								b parameters:
								ul
									li access_token:string - the token access
									li v:1 - the version of the api
									li local:'fr' - response language
									li {user:{_id:string}} for GET
									li {user:} for POST and PUT
						tr
							td(colspan=3)
								b response:
								ul
									li {user : {_id:string, name:string, login:string}}
								
									
					table.table.table-bordered
						tr
							th METHODS
							th URL
							th DESCRIPTION
			
						tr	
							td POST/GET/DELETE
							td /subscribe/user/<code>user-id</code>
							td subscribe to a user's feed
						tr
							td(colspan=3)
								b parameters:
								ul
									li access_token:string - the token access
									li v:1 - the version of the api
									li local:'fr' - response language
									li {user:{_id:XXX}}
						tr
							td(colspan=3)
								b response:
								ul
									li {user : {_id:'string',name:'string',login:'string'}}
					
					table.table.table-bordered
						tr
							th METHODS
							th URL
							th DESCRIPTION
			
						tr	
							td POST/GET/DELETE
							td /subscribe/tag/<code>user-id</code>
							td subscribe to a tag
						tr
							td(colspan=3)
								b parameters:
								ul
									li access_token:string - the token access
									li v:1 - the version of the api
									li local:'fr' - response language
									li tag:string
						tr
							td(colspan=3)
								b response:
								ul
									li {tag : {name:'string'}}
									
					table.table.table-bordered
						tr
							th METHODS
							th URL
							th DESCRIPTION
			
						tr	
							td POST/GET/DELETE
							td /favplace/<code>user-id</code>
							td mange user's favorite places
						tr
							td(colspan=3)
								b parameters:
								ul
									li access_token:string - the token access
									li v:1 - the version of the api
									li local:'fr' - response language
									li {favplace:{_id:XXX}} for GET and DELETE
									li {favplace:{name:string,location:{lat:float,lng:float}}} for POST
						tr
							td(colspan=3)
								b response:
								ul
									li {favplace : {name:string,location:{lat:float,lng:float}}}
									
					p.subheader Info endpoints
					table.table.table-bordered
						tr
							td GET
							td /api/geoinfos/
							td Get infos in the box
							
					h3#libraires Librairies
					p.subheader
					
					h4 PHP
					pre https://github.com/rebe100x/API
					pre git clone git@github.com:rebe100x/API.git
					br
					br
					hr
					h3#tou Conditions d'utilisation
						p.subheader
					@todo
			div.span2				
	script
		$(document).ready(function() {
		
		}); // END READY

