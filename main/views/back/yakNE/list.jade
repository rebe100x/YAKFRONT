mixin list()
	table#MyGrid.table.table-bordered.datagrid
		thead
			tr.headerControle
				th
					.datagrid-header-left
						span.pageTitle MOTS-CLES 
					.datagrid-header-right
						button.btn#btnAdd
							i.icon-plus
							span Ajouter
			tr.headerControle
				td(colspan=5)
					.input-append.search
						input#search.input-medium(type='text', placeholder='Recherche', data-provide="typeahead", autocomplete="off")
						button.btn
							i.icon-search
					select#filterStatus
						option(value="1") Actifs
						option(value="0") Inactifs

		tfoot
			tr
				th
					.datagrid-footer-left(style='display: none;')
						.grid-controls
							span
								span.grid-start
								| -
								span.grid-end
								| de
								span.grid-count
							select.grid-pagesize
								option 9
								option 20
								option 50
								option 100
							span Par Page
					.datagrid-footer-right(style='display: none;')
						.grid-pager
							button.btn.grid-prevpage
								i.icon-chevron-left
							span Page
							.input-append.dropdown.combobox.dropup
								input.span1(type='text')
								button.btn(data-toggle='dropdown')
									i.caret
								ul.dropdown-menu
							span
								| de
								span.grid-pages
							button.btn.grid-nextpage
								i.icon-chevron-right


	script
	
		var firstLoad = true;

		$(document).ready(function() {
			
			if($.cookie("statusYakNE")){
				var status = $.cookie("statusYakNE");
				$('#filterStatus').val(status);
			}

			$('#MyGrid').datagrid({
				dataSource: new ApiDataSource({
					columns: [
					{
						property: 'title',
						label: 'Mot clé',
						sortable: true
					},
					{
						property: 'creationDate',
						label: 'Création',
						sortable: true
					}],
					formatter: function (items) {
						$.each(items, function (index, item) {
							item.title = fillContent(item);
							item.creationDate = formatDate(item.creationDate);
						});
					}
				})
			});
		});


		var ApiDataSource = function (options) {
			this._formatter = options.formatter;
			this._columns = options.columns;
		};

		ApiDataSource.prototype = {
			columns: function () {
				return this._columns;
			},
			data: function (options, callback) {

				var url = '/api/yakNE';
				var self = this;

				if (!options.search) {
					options.search = "^";
				}

				url += '/' + (options.pageIndex + 1);
				url += '/' + options.pageSize;
				url += '/' + options.search;

				var sortPropertyArray = [];
				var sortDirectionArray = [];

				// Add currently selected datagrid column to sort properties
				if (options.sortProperty) {
					sortPropertyArray.push(options.sortProperty);
					sortDirectionArray.push(options.sortDirection);
				}

				// sort by name by default
				if(sortPropertyArray.length == 0)
					sortPropertyArray.push( "title");
				if(sortDirectionArray.length == 0)
					sortDirectionArray.push("asc");
				
					
				// Would be easier if we could pass dictionaries, needs testing
				url += '/' + sortPropertyArray.join() + '/' + sortDirectionArray.join();

				// Filter by status
				var status = $('#filterStatus :selected').val();
				url += '/' + status;
				
				$.ajax(url, {
					type: 'GET'
				}).done(function (response) {

					if (firstLoad) {
						$("#search").focus();
						$('th[data-property="name"]').addClass('sorted');
						$('th[data-property="name"]').append('<i class="icon-chevron-down"></i>');
						firstLoad = false;
					}
					// Prepare data to return to Datagrid
					var data = response.yakNE;
					var count = response.count;
					var startIndex = (response.pageIndex - 1) * response.pageSize;
					var endIndex = parseInt(startIndex) + parseInt(response.pageSize);
					var end = (endIndex > count) ? count : endIndex;
					var page = parseInt(response.pageIndex);
					var pages = Math.ceil(response.count / response.pageSize);
					var start = startIndex + 1;

					if (self._formatter) self._formatter(data);

					callback({ data: data, start: start, end: end, count: count, pages: pages, page: page });

				});
			}
		};

		

		/*bind form edition on the loaded datagrid event to avoid double loading*/
		$('#MyGrid').unbind('loaded').on('loaded',function(){
				// Edit YAKNE function
			$("#MyGrid .editYakNE").on('click', function(event){
				event.preventDefault();
				event.stopPropagation();
				editYakNE(this.id,0);
				
			});

			
			$("#MyGrid a.duplicateItem").on('click', function(event){
				event.preventDefault();
				event.stopPropagation();
				editYakNE(this.id,1);
			});
		});
		

		$('#filterStatus').live('change', function() {
			var currentSelection = $('#filterStatus :selected').val();
			$.cookie("statusYakNE",currentSelection,{ expires: 100000, path : '/' });
			refreshDatagrid();
		});

		
		function fillContent(item) {
			var res = "";
			var icon = "icon-time";
			var title_icon = "En attente";
			var title_title = "";
			
			res += '<div class="liens">';
			res += '<a href="#" id="'+item._id+'" class="duplicateItem listIcon" title="Dupliquer"><i class="icon-random"></i></a>';
			res += "</div>";

			res += '<a class="editYakNE" id="' + item._id + '" href="#">';

			if (item.status == 1) {
				icon = 'icon-ok-sign';
				title_icon = "Actif";
			}
			else {
				icon = 'icon-ban-circle';
				title_icon = "Inactif";
			}

	
			res += 	'<div class="text-info"><i class="' + icon + ' status" title="' + title_icon + '" ></i>' + item.title + '</div>';
			if(item.description)
				res += '<div><small>'+item.description+'</small></div>';

			res += '<small> ( ';
			if(item.match.length > 0){
				var i = 0;
				item.match.forEach(function(val){
					if(i<10)
						res += val.title+', ';
					i++;
				});
			}
			res += '... ) </small>';
			res += '</a>';

			return res;
		}

		function formatDate(creationDate) {
			var dateTmp = new Date(creationDate);
			return dateTmp.getDate()+'/'+(dateTmp.getMonth()+1)+'/'+dateTmp.getFullYear();

		}


		

		function refreshDatagrid () {
			// Temporary refresh method for datagrid
			var $gridsearch = jQuery('#MyGrid').find('.search');
			var search = $gridsearch.find('input').val();
			$gridsearch.trigger('searched', search);
		}

		
		$("#btnBack").unbind('click').on('click',function(){
			$("#yakNEForm").hide();
			$("#MyGrid").show();
			$("#yakNEForm input[type=hidden]").val('');
			$('#yakNEForm').clearForm();
			$('#err').hide();
			$("#btnBack").hide();
			$("#pillNormalizedTag ul").empty();
			$("#pillExactTag ul").empty();
			$("#pillYakcat ul").empty();
			$("#titleNormalized").html('');
			$("#pillZone ul").empty();
			$("#pillFeed ul").empty();
			zone = new Array();
			feed = new Array();
			zoneName = new Array();
			feedName = new Array();
			yakCatIds = new Array();
			yakCatNames = new Array();
			exactTags = new Array();
			normalizedTags = new Array();
		});

		
		

		/* get data and edit yakNE in the form
			flagDuplicate = 1 for duplicating the yakNE
		*/
		function editYakNE(id,flagDuplicate){
			$("#btnBack").show();
			$("#MyGrid").hide();
			
			// We remove the error class when we open a form for editing a place
			$('#yakNEForm').removeClass("error");

			/*INIT FORM FOR EDITION*/
			$("#yakNEForm").show();
			
			$("#pillNormalizedTag ul").html('');
			$("#pillExactTag ul").html('');
			$("#pillYakcat ul").html('');
			$("#pillZone ul").html('');
			$("#pillFeed ul").html('');
			$("#pillFeed").show();
			$("#pillZone").show();
			$("#pillNormalizedTag").show();
			$("#pillExactTag").show();
			$("#pillYakcat").show();
			$("#yakNEForm input[type=hidden]").val('');
			$('#yakNEForm').clearForm();	
			$('#err').hide();
			yakCatIds = new Array();
			yakCatNames = new Array();
			exactTags = new Array();
			normalizedTags = new Array();
			zone = new Array();
			feed = new Array();
			zoneName = new Array();
			feedName = new Array();
			
			
			var url = '/api/yakNE/'+id;
			
			// We search for the yakNE in mongo and we fill the form with the yakNE's values
			$.ajax({
				url: url,
				type: 'GET',
				async: false,
				success: function (response)
				{
					/*FORM INITIALISATION*/
					var yakNE = response.data.yakNE;
	
					if(flagDuplicate == 1){
						$("#yakNEForm legend.mainlegend").html("Dupliquer un mot clé : ");
						$("#yakNEForm #title").val(yakNE.title+'_copy').focus();
						$("#yakNEForm #objid").val('');
						$("#yakNEForm #titleNormalized").html(yakNE.title+'_copy');
						$("#yakNEForm #titleNormalizedHidden").val(yakNE.title+'_copy');
					}	
					else{	
						$("#yakNEForm legend.mainlegend").html("Modifier un mot clé :");
						$("#yakNEForm #objid").val(yakNE._id);
						$("#yakNEForm #title").val(yakNE.title).focus();
						$("#yakNEForm #titleNormalized").html(yakNE.title);
						$("#yakNEForm #titleNormalizedHidden").val(yakNE.title);
					}							

					$("#zoneHidden").val(yakNE.zone.join(','));								
					$("#zoneNameHidden").val(yakNE.zoneName.join(','));								
					$("#feedHidden").val(yakNE.feed.join(','));								
					$("#feedNameHidden").val(yakNE.feedName.join(','));								


					if(yakNE.zone.length > 0){
						yakNE.zone.forEach(function(z){
							if(z > 0){
								$.get('/api/zoneByNum/'+z,function(data){

									$("#pillZone ul").append("<li class='zone-val status-info' data-title='"+data.zone.name+"' status-success' data-id='"+data.zone.num+"'>"+data.zone.name+"</li>");
									zone.push(data.zone.num);
									zoneName.push(data.zone.name);	
									$("#zoneHidden").val(zone.join(','));
									$("#zoneNameHidden").val(zoneName.join(','));
								});
							}
						});	
					}

					if(yakNE.feed.length > 0){
						yakNE.feed.forEach(function(f){
							if(f != "0"){
								$.get('/api/feed/'+f,function(data){

									$("#pillFeed ul").append("<li class='feed-val status-warning' data-title='"+data.feed.name+"' status-success' data-id='"+data.feed._id+"'>"+data.feed.name+"</li>");
									feed.push(data.feed._id);
									feedName.push(data.feed.name);	
									$("#feedHidden").val(feed.join(','));
									$("#feedNameHidden").val(feedName.join(','));
								});
							}
						});	
					}

					var tmpArr = new Array();
					tmpArr = yakNE.match;
					tmpArr.forEach(function(m){
						if(m.title.length>0){
							if(m.level == 'exact'){
								
								$("#pillExactTag ul").append("<li class='source-val status-important' data-value='"+m.title+"'>"+m.title+"</li>");
								exactTags.push(m.title);								
							}
							if(m.level == 'normalized'){
								$("#pillNormalizedTag").show();
								$("#pillNormalizedTag ul").append("<li class='source-val status-warning' data-value='"+m.title+"'>"+m.title+"</li>");
								normalizedTags.push(m.title);	
							}
						}
					});

					$("#normalizedTagsHidden").val(normalizedTags.join(','));								
					$("#exactTagsHidden").val(exactTags.join(','));

					
					if(yakNE.yakCatId.length > 0){
						yakNE.yakCatId.forEach(function(cat){
							if(cat != ""){

								$.get('/api/cats/'+cat,function(data){
									$("#pillYakcat ul").append("<li class='yakcat-val status-success' data-id='"+data.cats._id+"'>"+data.cats.title+"</li>");
									yakCatIds.push(data.cats._id);
									yakCatNames.push(data.cats.title);	
									$("#yakCatIdsHidden").val(yakCatIds.join(','));
									$("#yakCatNamesHidden").val(yakCatNames.join(','));
								});
							}
						});	
					}

					$('#yakNEForm #description').val(yakNE.description);

					$('#yakNEForm input:radio[name=status][value='+yakNE.status+']').click();
					

					$("#yakNEForm #title").focus();
					
					
				}
			});
		}
		

		// Add New YakNE
		$("#btnAdd").click(function(){
			$("#MyGrid").hide();
			$("#yakNEForm")[0].reset();
			$("#yakNEForm input[type=hidden]").val('');
			$('#yakNEForm').clearForm();	
			
			// We remove the error class when we open a form for creating a new yakNE
			$('#yakNEForm #titleGroup').removeClass("error");
			$("#btnBack").fadeIn();
			$("#yakNEForm").fadeIn();
			$("#yakNEForm #objid").val("");
			$('#err').hide();
			$("#yakNEForm #title").focus();

			$("#pillNormalizedTag ul").html('');
			$("#pillExactTag ul").html('');
			$("#pillYakcat ul").html('');
			$("#pillZone ul").html('');
			$("#pillFeed ul").html('');
			$("#pillFeed").show();
			$("#pillZone").show();
			$("#pillNormalizedTag").show();
			$("#pillExactTag").show();
			$("#pillYakcat").show();
			
			yakCatIds = new Array();
			yakCatNames = new Array();
			exactTags = new Array();
			normalizedTags = new Array();
			zone = new Array();
			feed = new Array();
			zoneName = new Array();
			feedName = new Array();
			

		});
			
		$('#yakNEForm input:radio[name=status][value=1]').click();


		