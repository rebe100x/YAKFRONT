mixin list()
	table#MyGrid.table.table-bordered.datagrid
		thead
			tr.headerControle
				th
					.datagrid-header-left
						.input-append.search
							input#search.input-medium(type='text', placeholder='Recherche', data-provide="typeahead", autocomplete="off")
							button.btn
								i.icon-search
					.datagrid-header-right
						button.btn#btnAdd
							i.icon-plus
							span Ajouter
			tr.headerControle
				td(colspan=5)
					select#filterStatus
						option(value="1") Actifs
						option(value="0") Inactifs
					select#filterType
						option(value="all") Tous les types
						option(value="XML") XML
						option(value="CSV") CSV
						option(value="JSON") JSON
					
		tfoot
			tr
				th
					.datagrid-footer-left(style='display: none;')
						.grid-controls
							span
								span.grid-start
								| -
								span.grid-end
								| de
								span.grid-count
							select.grid-pagesize
								option 10
								option 20
								option 50
								option 100
							span Par Page
					.datagrid-footer-right(style='display: none;')
						.grid-pager
							button.btn.grid-prevpage
								i.icon-chevron-left
							span Page
							.input-append.dropdown.combobox.dropup
								input.span1(type='text')
								button.btn(data-toggle='dropdown')
									i.caret
								ul.dropdown-menu
							span
								| de
								span.grid-pages
							button.btn.grid-nextpage
								i.icon-chevron-right


	script
	
		var firstLoad = true;

		var ApiDataSource = function (options) {
			this._formatter = options.formatter;
			this._columns = options.columns;
		};

		$("#pillYakcat").show();
		$("#pillFreetag").show();
		$("#pillSourceLink").show();

		ApiDataSource.prototype = {

			columns: function () {
				return this._columns;
			},

			data: function (options, callback) {

				var url = '/api/feeds';
				var self = this;

				if (!options.search) {
					options.search = "^";
				}

				url += '/' + (options.pageIndex + 1);
				url += '/' + options.pageSize;
				url += '/' + options.search;

				var sortPropertyArray = [];
				var sortDirectionArray = [];

				// Add currently selected datagrid column to sort properties
				if (options.sortProperty) {
					sortPropertyArray.push(options.sortProperty);
					sortDirectionArray.push(options.sortDirection);
				}

				// sort by name by default
				if(sortPropertyArray.length == 0)
					sortPropertyArray.push( "humanName");
				if(sortDirectionArray.length == 0)
					sortDirectionArray.push("asc");
				
					
				// Would be easier if we could pass dictionaries, needs testing
				url += '/' + sortPropertyArray.join() + '/' + sortDirectionArray.join();

				// Filter by status
				var status = $('#filterStatus :selected').val();
				url += '/' + status;

				// Filter by type
				var type = $('#filterType :selected').val();
				url += '/' + type;

				

				
				$.ajax(url, {
					type: 'GET'
				}).done(function (response) {

					if (firstLoad) {
						$("#search").focus();
						$('th[data-property="name"]').addClass('sorted');
						$('th[data-property="name"]').append('<i class="icon-chevron-down"></i>');
						firstLoad = false;
					}
					// Prepare data to return to Datagrid
					var data = response.feed;
					var count = response.count;
					var startIndex = (response.pageIndex - 1) * response.pageSize;
					var endIndex = parseInt(startIndex) + parseInt(response.pageSize);
					var end = (endIndex > count) ? count : endIndex;
					var page = parseInt(response.pageIndex);
					var pages = Math.ceil(response.count / response.pageSize);
					var start = startIndex + 1;

					if (self._formatter) self._formatter(data);

					callback({ data: data, start: start, end: end, count: count, pages: pages, page: page });

				});
			}
		};

		$('#MyGrid').datagrid({
			dataSource: new ApiDataSource({
				columns: [
				{
					property: 'name',
					label: 'Flux',
					sortable: true
				},
				{
					property: 'feedType',
					label: 'Type',
					sortable: true
				},
				{
					property: 'zoneName',
					label: 'Zone',
					sortable: true
				},
				{
					property: 'creationDate',
					label: 'Création',
					sortable: true
				}],
				formatter: function (items) {
					$.each(items, function (index, item) {
						item.name = fillContent(item);
						item.creationDate = formatDate(item.creationDate);
						item.zoneName = getZone(item);
					});
				}
			})
		});

		/*bind form edition on the loaded datagrid event to avoid double loading*/
		$('#MyGrid').unbind('loaded').on('loaded',function(){
				// Edit Feed function
			$("#MyGrid .editFeed").on('click', function(event){
				event.preventDefault();
				event.stopPropagation();
				editFeed(this.id,0);
				
			});

			$("#MyGrid a.centerMap").on('click', function(event){
				event.preventDefault();
				event.stopPropagation();
				var latlng = new google.maps.LatLng($(this).attr('lat'), $(this).attr('lng'));
				getformattedAddress(latlng);
				placeMarker(latlng,markerLocation);
				map.panTo(markerLocation.getPosition());
			});	
			
			$("#MyGrid a.duplicateItem").on('click', function(event){
				event.preventDefault();
				event.stopPropagation();
				editFeed(this.id,1);
			});
		});
		

		$('#filterStatus').live('change', function() {
			//var currentSelection = $('#filterStatus :selected').val();
			refreshDatagrid();
		});

		$('#filterType').live('change', function() {
			//var currentSelection = $('#filterType :selected').val();
			refreshDatagrid();
		});

		function getZone(item){
			if(typeof item.zoneName == "undefined" || item.zoneName == '' ||  item.zoneName == null){
				return item.defaultPlaceName;
			}else
				return  item.zoneName;
		}

		function fillContent(item) {
			var res = "";
			var icon = "icon-time";
			var title_icon = "En attente";
			var title_title = "";
			
			res += '<div class="liens">';
			res += '<a href="'+conf.batchurl.replace('BACKEND','BATCH')+'parserPAPI.php?q='+item.name+'&forceUpdate=1" target="_blank" class="testItem listIcon" title="Tester"><i class="icon-play"></i></a>';
			res += '<a href="#" id="'+item._id+'" class="duplicateItem listIcon" title="Dupliquer"><i class="icon-random"></i></a>';

			if (item.link)
				res += '<a href=\''+ item.link + '\' target="_blank" class="listIcon" title="Lien externe"><i class="icon-share-alt "></i></a>';	

			if (typeof item.defaultPlaceLocation != 'undefined'
				&& typeof item.defaultPlaceLocation.lat != 'undefined'
				&& typeof item.defaultPlaceLocation.lng != 'undefined' ){
				res += '<a class="centerMap listIcon" id="' + item._id + '" lat="' + item.defaultPlaceLocation.lat + '" lng="' + item.defaultPlaceLocation.lng + '"   href="#">';
			res += '<i class = "icon-map-marker" title="Localiser"></i>';
			res += '</a>';
			}	
			
			res += "</div>";

			res += '<a class="editFeed" id="' + item._id + '" href="#">';

			if (item.status == 1) {
				icon = 'icon-ok-sign';
				title_icon = "Validée";
			}
			else {
				icon = 'icon-ban-circle';
				title_icon = "Rejetée";
			}

			item.humanName = '<img src=\''+ item.thumbSmall + '\'/> '+ item.humanName;	

			res += 	'<div class="text-info"><i class="' + icon + ' status" title="' + title_icon + '" ></i>' + item.humanName + '</div>';

			res += '</a>';

			return res;
		}

		function formatDate(creationDate) {
			var dateTmp = new Date(creationDate);
			return dateTmp.getDate()+'/'+(dateTmp.getMonth()+1)+'/'+dateTmp.getFullYear();

		}


		

		function refreshDatagrid () {
			// Temporary refresh method for datagrid
			var $gridsearch = jQuery('#MyGrid').find('.search');
			var search = $gridsearch.find('input').val();
			$gridsearch.trigger('searched', search);
		}

		
		$("#btnBack").unbind('click').on('click',function(){
			$("#feedForm").hide();
			$("#MyGrid").show();
			$("#pillSourceLink ul").html('');
			$("#pillYakcat ul").html('');
			$("#pillFreetag ul").html('');
			$("#pillSourceFile ul").html('');
			google.maps.event.removeListener(listenerHandle);
			markerLocation.setVisible(false);					
			$("#feedForm input[type=hidden]").val('');
			$('#feedForm').clearForm();
			$('#err').hide();
			$("#btnBack").hide();
			$("#picturePreview").hide();
			$("#picturePreview img").attr('src','').hide();
			yakCatIds = new Array();
			yakCatNames = new Array();
			freeTags = new Array();
			linkSource = new Array();
			fileSource = new Array();
			
		});

		
		

		/* get data and edit feed in the form
			flagDuplicate = 1 for duplicating the feed
		*/
		function editFeed(id,flagDuplicate){
			$("#btnBack").show();
			$("#MyGrid").hide();
			
			// We remove the error class when we open a form for editing a place
			$('#feedForm').removeClass("error");

			/*INIT FORM FOR EDITION*/
			$("#feedForm").show();
			
			$("#pillSourceLink ul").html('');
			$("#pillYakcat ul").html('');
			$("#pillFreetag ul").html('');
			$("#pillSourceFile ul").html('');
			$("#feedForm input[type=hidden]").val('');
			$('#feedForm').clearForm();	
			$('#err').hide();
			yakCatIds = new Array();
			yakCatNames = new Array();
			freeTags = new Array();
			linkSource = new Array();
			fileSource = new Array();
			
			
			var url = '/api/feed/'+id;
			
			// We search for the feed in mongo and we fill the form with the feed's values
			$.ajax({
				url: url,
				type: 'GET',
				async: false,
				success: function (response)
				{
					/*FORM INITIALISATION*/
					var feed = response.feed;

					
					if(flagDuplicate == 1){
						$("#feedForm legend.mainlegend").html("Dupliquer un flux");
						$("#feedForm #humanName").val(feed.humanName+'_copy').focus();
						$("#feedForm #objid").val('');
						$("#feedForm #placeid").val('');
					}	
					else{	
						$("#feedForm legend.mainlegend").html("Modifier un flux");
						$("#feedForm #objid").val(feed._id);
						$("#feedForm #placeid").val(feed.defaultPlaceId);
						$("#feedForm #humanName").val(feed.humanName).focus();
					}	
						

					
					if(feed.thumb != '' && typeof feed.thumb != 'undefined'){
						$("#picturePreview").show();
						$("#picturePreview img").attr('src',feed.thumbMedium).show();
					}
					$("#feedForm #licence").val(feed.licence);
					$("#feedForm #link").val(feed.link);
					$('#feedForm #persistDaysValue').val(feed.persistDays);
					$("#feedForm #description").val(feed.description);
					if(feed.yakCatId.length > 0){
						feed.yakCatId.forEach(function(cat){
							if(cat != ""){
								$.get('/api/cats/'+cat,function(data){
									$("#pillYakcat ul").append("<li class='yakcat-val status-important' data-id='"+data.cats._id+"'>"+data.cats.title+"</li>");
									yakCatIds.push(data.cats._id);
									yakCatNames.push(data.cats.title);	
									$("#yakCatIdsHidden").val(yakCatIds.join(','));
								});
							}
						});	
					}
					if(feed.tag.length > 0){
						feed.tag.forEach(function(tag){
							$("#pillFreetag ul").append("<li class='freetag-val status-info' data-value='"+tag+"'>"+tag+"</li>");
							freeTags.push(tag);
							$("#feedForm #tagsHidden").val(freeTags.join(','));	
						});
					}
					$("#feedForm #defaultPrintFlag").val(feed.defaultPrintFlag);
					
					if(typeof feed.defaultPlaceLocation != 'undefined'){
						var latlng = new google.maps.LatLng(feed.defaultPlaceLocation.lat, feed.defaultPlaceLocation.lng);
						placeMarker(latlng,markerLocation);
						map.setCenter(markerLocation.getPosition());
						$("#feedForm #longitude").val(feed.defaultPlaceLocation.lng);
						$("#feedForm #latitude").val(feed.defaultPlaceLocation.lat);
					}

					if(typeof feed.zone)
						$("#feedForm #zone").val(feed.zone);
						
					if(typeof feed.zoneName)
						$("#feedForm #zoneName").val(feed.zoneName);


					$('#defaultPlaceSearchName').val(feed.defaultPlaceSearchName);
					$('#defaultPlaceName').val(feed.defaultPlaceName);
					

					$("#feedForm #parsingFreq").val(feed.parsingFreq);

					$("#feedForm #feedType").val(feed.feedType);
					switch(feed.feedType){
						case 'CSV':
							$('.lineToBeginGroup').show();
							$('.rootElementGroup').hide();
							$('#alertFeedType').show().children('span.alertText').html('Le fichier doit être sauvé en UTF8, séparation point virgule et textes délimités par des guillemets doubles. ');
						break;
						case 'XML':
							$('.lineToBeginGroup').hide();
							$('.rootElementGroup').show();
							$('#alertFeedType').hide();
						break;
						case 'JSON':
							$('.lineToBeginGroup').hide();
							$('.rootElementGroup').show();
							$('#alertFeedType').hide();
						break;
						break;
					}


					//$('#feedForm input:radio[name=yakType][value='+feed.yakType+']').attr("checked", true).trigger("change").button('refresh');
					$('#feedForm input:radio[name=yakType][value='+feed.yakType+']').attr("checked", true);
					var tmpArr = new Array();
					tmpArr = feed.fileSource;
					tmpArr.forEach(function(source){
						if(source.length>0){	
							$("#pillSourceFile").show();
							$("#pillSourceFile ul").append("<li class='source-val status-success' data-value='"+source+"'>"+source+"</li>");
							fileSource.push(source);
						}
					});

					$("#feedForm #fileSource").val(fileSource.join(','));
					
					feed.linkSource.forEach(function(source){
						if(source.length>0){
							$("#pillSourceLink").show();
							if(source.length > 40)
								var sourceText = source.substring(0,40)+'...';
							else
								var sourceText = source;
							$("#pillSourceLink ul").append("<li class='source-val status-warning' data-value='"+source+"'>"+sourceText+"</li>");
							linkSource.push(source);
						}
					});
					$("#feedForm #linkSource").val(linkSource.join(','));

					$('#feedForm input:radio[name=status][value='+feed.status+']').click();
					


					$("#feedForm #humanName").focus();
					
					$("#feedForm #rootElement").val(feed.rootElement);
					$("#feedForm #lineToBegin").val(feed.lineToBegin);
					$('#searchRootElementResult').html('');
					
					if (feed.parsingTemplate)
					{
						$("#feedForm #infoTitle").val(feed.parsingTemplate.title);	
						$("#feedForm #infoContent").val(feed.parsingTemplate.content);	
						$("#feedForm #infoAddress").val(feed.parsingTemplate.address);	
						$("#feedForm #infoGeolocation").val(feed.parsingTemplate.geolocation);	
						$("#feedForm #infoLatitude").val(feed.parsingTemplate.latitude);	
						$("#feedForm #infoLongitude").val(feed.parsingTemplate.longitude);	
						$("#feedForm #infoLink").val(feed.parsingTemplate.outGoingLink);	
						$("#feedForm #infoThumb").val(feed.parsingTemplate.thumb);	
						$("#feedForm #infoCat").val(feed.parsingTemplate.yakCats);	
						$("#feedForm #infoTag").val(feed.parsingTemplate.freeTag);	
						$("#feedForm #infoPlace").val(feed.parsingTemplate.place);	
						$("#feedForm #infoEventDate").val(feed.parsingTemplate.eventDate);	
						$("#feedForm #infoPubDate").val(feed.parsingTemplate.pubDate);	
						$("#feedForm #infoTel").val(feed.parsingTemplate.telephone);
						$("#feedForm #infoMail").val(feed.parsingTemplate.mail);
						$("#feedForm #infoTransportation").val(feed.parsingTemplate.transportation);
						$("#feedForm #infoWeb").val(feed.parsingTemplate.web);
						$("#feedForm #infoOpening").val(feed.parsingTemplate.opening);
					}
				}
			});
		}
		

		// Add New Feed
		$("#btnAdd").click(function(){
			$("#MyGrid").hide();
			$("#feedForm")[0].reset();
			// We remove the error class when we open a form for creating a new feed
			$('#feedForm #titleGroup').removeClass("error");
			$('#feedForm #contentGroup').removeClass("error");
			$('#feedForm #licenceGroup').removeClass("error");
			$('#feedForm #origineGroup').removeClass("error");
			$('#feedForm #adresseGroup').removeClass("error");
			$('#feedForm #content').val("");
			$("#btnBack").fadeIn();
			$("#feedForm").fadeIn();
			$("#feedForm legendmainlegend").html("Ajouter un lieu");
			$("#feedForm #objid").val("");
			$("#feedForm #placeid").val("");
			$("#pillYakcat ul").empty();
			$('#err').hide();
			$("#feedForm #title").focus();

			$('.lineToBeginGroup').hide();
			$('.rootElementGroup').show();
			$('#searchRootElementResult').html('');
			$("#feedForm #feedType").val("").change();
			

		});
			
		$('#feedForm input:radio[name=status][value=1]').click();


		