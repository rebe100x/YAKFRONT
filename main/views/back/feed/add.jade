mixin add()
	button.btn#btnBack(style='display:none')
		i.icon-chevron-left
	form#feedForm(action='/feed', method='POST', enctype='multipart/form-data', style='display:none')
		input#yakcatInput(type='hidden', name='yakcatInput', value='')
		input#yakcatNames(type='hidden', name='yakcatNames', value='')
		input#feedInput(type='hidden', name='feedInput', value='')
		input#latitude(type="hidden",data-provide="typeahead", name="latitude")
		input#longitude(type="hidden",data-provide="typeahead", name="longitude")
		input#update(type="hidden",data-provide="typeahead", name="update", value='0')
		input#objid(type="hidden",data-provide="typeahead", name="objid", value='0')
		input#hiddenOrigin(type="hidden",data-provide="typeahead", name="hiddenOrigin", value='0')

		legend Ajouter un flux
		div.control-group.error
				div.controls
					label.alert#err(type="text", id="err", name="err", style='display:none') Les champs en rouge sont obligatoires.
		div.control-group#titleGroup
			div.controls
				label Nom
				input.big.hashtagMaker(type='text', name='title', id='title', placeholder='Le nom du flux')
		div.control-group#contentGroup
			div.controls
				label Description
				textarea.hashtagMaker(type='text', id='content', name='content', placeholder="Quelques détails sur le lieu à ajouter, avec la possibilité d'ajouter des #hashtags.", rows='3')
		div.control-group#licenceGroup
			div.controls
				.col
					label Licence
					input(type='text', name='licence', id='licence', placeholder='Ex: Open Source', autocomplete="off")
				.col
					label Origine
					input(type='text', name='origine', id='origine', placeholder='Yakwala', autocomplete="on")
				.col
					label Outgoing Link
					input(type='text', name='outgoinglink', id='outgoinglink', placeholder='outgoinglink')
		div.control-group#adresseGroup.clearBoth
			div.controls
				label(for='Feed') Adresse
				.input-append
					input.big(type="text",data-provide="typeahead", id="feed", name="feed", autocomplete="on", placeholder="Cliquer sur la carte ou entrer l'adresse")
					button.btn#btn-feed-adder(type="button") Ajouter
		div.control-group#yakcatGroup
			div.controls
				.col
					label(for='category') Thèmes
					input(type="text", data-provide="typeahead", id="yakcat", name="yakcat", autocomplete="off", placeholder='Un ou plusieurs thèmes')
					.pillbox#pillYakcat(style="display:none")
						ul
				.col
					label Free Tags
					input#freetag(type="text", data-provide="typeahead", name="freetag",placeholder='Free tags séparés par des virgules')
		div.control-group.clearBoth
			div.controls
				label Contact
				.col
					input#tel(type="text", data-provide="typeahead", name="tel", placeholder='Téléphone')
				.col
					input#mobile(type="text", data-provide="typeahead", name="mobile", placeholder='Mobile')
				.col
					input#mail(type="text", data-provide="typeahead", name="mail", placeholder='Email')
				.col
					input#web(type="text", data-provide="typeahead", name="web", placeholder='Site web')
				label.clearBoth Horaires / Transport
				.col
					input#opening(type="text", data-provide="typeahead", name="opening", placeholder="Horaires d'ouverture")
				.col
					input#closing(type="text", data-provide="typeahead", name="closing", placeholder='Horaires de fermeture')
				.col
					input#special(type="text", data-provide="typeahead", name="special", placeholder='Ouverture exceptionnelle')
				.col
					input#transportation(type="text", data-provide="typeahead", name="transportation", placeholder='Comment y arriver? (ex: métro ligne 2 station Jaurès)')

				label(for='picture').clearBoth Photo
				input#picture(type="file", name="picture")
				span#picturePreview
			div.control-group
				div.controls
					label Status
					label.radio.inline Valider
						input#option1(type="radio", name="status", value="1" , checked)
					label.radio.inline En attente
						input#option4(type="radio", name="status", value="2")
					label.radio.inline Rejeter
						input#option2(type="radio", name="status", value="3")
					label.radio.inline Erreur de localisation
						input#options3(type="radio", name="status", value="10")
			div.control-group
				div.controls
					button.btn.btn-large.btn-inverse(type='submit', name='submit', id='submit', value='Enregistrer') Enregistrer

					//button.btn.btn-large.btn-inverse#enregistrer(value='Enregistrer') Enregistrer

script

	$(document).ready(function() {
		// bind 'myForm' and provide a simple callback function
		$('#feedForm').ajaxForm(function() {
			$("#MyGrid").fadeIn();
			$("#feedForm").hide();
			$("#btnBack").hide();
			google.maps.event.removeListener(listenerHandle);
			markerLocation.setVisible(false);
			refreshDatagridAndMenu();
		});
	});

	// Function to go back from adding/editing form to the grid
	$("#btnBack").click(function() {
		$("#MyGrid").fadeIn();
		$("#placeForm").hide();
		$("#btnBack").hide();
		google.maps.event.removeListener(listenerHandle);
		markerLocation.setVisible(false);
	});

	// We validate the form before submitting it
	$('#placeForm').submit(function()
	{
		var err = false;

		if ($('#placeForm #title').val() == "")
		{
			$('#placeForm #titleGroup').addClass("error");
			$('#placeForm #title').focus();
			err = true;
		}
		else
			$('#placeForm #titleGroup').removeClass("error");

		if (placeArray == null)
		{
			$('#placeForm #adresseGroup').addClass("error");
			$('#placeForm #place').focus()
			err = true;
		}
		else
			$('#placeForm #adresseGroup').removeClass("error");


		if (err)
		{
			$('#err').show();
			return false;
		}

		if ($("#pillYakcat").pillbox("items")) {
				$($("#pillYakcat").pillbox("items")).each(function() {
					yakcatArray.push(this.value);
					yakcatNames.push(this.text);
				});
			}
		$("#placeForm #yakcatInput").val(JSON.stringify(yakcatArray));
		$("#placeForm #yakcatNames").val(JSON.stringify(yakcatNames));

		return true;
	});


	

	/*POST EFFECTS*/
	// hashtag creation from title field
	$(".hashtagMaker").keyup(function(event) {
		hashtagTmp = [];
		var inputStrArray = ($('#content').val()+' '+$('#title').val()).split(' ');
		for(i = 0; i< inputStrArray.length;i++){
			if(inputStrArray[i].match(rule)){
				//console.log('PUSH');
				hashtagTmp.push(inputStrArray[i]);
				//console.log(hashtagTmp);
				$('#freetag').val(hashtagTmp.toString().replace(rule2,''));
			}
		}
	});

	$('#placeForm #picture').live('change', function () {
		if (window.FileReader) {
			var fileList = this.files;
			var file = fileList[0];
			var r = new FileReader();
			r.onload = function () {
				var binimage = r.result;
				//console.log(binimage);

				binimage1 = binimage.replace('data:'+file.type+';base64,', '');
				var imag = "<img class='img-rounded' " + "src='" +
				"data:"+file.type+";base64," + binimage1 + "' style='width:100px'/>";
				$("#placeForm #picturePreview").html(imag);
			};
			r.readAsDataURL(file);
		}
		//r.readAsBinaryString(file);
	});

	$('#placeForm #yakcat').typeahead({
		source: function (typeahead, query) {
			$.ajax({
				url: "/api/cats",
				success: function(data) {
					typeahead.process(data.cats);
				}
			})
		},
		property: "title",
		onselect: function(obj) {
			//$("label[for='category']").after("<div class='catLabel'><i class='icon-remove icon-pointer'  onclick='var index=yakcatArray.indexOf(\""+obj._id+"\"); yakcatArray.splice(index,1);$(\"#placeForm #yakcatInput\").val(JSON.stringify(yakcatArray));$(this).parent().remove();'></i> "+obj.title+"</div>");
			$("#pillYakcat").show();
			$("#pillYakcat ul").append("<li class='yakcat-val' data-value="+obj._id+">"+obj.title+"</li>");
			$('#placeForm #yakcat').val('').focus();
		}
	});

	$("li.yakcat-val").live('click', function() {
		if ($("#pillYakcat").pillbox("items").length == 0) {
			$("#pillYakcat").hide();
		}
	});

	$('#placeForm #licence').typeahead({
		source: ["Licence Ouverte", "Licence Libre"]
	});

	$('#placeForm #btn-place-adder').click(function(){

		var addressString = $('#placeForm #place').val();
		if(addressString != "Rechercher..." && addressString != "" && addressString.length > 1){
			var addressQuery = {"address": addressString,"latLng":map.getCenter(),"bounds":map.getBounds()};
			var geocoder = new google.maps.Geocoder();
			geocoder.geocode(addressQuery, function(results, status) {
				if (status == google.maps.GeocoderStatus.OK) {
					map.setCenter(results[0].geometry.location);
					markerLocation.setVisible(true);
					markerLocation.setPosition(results[0].geometry.location);
					placeMarker(results[0].geometry.location,markerLocation);
					var placeGmap = getPlaceFromGmapResult(results[0]);
					placeArray = placeGmap;
					$("#placeForm #placeInput").val(JSON.stringify(placeArray));
					$('#placeLabel').first().remove();
					$('#placeForm #btn-place-adder').parent().before("<div id='placeLabel'><i class='icon-remove icon-pointer' onclick='placeArray=null;$(\"#placeForm #placeInput\").val(JSON.stringify(placeArray));$(this).parent().remove();'></i> "+results[0].formatted_address+"</div>");
					$("#placeForm #place").val("");
				} else {
					var salt = new Date().getTime();
					$('#placeForm #btn-place-adder').parent().before("<div id='alert"+salt+"' class='control-label'><i class='icon-exclamation-sign'> </i>Adresse invalide ("+status+")</div>");
					setTimeout(function() {
						$("#alert"+salt).fadeOut();
					}, 3000);
					$('#placeForm #place').select();
				}
			});
		}
	});
