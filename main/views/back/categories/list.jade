mixin list()
	style
		.fuelux select { width: auto; max-width: 120px;} 
		.fuelux .datagrid tfoot .datagrid-footer-right .grid-pager .combobox { width: auto;}
		
	table#MyGrid.table.table-bordered.datagrid
		thead
			tr.headerControle
				th
					.datagrid-header-left
						span.pageTitle GESTION DES CATEGORIES
			tr.headerControle
				td(colspan=6)
					.input-append.search
						input#search.input-medium(type='text', placeholder='Recherche', data-provide="typeahead", autocomplete="off")
						button.btn
							i.icon-search
					select#filterStatus
						option(value="-1") Toutes les catégories
						option(value="1") Actives
						option(value="0") Inactives
						option(value="2") Système
					
		tfoot
			tr
				th
					.datagrid-footer-left(style='display: none;')
						.grid-controls
							span
								span.grid-start
								| -
								span.grid-end
								| de
								span.grid-count
							select.grid-pagesize
								option 10
								option 20
								option 50
								option 100
							span Par Page
					.datagrid-footer-right(style='display: none;')
						.grid-pager
							button.btn.grid-prevpage
								i.icon-chevron-left
							span Page
							.input-append.dropdown.combobox.dropup
								input.span1(type='text')
								button.btn(data-toggle='dropdown')
									i.caret
								ul.dropdown-menu
							span
								| de
								span.grid-pages
							button.btn.grid-nextpage
								i.icon-chevron-right


	script

		var yakcatArray = [];
		var yakcatNames = [];
		var placeArray;
		var firstLoad = true;

		$(document).ready(function() {
			
			if($.cookie("statusYakCat")){
						var status = $.cookie("statusYakCat");
						$('#filterStatus').val(status);
			}

			$('#MyGrid').datagrid({
				dataSource: new ApiDataSource({
					columns: [
					{
						property: 'title',
						label: 'Nom',
						sortable: true
					},
					{
						property: 'status',
						label: 'Statut',
						sortable: true
					},
					{
						property: 'creationDate',
						label: 'Creation Date',
						sortable: true
					},
					],
					formatter: function (items) {
						$.each(items, function (index, item) {
							item.creationDate = formatDate(item.creationDate);
							item.title = fillContent(item);
							item.status = makeStatus(item.status, item._id);
							
						});
					}
				})
			});

		});

		var ApiDataSource = function (options) {
			this._formatter = options.formatter;
			this._columns = options.columns;
		};

		ApiDataSource.prototype = {

			columns: function () {
				return this._columns;
			},

			data: function (options, callback) {

				var url = '/api/yakcats';
				var self = this;

				if (!options.search) {
					options.search = "^";
				}

				url += '/' + (options.pageIndex + 1);
				url += '/' + options.pageSize;
				url += '/' + options.search;

				var sortPropertyArray = [];
				var sortDirectionArray = [];

				// Add currently selected datagrid column to sort properties
				if (options.sortProperty) {
					sortPropertyArray.push(options.sortProperty);
					sortDirectionArray.push(options.sortDirection);
				}

				if (sortPropertyArray.length == 0) {
					sortPropertyArray.push('title');
					sortDirectionArray.push("asc");
				}
				// Would be easier if we could pass dictionaries, needs testing
				url += '/' + sortPropertyArray.join() + '/' + sortDirectionArray.join();

				// Filter by status
				var status = $('#filterStatus :selected').val();
				url += '/' + status;
				
				url += '/' + type;
				// Optional filters: Yakcats, Users
				//  - Passed as query to allow for null
				var queryChar = '?';

				
				

				$.ajax(url, {
					type: 'GET'
				}).done(function (response) {

					if (firstLoad) {
						$("#search").focus();
						$('th[data-property="creationDate"]').addClass('sorted');
						$('th[data-property="creationDate"]').append('<i class="icon-chevron-down"></i>');
						firstLoad = false;
					}

					// Prepare data to return to Datagrid
					var data = response.yakcats;
					var count = response.count;
					var startIndex = (response.pageIndex - 1) * response.pageSize;
					var endIndex = parseInt(startIndex) + parseInt(response.pageSize);
					var end = (endIndex > count) ? count : endIndex;
					var page = parseInt(response.pageIndex);
					var pages = Math.ceil(response.count / response.pageSize);
					var start = startIndex + 1;

					if (self._formatter) self._formatter(data);

					callback({ data: data, start: start, end: end, count: count, pages: pages, page: page });

				});
			}
		};

		


	
		function makeStatus(status, _id){
			switch(status)
			{
				case 1 : 
					if(user.type == 11)
						return "<select rel='"+_id+"' onchange='setNewStatus(this)'><option value='0'>Inactive</option><option value='1' selected='selected'>Active</option><option value='2'>Système</option></select>";
					else
						return "<select rel='"+_id+"' onchange='setNewStatus(this)'><option value='0'>Inactive</option><option value='1' selected='selected'>Active</option></select>";
					break;
				case 0 : 
					if(user.type == 11)
						return "<select rel='"+_id+"' onchange='setNewStatus(this)'><option value='0' selected='selected'>Inactive</option><option value='1'>Active</option><option value='2'>Système</option></select>";
					else
						return "<select rel='"+_id+"' onchange='setNewStatus(this)'><option value='0' selected='selected'>Inactive</option><option value='1'>Active</option></select>";
					break;
				case 2 : 
					if(user.type == 11)
						return "<select rel='"+_id+"' onchange='setNewStatus(this)'><option value='0'>Inactive</option><option value='1'>Active</option><option value='2' selected='selected'>Système</option></select>";
					else
						return "<select disabled rel='"+_id+"'><option value='0'>Inactive</option><option value='1'>Active</option><option value='2' selected='selected'>Système</option></select>";	
					break;
				default :
					return "";
					break;
			}
		}
		

		function setNewStatus(el){
			var _id = $(el).attr("rel");
			$.post("/yakcat/setStatus", {status: $(el).val(), _id : _id}, function(data){
					if(data.meta.code == "200"){
						var icon = "icon-wrench";
						var title_icon = "System";
						if($(el).val() == 0){
								icon = 'icon-ban-circle';
								title_icon = "Inactive";
						}
						if($(el).val() == 1){
								icon = 'icon-ok-sign';
								title_icon = "Active";
						}

						$("#icon_"+_id).attr('class',icon).attr('title',title_icon);
					}
				});
		}

		

		
		function fillContent(item) {
			var res = "";
			var icon = "icon-wrench";
			var title_icon = "System";
			res += '<span>';
			if (item.status == 1) {
				icon = 'icon-ok-sign';
				title_icon = "Active";

			}
			else if (item.status == 0) {
				icon = 'icon-ban-circle';
				title_icon = "Inactive";
			}
			res += '<span class="text-info"><i id="icon_'+item._id+'" class="' + icon + ' status" title="' + title_icon + '" ></i>' + item.title + '</span>';
			res += '<small>&nbsp;(&nbsp;#'+item._id+'</small> )</span>';
			return res;
		}

	

		

		function formatDate(creationDate) {
			var dateTmp = new Date(creationDate);
			return dateTmp.getDate()+'/'+(dateTmp.getMonth()+1)+'/'+dateTmp.getFullYear();

		}

		
		
		// Refresh on sort selection
		$('#filterStatus').live('change', function() {
			var currentSelection = $('#filterStatus :selected').val();
			$.cookie("statusYakCat",currentSelection,{ expires: 100000, path : '/' });
			refreshDatagridAndMenu();
		});

		
		function refreshDatagridAndMenu () {
			// Temporary refresh method for datagrid
			var $gridsearch = jQuery('#MyGrid').find('.search');
			var search = $gridsearch.find('input').val();
			$gridsearch.trigger('searched', search);
		}
