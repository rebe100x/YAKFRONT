mixin yakNEForm()
	button.btn#btnBack(style='display:none')
		i.icon-chevron-left
	form#yakNEForm.yakForm(action='/yakNE', method='POST', enctype='multipart/form-data', style='display:none')
		input#titleNormalizedHidden(type='hidden', name='titleNormalizedHidden', value='')
		input#yakCatIdsHidden(type='hidden', name='yakCatIdsHidden', value='')
		input#yakCatNamesHidden(type='hidden', name='yakCatNamesHidden', value='')
		input#normalizedTagsHidden(type='hidden', name='normalizedTagsHidden', value='')
		input#exactTagsHidden(type='hidden', name='exactTagsHidden', value='')
		
		input#objid(type="hidden", name="objid", value='0')
		

		div.control-group.error
				div.controls
					label.alert#err(type="text", id="err", name="err", style='display:none') Les champs en rouge sont obligatoires.
		
		legend.mainlegend Ajouter un mot clé :
		
		div.row-fluid
			div.control-group#titleGroup
				legend La tête du mot clé
				div.controls
					.span6 
						label Tête du mot clé*: 
							i.icon-question-sign#titleHelp
						input(type='text', name='title', id='title', placeholder='La tête du mot clé',autocomplete="off")
					.span6 
						label Mot clé tel qu il apparaitra sur le front:
							i.icon-question-sign#titleNormalizedHelp
						span#titleNormalized	
		div.row-fluid						
			div.control-group#tailGroup
				legend Les queues du mot clé
				div.controls
					.span6
						label Queue normalisée
							i.icon-question-sign#normalizedTagHelp
						.input-append
							input#normalizedTag(type="text", data-provide="typeahead", name="normalizedTag", autocomplete="off", placeholder='Entrer une expression...')
							button.btn#btn-normalizedTag-adder(type="button") Ajouter	
						.pillbox#pillNormalizedTag(style="display:none")
							ul
					.span6
						label Queue exacte
							i.icon-question-sign#exactTagHelp
						.input-append
							input#exactTag(type="text", data-provide="typeahead", name="exactTag", autocomplete="off", placeholder='Entrer une expression...')
							button.btn#btn-exactTag-adder(type="button") Ajouter	
						.pillbox#pillExactTag(style="display:none")
							ul		
		div.row-fluid	
			div.control-group#otherGroup
				legend Catégories associées
				div.controls				
					.span6
						label(for='category') Catégories
							i.icon-question-sign#yakcatHelp
						input#yakcat(type="text", data-provide="typeahead", name="yakcat", autocomplete="off", placeholder='Chercher une catégorie...')
						.pillbox#pillYakcat(style="display:none")
							ul
		div.row-fluid	
			div.control-group#otherGroup
				legend Description
				div.controls
					.span12									
						label Description:
							i.icon-question-sign#descriptionHelp
						textarea#description.span12(name='description', placeholder='Description',rows='3')
					
		div.row-fluid
			div.control-group#parsingGroup.clearBoth
			legend Désactiver
			div.control-group
				div.controls
					label.radio.inline Actif
						input(type="radio", name="status", value="1", checked)
					label.radio.inline Inactif
						input(type="radio", name="status", value="0")	
							
		br				
		div.control-group
			div.controls
				button.btn.btn-large.btn-inverse(type='submit', name='submit', id='submit', value='Enregistrer') Enregistrer
			
	
	script

		var yakCatIds = new Array();
		var yakCatNames = new Array();
		var exactTags = new Array();
		var normalizedTags = new Array();
		
		
		$(document).ready(function() {

			$('#title').on('keyup',function(){
				var titleNormalized = normalizeTag($(this).val()).slice(1,$(this).val().length+1);
				$('#titleNormalized').html(titleNormalized);				
				$("#yakNEForm #titleNormalizedHidden").val(titleNormalized);
				$.get('/api/yakNEExist/'+titleNormalized,function(data){
					if(data.yakNE.length > 0 ){
						$('#titleNormalized').html('<span class="alert">Ce mot clé existe déjà ! </span>'+ titleNormalized);
					}
				});
			});

			$('#titleHelp').popover({placement:'bottom',animation:true,title:'La tête du mot clé',content:"<p>C'est le tag qui apparaitra dans la news précédé d'un <b>#</b>.<br>Il est automatiquement converti en CamelCase que vous pouvez visualiser dans le champs juste à droite.<br>Tous les mots vérifiant une des queues du mot clé seront regroupés sous la tête du mot clé.<br> Par ex: en créant un mot clé de tête <b>MariagePourTous</b> et en mettant dans la queue : <b>mariage gay</b> et <b>mariage homosexuel</b> vous tagguerez toutes les infos portant sur ce sujet sous un seul mot clé ( la tête du mot clé) </p><p><b>NB : </b><u>La tête du mot clé n'est pas détectée dans l'analyse sémantique.</u><br> Il faut donc parfois ajouter le mot clé de tête dans la queue, mais pas toujours .. à vous d'y réfléchir. </p>",html:true});
			$('#titleNormalizedHelp').popover({placement:'bottom',animation:true,title:'La tête du mot clé normalisée',content:"<p>Les tags sont automatiquement transformés en HashTag du type <i>CamelCase</i></p>",html:true});
			$('#descriptionHelp').popover({animation:true,title:'Description',content:"<p>La description n'apparait qu'ici et est juste pour vous aider à comprendre un mot clé.<br> Remplissez là soigneusement si vous voulez que les autres opérateurs comprenne votre travail.</p>",html:true});
			$('#yakcatHelp').popover({animation:true,title:'Catégorie',content:"<p>Vous pouvez associer des catégories à ce mot clé. Lorsqu'un élément de queue est détecté dans un texte, on attribura automatiquement cette catégorie à la news.</p>",html:true});
			$('#normalizedTagHelp').popover({animation:true,title:'Queue normalisée',content:"<p>Les tags de la queue normalisée font l'objet d'une détection <b>non sensible à la casse</b> et </b>non sensible la ponctuation</b>.<br> Vous pouvez donc mettre ici les expressions plus souples qui peuvent changer de forme ( majuscule de début de phrase, ponctuation acollé... ) </p>",html:true});
			$('#exactTagHelp').popover({animation:true,title:'Queue exact',content:"<p>Les tags de la queue exacte font l'objet d'une détection <b>sensible à la casse</b> et <b>sensible la ponctuation</b>.<br> Vous pouvez donc mettre ici les expressions rigoureusement cherchées. Par exemple: les expressions qui peuvent porter à confusion : <b>Croix-Rouge</b>  ou encore les sigles : <b>CARE</b> (pour l'ONG).</p>",html:true});	
			

			$('#yakcat').typeahead({
				minLength : 3,
				source: function (typeahead, query) {
					$.ajax({
							dataType: "json",
							url: "/api/cats",				
							success: function( ajax ) {
								typeahead.process(ajax.data.cats);
							}
						})},
				property: "title",
				onselect: function(obj) { 
					$("#pillYakcat ul").append("<li class='yakcat-val status-success' data-id='"+obj._id+"' data-title='"+obj.title+"' >"+obj.title+"</li>");
					$('#yakcat').val('').focus();
					yakCatIds.push(obj._id);
					yakCatNames.push(obj.title);
					$('#yakCatIdsHidden').val(yakCatIds.join(','));
					$('#yakCatNamesHidden').val(yakCatNames.join(','));
				}
			});

			$("#pillYakcat ul").unbind('click').on('click','li',function(){
				yakCatIds.cleanArrayByName($(this).attr('data-id'));
				yakCatNames.cleanArrayByName($(this).attr('data-title'));
				$('#yakCatIdsHidden').val(yakCatIds.join(','));
				$('#yakCatNamesHidden').val(yakCatNames.join(','));
			});
			
			
			$('#btn-normalizedTag-adder').unbind('click').on('click',function(event){
				event.preventDefault();
				if($('#normalizedTag').val() != ''){
					var tags = $('#normalizedTag').val().split(',');
					for(i = 0; i< tags.length;i++){
						$("#pillNormalizedTag ul").append("<li class='source-val status-warning' data-value='"+tags[i]+"'>"+tags[i]+"</li>");
						normalizedTags.push(tags[i]);
					}
					$('#normalizedTagsHidden').val(normalizedTags.join(','));
					$('#normalizedTag').val('').focus();
				}
				return false;
			});	

			$("#pillNormalizedTag ul").unbind('click').on('click','li',function(){
				normalizedTags.cleanArrayByName($(this).attr('data-value'));
				$('#normalizedTagsHidden').val(normalizedTags.join(','));
			});


			$('#btn-exactTag-adder').unbind('click').on('click',function(event){
				event.preventDefault();
				if($('#exactTag').val() != ''){
					var tags = $('#exactTag').val().split(',');
					for(i = 0; i< tags.length;i++){
						$("#pillExactTag ul").append("<li class='source-val status-important' data-value='"+tags[i]+"'>"+tags[i]+"</li>");
						exactTags.push(tags[i]);
					}
					$('#exactTagsHidden').val(exactTags.join(','));
					$('#exactTag').val('').focus();
				}
				return false;
			});	

			$("#pillExactTag ul").unbind('click').on('click','li',function(){
				exactTags.cleanArrayByName($(this).attr('data-value'));
				$('#exactTagsHidden').val(exactTags.join(','));
			});
			
				
		});
		
		
		
		/*Form custom validation*/
		$('#yakNEForm').unbind('submit').on('submit',function(){
			var err = false;

			$('.alert-error').hide();
			var title = $('#title').val();
			if(title == ""){
				setError('#title','Entrer une tête pour ce mot clé');
				err = true;
			}else{
				var titleNormalized = normalizeTag(title);
				$.get('/api/yakNEExist/'+titleNormalized,function(data){
					if(data.yakNE){
						setError('#title','Ce mot clé existe déjà !'+ titleNormalized);
						err=true;
					}else
						$('#title').append('Mot clé : '+titleNormalized);
				});
			}

			
			if($('#normalizedTagsHidden').val() == "" && $('#exactTagsHidden').val() == "" ){
				setError('#tailGroup','Définir soit un une queue exacte, soit une queue normalisée');
				err = true;
			}
			


			if (err){
				$('#err').show();
				return false;
			}else
				return true;
		});	
		
		

	