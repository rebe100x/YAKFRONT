mixin zoneForm()
	button.btn#btnBack(style='display:none')
		i.icon-chevron-left
	form.yakForm#zoneForm(action='/zone', method='POST', enctype='multipart/form-data', style='display:none')
		input#latCT(type="hidden",data-provide="typeahead", name="latCT")
		input#lngCT(type="hidden",data-provide="typeahead", name="lngCT")
		input#latTR(type="hidden",data-provide="typeahead", name="latTR")
		input#lngTR(type="hidden",data-provide="typeahead", name="lngTR")
		input#latBL(type="hidden",data-provide="typeahead", name="latBL")
		input#lngBL(type="hidden",data-provide="typeahead", name="lngBL")
		input#objid(type="hidden",data-provide="typeahead", name="objid", value='0')
		
		legend Ajouter une zone
		div.control-group.error
				div.controls
					label.alert#err(type="text", id="err", name="err", style='display:none') Les champs en rouge sont obligatoires.
		div.row-fluid		
			div.control-group#nameGroup
				div.controls
					.span6
						label Nom
						input.big(type='text', name='name', id='name', placeholder='Nom')
						span#numero
					.span6
						label Aide à la localisation:
						div.input-append.searchInput
							input.medium(type='text', name='boxArea', id='boxArea', placeholder='Entrer une zone géographique',autocomplete="off")
							button.btn#btn-zone-searcher(type="button") Appliquer cette zone sur la carte
							

		
		div.row-fluid				
			div.control-group#statusGroup
				div.controls
					label.radio.inline Actif
						input(type="radio", name="status", value="1", checked)
					label.radio.inline Inactif
						input(type="radio", name="status", value="0")	
							
		div.row-fluid		
			div.control-group
				div.controls
					button.btn.btn-large.btn-inverse(type='submit', name='submit', id='submit', value='Enregistrer') Enregistrer


	script
	
		$(document).ready(function() {
				
			$('#boxArea').typeahead({
				minLength : 3,							
				source: function (typeahead, query) {
					if(query.length >= 3){
						encodeURIComponent(query);
						$("#boxArea").addClass('searching');
						var addressQuery = {"address": query ,"region":"fr","language":"fr"};
						var geocoder = new google.maps.Geocoder();
						geocoder.geocode( addressQuery, function(results, status) {						
							if (status == google.maps.GeocoderStatus.OK) {

								$.map( results, function( item ) {fixGmapResult(item);});

								typeahead.process(results);
								//console.log(results);
								$("#boxArea").removeClass('searching');
							} 
						});
					}
				},
				property: "formatted_address",
				onselect: function(obj) { 
					$("#boxArea").removeClass('searching');
					
					var placeGmap = getPlaceFromGmapResult(obj);

					$('#boxArea').val(placeGmap.title);
					$("#zoneForm #latBL").val(placeGmap.bounds.bl.lat);
					$("#zoneForm #lngBL").val(placeGmap.bounds.bl.lng);
					$("#zoneForm #latCT").val(placeGmap.location.lat);
					$("#zoneForm #lngCT").val(placeGmap.location.lng);
					$("#zoneForm #latTR").val(placeGmap.bounds.tr.lat);
					$("#zoneForm #lngTR").val(placeGmap.bounds.tr.lng);
				
					var latLng = new google.maps.LatLng(placeGmap.location.lat,placeGmap.location.lng);
					map.panTo(latLng);
					placeMarker(latLng,markerLocation);
					var latLngBL = new google.maps.LatLng(placeGmap.bounds.bl.lat,placeGmap.bounds.bl.lng);
					var latLngTR = new google.maps.LatLng(placeGmap.bounds.tr.lat,placeGmap.bounds.tr.lng);
					markerLocationBL.setPosition(latLngBL);
					markerLocationTR.setPosition(latLngTR);
					drawRect();
				}
			});
				
		});
		

		
		/*Form custom validation*/
		$('#zoneForm').unbind('submit').on('submit',function(){
			var err = false;
			$('.alert-error').hide();
			if($('#name').val() == ""){
				setError('#name','Entrer un nom cette zone');
				err = true;
			}
			

			if (err){
				$('#err').show();
				return false;
			}else
				return true;
		});	
		
		
