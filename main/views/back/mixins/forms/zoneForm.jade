mixin zoneForm()
	button.btn#btnBack(style='display:none')
		i.icon-chevron-left
	form.yakForm#zoneForm(action='/zone', method='POST', enctype='multipart/form-data', style='display:none')
		input#addressInput(type='hidden', name='addressInput', value='')
		input#latitude(type="hidden",data-provide="typeahead", name="latitude")
		input#longitude(type="hidden",data-provide="typeahead", name="longitude")
		input#objid(type="hidden",data-provide="typeahead", name="objid", value='0')
		
		legend Ajouter une zone
		div.control-group.error
				div.controls
					label.alert#err(type="text", id="err", name="err", style='display:none') Les champs en rouge sont obligatoires.
		div.row-fluid		
			div.control-group#nameGroup
				div.controls
					.span6
						label Nom
						input.big(type='text', name='name', id='name', placeholder='Nom')
		div.row-fluid		
			div.control-group#addressGroup
				div.controls
					.span6
						label(for='address') Centre de la zone:
						input(type="text",data-provide="typeahead", id="address", name="address", autocomplete="off", placeholder="Chercher...")
		div.row-fluid		
			div.control-group#TLGroup
				div.controls
					.span6
						label(for='TL') Top Left de la zone: (Nord Ouest)
						input(type="text",data-provide="typeahead", id="TL", name="TL", autocomplete="off", placeholder="Chercher...")
		
		div.row-fluid		
			div.control-group#BRGroup
				div.controls
					.span6
						label(for='BR') Bottom Right de la zone: (Sud Est)
						input(type="text",data-provide="typeahead", id="BR", name="BR", autocomplete="off", placeholder="Chercher...")
					
		div.row-fluid				
			div.control-group#statusGroup
				div.controls
						label Status
						select(name="zoneStatus", id="zoneStatus")
							option(value="1") Validée
							option(value="3") Blacklistée
							
		div.row-fluid		
			div.control-group
				div.controls
					button.btn.btn-large.btn-inverse(type='submit', name='submit', id='submit', value='Enregistrer') Enregistrer


	script
	
		$(document).ready(function() {

			listenerHandle = google.maps.event.addListener(map, 'click', function(event) {
				placeMarker(event.latLng,markerLocation);
				getformattedAddress(event.latLng);
			});

			listenerHandleDrag = google.maps.event.addListener(markerLocation, 'dragend', function() {
				var position = markerLocation.getPosition();
				getformattedAddress(position);

			});

			
			/*CLEAN LOCATION*/
			$('#address').unbind('blur').on('blur',function(){
				if($(this).val() == ''){
					$("#zoneForm #longitude").val('');
					$("#zoneForm #latitude").val('');
					markerLocation.setVisible(false);
				}
			});
			
			
			$('#address').typeahead({
				minLength : 3,							
				source: function (typeahead, query) {
					if(query.length >= 3){
						encodeURIComponent(query);
						$("#address").addClass('searching');
						var addressQuery = {"address": query ,"region":"fr","language":"fr"};
						var geocoder = new google.maps.Geocoder();
						geocoder.geocode( addressQuery, function(results, status) {						
						if (status == google.maps.GeocoderStatus.OK) {
							typeahead.process(results);
							$("#address").removeClass('searching');
						} 
						});
					}
				},
				property: "formatted_address",
				onselect: function(obj) { 
					$("#address").removeClass('searching');
					var placeGmap = getPlaceFromGmapResult(obj);
					$('#address').val(placeGmap.title);
					$("#zoneForm #longitude").val(placeGmap.location.lng);
					$("#zoneForm #latitude").val(placeGmap.location.lat);
					var latLng = new google.maps.LatLng(placeGmap.location.lat,placeGmap.location.lng);
					map.panTo(latLng);
					placeMarker(latLng,markerLocation);
				}
			});	
		});
		

		
		/*Form custom validation*/
		$('#zoneForm').unbind('submit').on('submit',function(){
			var err = false;
			$('.alert-error').hide();
			if($('#name').val() == ""){
				setError('#name','Entrer un nom cette zone');
				err = true;
			}else{
				$.get('/api/zone/maxnum',function(data){
					if(!data.num){
						$('#name').append(' Numéro : '+data.num);
					}else
						err = true;
				});
			}
			
			if($('#address').val() != ""){
				setError('#link','Entrer un centre pour cette zone');
				err = true;
			}
			if($('#TL').val() != ""){
				setError('#TL','Entrer un coin Top Left');
				err = true;
			}
			if($('#BR').val() != ""){
				setError('#BR','Entrer un coint Bottom Right');
				err = true;
			}				
			

			if (err){
				$('#err').show();
				return false;
			}else
				return true;
		});	
		
		

		function reduceZoneOptions(lat,lng,zone){
			$.get('api/zones/'+lat+'/'+lng,function(data){
				$('#zone').html('');	
				$.each(data.zones, function (key,val) {
					$('#zone').append('<option value ="'+val.num+'">'+val.name+'</option>');
				});
				if(typeof zone)
					$("#zoneForm #zone").val(zone);
			});
		}