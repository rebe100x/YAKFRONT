mixin placeForm()
	button.btn#btnBack(style='display:none')
		i.icon-chevron-left
	form.yakForm#placeForm(action='/place', method='POST', enctype='multipart/form-data', style='display:none')
		input#yakCatIdsHidden(type='hidden', name='yakCatIdsHidden', value='')
		input#yakCatNamesHidden(type='hidden', name='yakCatNamesHidden', value='')
		input#tagsHidden(type='hidden', name='tagsHidden', value='')
		input#placeInput(type='hidden', name='placeInput', value='')
		input#objid(type="hidden",data-provide="typeahead", name="objid", value='0')
		input#hiddenOrigin(type="hidden",data-provide="typeahead", name="hiddenOrigin", value='0')
		input#zoneName(type="hidden", name="zoneName", value='')
		input#thumbHidden(type="hidden", name="thumbHidden", value='')
		input#status(type="hidden", name="status", value='')


		legend.mainlegend Ajouter un lieu
		div.control-group.error
				div.controls
					label.alert#err(type="text", id="err", name="err", style='display:none') Les champs en rouge sont obligatoires.
		div.row-fluid
			legend Infos générales:
			div.control-group#titleGroup
				div.controls
					div.row-fluid
						.span6
							label Nom: 
								i.icon-question-sign#titleHelp
							input.hashtagMaker(type='text', name='title', id='title', placeholder='Nom du lieu')
						.span6
							label(for='picture').clearBoth Photo: 
							span#picturePreview
								img.img-rounded(style='width:100px;display:none;')
							input.span6#picture(type="file",style="display:block",name="picture")
					div.row-fluid
						.span6
							label Description: 
								i.icon-question-sign#descriptionHelp
							textarea.hashtagMaker(type='text', id='content', name='content', placeholder="Quelques détails sur le lieu à ajouter, avec la possibilité d'ajouter des #hashtags.", rows='8')
						.span6
							label Licence:
								i.icon-question-sign#licenceHelp
							input(type='text', name='licence', id='licence', placeholder='Type de licence', autocomplete="off")
							label Lien vers la source:
								i.icon-question-sign#outgoinglinkHelp
							input.big(type='text', name='outgoinglink', id='outgoinglink', placeholder='Lien web', , autocomplete="off")
							label Origine:
								i.icon-question-sign#origineHelp
							input(type='text', name='origine', id='origine', placeholder='Qui a crée le lieu ?', autocomplete="off")
							
					
		div.row-fluid
			legend Localisation:
			div.control-group#adresseGroup.clearBoth
				div.controls
					div.row-fluid
						.span6
							label(for='Place') Adresse:
								i.icon-question-sign#placeHelp
							div#placePreview
							input(type="text",data-provide="typeahead", id="place", name="place", autocomplete="on", placeholder="Cliquer sur la carte ou entrer l'adresse")
						.span6
							label(for='zone') Zone:
								i.icon-question-sign#zoneHelp
							select#zone(name='zone')
		div.row-fluid
			legend Catégories & tags:
			div.control-group#yakcatGroup
				div.controls
					.col
						label(for='category') Catégories: 
							i.icon-question-sign#yakcatHelp
						input(type="text", data-provide="typeahead", id="yakcat", name="yakcat", autocomplete="off", placeholder='Un ou plusieurs thèmes')
						.pillbox#pillYakcat(style="display:none")
							ul
					.col
						label Tags :
							i.icon-question-sign#freetagHelp
						.input-append
							input#freetag(type="text", data-provide="typeahead", name="freetag", autocomplete="off", placeholder='Entrer un tag...')
							button.btn#btn-freetag-adder(type="button") Ajouter	
						.pillbox#pillFreetag(style="display:none")
							ul
		div.row-fluid
			legend Sémantique: 
				small.inline Ajouter ce lieu aux dictionnaires de reconnaissance sémantique (ontology matcher)	
					i.icon-question-sign#semanticHelp
			div.control-group#ontologyGroup
				div.controls
					label.checkbox.inline
						input(type="checkbox", id="yakCatYakdico", name="yakCatYakdico", value="yakCatYakdico")
						| Inclure dans le dico des Lieux
					label.checkbox.inline
						input(type="checkbox", id="yakCatVille", name="yakCatVille", value="yakCatVille")
						| Inclure dans le dico des Villes
		div.row-fluid
			legend Infos détaillées:
			div.control-group.clearBoth
				div.controls
					label Contact:
					.col
						input#tel(type="text", data-provide="typeahead", name="tel", placeholder='Téléphone')
					.col
						input#mobile(type="text", data-provide="typeahead", name="mobile", placeholder='Mobile')
					.col
						input#mail(type="text", data-provide="typeahead", name="mail", placeholder='Email')
					.col
						input#web(type="text", data-provide="typeahead", name="web", placeholder='Site web')
					label.clearBoth Horaires & Transport:
					.col
						input#opening(type="text", data-provide="typeahead", name="opening", placeholder="Horaires d'ouverture")
					.col
						input#closing(type="text", data-provide="typeahead", name="closing", placeholder='Horaires de fermeture')
					.col
						input#special(type="text", data-provide="typeahead", name="special", placeholder='Ouverture exceptionnelle')
					.col
						input#transportation(type="text", data-provide="typeahead", name="transportation", placeholder='Comment y arriver? (ex: métro ligne 2 station Jaurès)')
			//
				div.control-group
					div.controls
						label.radio.inline Valider
							input#option1(type="radio", name="status", value="1" , checked)
						label.radio.inline En attente
							input#option4(type="radio", name="status", value="2")
						label.radio.inline Désactiver
							input#option2(type="radio", name="status", value="3")
			div.control-group
				div.controls
					button.btn.btn-large.btn-inverse(type='submit', name='submit', id='submit', value='Enregistrer') Enregistrer

					//button.btn.btn-large.btn-inverse#enregistrer(value='Enregistrer') Enregistrer

script

	var yakCatIds = new Array();
	var yakCatNames = new Array();
	var freeTags = new Array();
	

	$(document).ready(function() {

		$('#titleHelp').popover({animation:true,title:"Titre du lieu",content:"<p>Un slug du titre est automatiquement généré pour un accès SEO friendly de ce lieu.</p>",html:true});
		$('#licenceHelp').popover({animation:true,title:'Licence',content:"<p>Le type de licence, par défaut : <b>Opensource</b></p>",html:true});
		$('#origineHelp').popover({animation:true,title:'Origine',content:"<p>La personne ou le batch qui a crée ce lieu.</p>",html:true});
		$('#outgoinglinkHelp').popover({animation:true,title:'Lien externe',content:"<p>Entrer le lien vers le site du lieu.</p>",html:true});
		$('#descriptionHelp').popover({animation:true,title:"Description",content:"<p>Une description du lieu.</p>",html:true});
		$('#yakcatHelp').popover({animation:true,title:'Catégorie',content:"<p>Vous pouvez associer ce lieu à une catégorie Yakwala</p>",html:true});
		$('#freetagHelp').popover({animation:true,title:'Tags',content:"<p>Vous pouvez associer ce lieu à un mot clé. Un complétion automatique est proposée sur la base des mots clés déjà utilisés mais vous pouvez entrer n'importe quel mot. <br> Attention il est préférable de n'utiliser qu'un mot clé pour toutes les infos se rattachant à un même sujet (attention à l'orthographe et les majuscules.)  </p>",html:true});
		$('#placeHelp').popover({animation:true,title:"Localisation de l'info",content:"<p>Entrer une addresse et choisir une proposition ou bien cliquer sur la carte à gauche et déplacer le marqueur.</p>",html:true});
		$('#zoneHelp').popover({animation:true,title:'La zone',content:"<p>Les zones sont définies dans l'onglet Zones.<br> </p>",html:true});
		$('#semanticHelp').popover({placement:'left',animation:true,title:'Sémantique',content:"<p>Ce lieu peut être intégré aux dictionnaires d'ontologie utilisés par Exalead pour l'analyse sémantique.<br> <br> Le dictionnaire des villes ne doit contenir que des villes.<br>Le dictionnaire Yakdico est un dictionnaire de lieux.</p>",html:true});
		

		// YAKCATS
		$('#yakcat').typeahead({
			minLength : 3,
			source: function (typeahead, query) {
				if(query.length>=1){	
				$.ajax({
						dataType: "json",
						url: "/api/cats",				
						success: function( ajax ) {
							typeahead.process(ajax.data.cats);
						}
					})
				}
			},
			property: "title",
			onselect: function(obj) { 
				$("#pillYakcat ul").append("<li class='yakcat-val status-important' data-id='"+obj._id+"' data-title='"+obj.title+"' >"+obj.title+"</li>");
				$('#yakcat').val('').focus();
				yakCatIds.push(obj._id);
				yakCatNames.push(obj.title);
				$('#yakCatIdsHidden').val(yakCatIds.join(','));
				$('#yakCatNamesHidden').val(yakCatNames.join(','));
			}
		});

		$("#pillYakcat ul").unbind('click').on('click','li',function(){
			yakCatIds.cleanArrayByName($(this).attr('data-id'));
			yakCatNames.cleanArrayByName($(this).attr('data-title'));
			$('#yakCatIdsHidden').val(yakCatIds.join(','));
			$('#yakCatNamesHidden').val(yakCatNames.join(','));
		});

		// FREE TAGS
		$('#btn-freetag-adder').unbind('click').on('click',function(event){
			event.preventDefault();
			if($('#freetag').val() != ''){
				var tags = $('#freetag').val().split(',');
				for(i = 0; i< tags.length;i++){
					$("#pillFreetag ul").append("<li class='freetag-val' data-value='"+tags[i].trim()+"'>"+tags[i].trim()+"</li>");
					freeTags.push(tags[i].trim());
				}
				$('#tagsHidden').val(freeTags.join(','));
				$('#freetag').val('').focus();
			}
			return false;
		});	

		$('#freetag').typeahead({
			minLength : 3,
			source: function (typeahead, query) {
				if(query.length>=1){
					$.ajax({
							dataType: "json",
							url: "/api/yakNEExist/"+query,				
							success: function( ajax ) {
								typeahead.process(ajax.yakNE);
							}
						})
				}
			},
			property: "title",
			onselect: function(obj) { 
				$("#pillFreetag ul").append("<li class='freetag-val status-info' data-value='"+obj.title+"'>"+obj.title+"</li>");
				$('#freetag').val('').focus();
				freeTags.push(obj.title);
				$('#tagsHidden').val(freeTags.join(','));
			}
		});

		$("#pillFreetag ul").unbind('click').on('click','li',function(){
			freeTags.cleanArrayByName($(this).attr('data-value'));
			$('#tagsHidden').val(freeTags.join(','));
		});


		/*THUMB*/
		$('#picture').live('change', function () {
			if ( window.FileReader ) {
				var fileList = this.files;
				var file = fileList[0];
				var r = new FileReader();
				r.onload = function () {
					var binimage = r.result;
					binimage1 = binimage.replace('data:'+file.type+';base64,', '');
					var src = "data:"+file.type+";base64," + binimage1;
					$("#picturePreview").show();
					$("#picturePreview img").attr('src',src).show();
				};
				r.readAsDataURL(file);
			}
		});

		
		// HASHTAG creation from title field
		$(".hashtagMaker").keyup(function(event) {
			hashtagTmp = [];
			var inputStrArray = ($('#content').val()+' '+$('#title').val()).split(' ');
			for(i = 0; i< inputStrArray.length;i++){
				if(inputStrArray[i].match(rule)){
					hashtagTmp.push(inputStrArray[i]);
					$('#freetag').val(hashtagTmp.toString().replace(rule2,''));
				}
			}
		});

		// SEARCH PLACE GMAP
		$('#placeForm #btn-place-adder').click(function(){
			var addressString = $('#placeForm #place').val();
			if(addressString != "Rechercher..." && addressString != "" && addressString.length > 1){
				var addressQuery = {"address": addressString,"latLng":map.getCenter(),"bounds":map.getBounds()};
				var geocoder = new google.maps.Geocoder();
				geocoder.geocode(addressQuery, function(results, status) {
					if (status == google.maps.GeocoderStatus.OK) {
						var result = fixGmapResult(results[0]);
						map.setCenter(result.geometry.location);
						markerLocation.setVisible(true);
						markerLocation.setPosition(result.geometry.location);
						placeMarker(result.geometry.location,markerLocation);
						var placeGmap = getPlaceFromGmapResult(result);
						placeArray = placeGmap;
						$("#placeForm #placeInput").val(JSON.stringify(placeArray));
						$('#placeLabel').first().remove();
						$('#placeForm #btn-place-adder').parent().before("<div id='placeLabel'><i class='icon-remove icon-pointer' onclick='placeArray=null;$(\"#placeForm #placeInput\").val(JSON.stringify(placeArray));$(this).parent().remove();'></i> "+result.formatted_address+"</div>");
						$("#placeForm #place").val("");
						reduceZoneOptions(result.location.lat,result.location.lng);
					} else {
						$('#placeForm #place').select();
					}
				});
			}
		});
		
		// ADDRESS FIELD
		$('#placeForm #place').typeahead({
			minLength : 3,							
			source: function (typeahead, query) {
				if(query.length >= 3){
					encodeURIComponent(query);
					$("#placeForm #place").addClass('searching');
					var addressQuery = {"address": query ,"region":"fr","language":"fr"};
					var geocoder = new google.maps.Geocoder();
					geocoder.geocode( addressQuery, function(results, status) {						
						if (status == google.maps.GeocoderStatus.OK) {
							$.map( results, function( item ) {fixGmapResult(item);});
							typeahead.process(results);
							$("#placeForm #place").removeClass('searching');
						} 
					});
				}
			},
			property: "formatted_address",
			onselect: function(obj) { 
				$("#placeForm #place").removeClass('searching');
				var placeGmap = getPlaceFromGmapResult(obj);
				$('#placeForm #place').val(placeGmap.title);
				placeArray = placeGmap;
				$("#placeForm #placeInput").val(JSON.stringify(placeArray));
				$('#placeForm #placePreview').html("<div id='placeLabel'><i class='icon-remove' onclick='$(\"#place\").val(\"\");placeArray=null;$(\"#placeInput\").val(JSON.stringify(placeArray));$(this).parent().remove();'></i> "+obj.formatted_address+"</div>");
				var latLng = new google.maps.LatLng(placeGmap.location.lat,placeGmap.location.lng);
				map.panTo(latLng);
				placeMarker(latLng,markerLocation);
				reduceZoneOptions(latLng.lat(),latLng.lng());
			}
		});

		$('#placeForm #licence').typeahead({
			source: ["Opensource", "Reserved"]
		});


		/*Set zone select button*/
		$.get('api/zones',function(data){
			$('#zone').append("<option value =''>Choisir une zone</option>");	
			$.each(data.zone, function (key,val) {
				$('#zone').append("<option value ='"+val.num+"'>"+val.name+"</option>");
			});	
		});
		
		$('#zone').change(function(){
			$('#zoneName').val($("#zone option:selected").html());
		});

		/*
		$("li.yakcat-val").live('click', function() {
			if ($("#pillYakcat").pillbox("items").length == 0) {
				$("#pillYakcat").hide();
			}
		});

		
			
		*/


		
		/*Form custom validation*/
		$('#placeForm').unbind('submit').on('submit',function(){

		
		var err = false;

		$('.alert-error').hide();
			
		if ($('#placeForm #title').val() == ""){
			setError('#title','Entrer un nom pour ce lieu');
			err = true;
		}else{
			var placeName = S($('#title').val()).slugify();
			if($('#objid').val() == ''){
				$.get('/api/placeExist/'+placeName,function(data){
					if(data.place){
						setError('#title','Ce lieu existe déjà: '+data.place.title);
						err=true;
					}
				});
			}
		}

		if ($('#licence').val() == ""){
			$('#licence').val('Opensource');
		}


		if (placeArray == null || placeArray.length == 0){
			setError('#place','Définissez la position de ce lieu en cliquant sur la carte ou en entrant une addresse ci dessous:');
			err = true;
		}
		

		if (err){
			$('#err').show();
			return false;
		}else
			return true;
	});	


	});






	function reduceZoneOptions(lat,lng){
		if(lat && lng){
			$.get('api/zonesContaining/'+lat+'/'+lng,function(data){
				$('#zone').html('');	
				$('#zone').append("<option value =''>Choisir une zone</option>");	
				$.each(data.zones, function (key,val) {
					$('#zone').append('<option value ="'+val.num+'">'+val.name+'</option>');
				});
			});	
		}
	}