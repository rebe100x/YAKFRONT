mixin feedForm()
	button.btn#btnBack(style='display:none')
		i.icon-chevron-left
	form#feedForm.yakForm(action='/feed', method='POST', enctype='multipart/form-data', style='display:none')
		input#yakCatIdsHidden(type='hidden', name='yakCatIdsHidden', value='')
		input#yakCatNamesHidden(type='hidden', name='yakCatNamesHidden', value='')
		input#tagsHidden(type='hidden', name='tagsHidden', value='')
		input#linkSource(type='hidden', name='linkSource', value='')
		input#fileSource(type='hidden', name='fileSource', value='')		
		input#latitude(type="hidden", name="latitude")
		input#longitude(type="hidden", name="longitude")
		input#update(type="hidden", name="update", value='0')
		input#objid(type="hidden", name="objid", value='0')
		

		div.control-group.error
				div.controls
					label.alert#err(type="text", id="err", name="err", style='display:none') Les champs en rouge sont obligatoires.
		
		legend.mainlegend Ajouter un flux
		
		div.row-fluid
			legend Infos générales:
			div.control-group#titleGroup
				div.controls
					div.row-fluid
						.span6
							label Nom*:
							input(type='text', name='humanName', id='humanName', placeholder='Le nom du flux')
						.span6
							label Imagette:
							span#picturePreview
							input.span6#picture(type="file",style="display:block",name="picture")
					div.row-fluid
						.span6
							label Licence*:
							input(type='text', name='licence', id='licence', placeholder='Licence')
						.span6
							label Lien externe:
							input(type='text', name='link', id='link', placeholder='Lien vers la source de la donnée')
					div.row-fluid
						.span6
							label Combien de jours l info restera sur le front ?*
							div.input-append.dropdown.combobox#persistDays
								input(type='text', placeholder="Jours de persistence", name="persistDays")
								button.btn(data-toggle="dropdown")
									i.caret
								ul.dropdown-menu
									li(data-value="1")
										a(href="") 1
									li(data-value="2")
										a(href="") 2
									li(data-value="3")
										a(href="") 3
									li(data-value="7")
										a(href="") 7
									li(data-value="30")
										a(href="") 30
									li(data-value="90")
										a(href="") 90
									li(data-value="365")
										a(href="") 365
						.span6
							label Description:
							textarea#description.span12.hashtagMaker(name='description', placeholder='Texte: vous pouvez utiliser des hashtags dans votre texte ( #maisonavendre )',rows='3')
		div.row-fluid
			legend Metadata:		
			div.control-group#yakType.row-fluid
				.span12
					label Type info:
					label.radio.inline Actu
						input(type="radio", name="yakType", value="1")
					label.radio.inline Agenda
						input(type="radio", name="yakType", value="2")
					label.radio.inline Info pratiques
						input(type="radio", name="yakType", value="3")
				
			div.control-group
				div.controls.row-fluid
					.span6
						label(for='category') Catégories
						input#yakcat(type="text", data-provide="typeahead", name="yakcat", autocomplete="off", placeholder='Chercher une catégorie...')
						.pillbox#pillYakcat(style="display:none")
							ul
					.span6
						label Tags
						.input-append
							input#freetag(type="text", data-provide="typeahead", name="freetag", autocomplete="off", placeholder='Entrer un tag...')
							button.btn#btn-freetag-adder(type="button") Ajouter	
						.pillbox#pillFreetag(style="display:none")
							ul						
		div.row-fluid
			legend Localisation:						
			div.control-group#locationGroup.clearBoth
				div.controls.row-fluid	
					.span6
						label(for='defaultPlaceName') Localisation du flux:
						input(type="text",data-provide="typeahead", id="defaultPlaceName", name="defaultPlaceName", autocomplete="off", placeholder="Chercher...")
					.span6
						label Si l'info n'est pas géolocalisée...	
						select.big#defaultPrintFlag
							option(value="0") ... ne pas afficher sur la carte mais afficher sur le fil info
							option(value="1") ... afficher sur la carte + fil info
							option(value="3") ... ne pas afficher l info du tout
							option(value="2") ... ne pas faire de géoloc et la placer au point par défaut
				div.controls.row-fluid	
					.span6
						label(for='defaultPlaceSearchName') Texte de recherche sur Google Map:
						input(type="text", id="defaultPlaceSearchName", name="defaultPlaceSearchName", autocomplete="off", placeholder="Texte de recherche sur google map.")
		div.row-fluid
			legend Sources des données:
			div.control-group.clearBoth#dataSource
				div.controls.row-fluid		
					.span6			
						label Uploader un fichier : 
						input(type="file", id="fileupload", name="files[]", data-url="http://localhost:"+JSON.parse(conf).fileport, multiple)
						div#progress
							div.bar.alert.alert-success(style="width: 0%;")
								span.alertText 0%
						.pillbox#pillSourceFile(style="display:none")
							ul
					.span6
						label Source(s) web
						.input-append	
							input.big(type='text', name='source', id='source', placeholder='http://...')
							button.btn#btn-source-adder(type="button") Ajouter
						.pillbox#pillSourceLink(style="display:none")
							ul	
		div.row-fluid
			legend Parsing:
			div.control-group#parsingGroup.clearBoth
				div.controls.row-fluid
					.span6
						label Type de flux : 
						select#feedType(name='feedType')
							option(value="RSS") RSS
							option(value="CSV") CSV
							option(value="YAKMADE") YAKMADE
						div#alertFeedType.alert.alert-info
							button.close(type="button", data-dismiss="alert") x
							span.alertText
					.span6
						label &nbsp;
						button.btn.btn-primary.btn-warning(type='button', name='parsing', id='parsing') Définir le parsing

		div.row-fluid
			div.control-group#parsingGroup.clearBoth
			legend Désactiver
			div.control-group
				div.controls
					label.radio.inline Actif
						input(type="radio", name="status", value="1", checked)
					label.radio.inline Inactif
						input(type="radio", name="status", value="0")	
							
		br				
		div.control-group
			div.controls
				button.btn.btn-large.btn-inverse(type='submit', name='submit', id='submit', value='Enregistrer') Enregistrer
			br
			br
			br		
		div#parsingModal.modal.hide.fade.big
			div.modal-header
				button.big(type="button", class="close", data-dismiss="modal", aria-hidden="true") X
				h3(id="myModalLabel") Définir le modèle de parsing:
			div.modal-body
				div#alertInfo.alert.alert-info
					button.close(type="button", data-dismiss="alert") x
					span.alertText
				div.control-group#titleGroup
					div.controls
						label Titre de l info:*
						input(type='text', name='infoTitle', id='infoTitle', placeholder="Titre")
						label Corps de l info:
						input(type='text', name='infoContent', id='infoContent', placeholder="Corps")
						label Adresse:
						input(type='text', name='infoAddress', id='infoAddress', placeholder="Adresse")
						label Latitude:
						input(type='text', name='infoLatitude', id='infoLatitude', placeholder="Latitude")
						label Longitude:
						input(type='text', name='infoLongitude', id='infoLongitude', placeholder="Longitude")
						label Lien web vers l info:
						input(type='text', name='infoLink', id='infoLink', placeholder="Lien web vers l'info")
						label Imagette:
						input(type='text', name='infoThumb', id='infoThumb', placeholder="Imagette")
						label Catégories Yakwala:
						input(type='text', name='infoCat', id='infoCat', placeholder="Catégories Yakwala")
						label Tags:
						input(type='text', name='infoTag', id='infoTag', placeholder="Tags")
						label Lieu:
						input(type='text', name='infoPlace', id='infoPlace', placeholder="Le lieu")
						label Date de l évènement:
						input(type='text', name='infoEventDate', id='infoEventDate', placeholder="Date de l'évènement")
						label Date de publication:
						input(type='text', name='infoPubDate', id='infoPubDate', placeholder="Date de publication")
						label Téléphone:
						input(type='text', name='infoTel', id='infoTel', placeholder="Téléphone")
						label Moyen de transports:
						input(type='text', name='infoTransportation', id='infoTransportation', placeholder="Moyens de transports")
						label Heures d ouverture:
						input(type='text', name='infoOpening', id='infoOpening', placeholder="Heures d'ouverture")
						label Site web:
						input(type='text', name='infoWeb', id='infoWeb', placeholder="Site web")
						label Mail:
						input(type='text', name='infoMail', id='infoMail', placeholder="Mail")
			div.modal-footer
				button.btn.btn-primary.btn-warning(type="button", data-dismiss="modal", aria-hidden="true") OK

			

	
	script

		var yakCatIds = new Array();
		var yakCatNames = new Array();
		var freeTags = new Array();
		var linkSource = new Array();
		var fileSource = new Array();
		var rule = new RegExp('#([^\\s]*)','g');
		var rule2 = new RegExp('[#]','g');

		
		$(document).ready(function() {

			
			listenerHandle = google.maps.event.addListener(map, 'click', function(event) {
				placeMarker(event.latLng,markerLocation);
				getformattedAddress(event.latLng);
			});

			listenerHandleDrag = google.maps.event.addListener(markerLocation, 'dragend', function() {
				var position = markerLocation.getPosition();
				getformattedAddress(position);

			});

			$('#alertFeedType').hide();
			$('#feedType').on('change',function(){
				if($(this).val()=='CSV'){
					$('#alertFeedType').show().children('span.alertText').html('Le fichier doit être sauvé en UTF8, séparation point virgule et textes délimités par des guillemets doubles. ');
				}else
					$('#alertFeedType').hide();
			});

			// hashtag creation from title field
			$(".hashtagMaker").keyup(function(event) {
				hashtagTmp = [];
					var inputStrArray = $('#description').val().split(' ');
					for(i = 0; i< inputStrArray.length;i++){
						if(inputStrArray[i].match(rule)){
							hashtagTmp.push(inputStrArray[i]);
							freeTags.push(inputStrArray[i]);
							$('#freetag').val(hashtagTmp.toString().replace(rule2,''));
						}
					}
				
			});

			/*THUMB*/
			$('#picture').live('change', function () {

				if ( window.FileReader ) {
					var fileList = this.files;
					var file = fileList[0];
					var r = new FileReader();
					r.onload = function () {
						var binimage = r.result;
						binimage1 = binimage.replace('data:'+file.type+';base64,', '');
						var imag = "<img class='img-rounded' " + "src='" + 
						"data:"+file.type+";base64," + binimage1 + "' style='width:100px'/>";
						$("#picturePreview").html(imag);
					};
					r.readAsDataURL(file);
				
				}
			});
				
			/*DATA FILE UPLOAD*/	
			$('#fileupload').fileupload({
				dataType: 'json',
				done: function (e, data) {
					$.each(data.result.files, function (index, file) {		
						if(typeof file.error != 'undefined' && file.error != '' ){
							$('#progress .bar span.alertText').html(file.error);
							return;
						}else{
							$("#pillSourceFile").show();
							$("#pillSourceFile ul").append("<li class='source-val status-success' data-value='"+file.name+"'>"+file.name+"</li>");
							fileSource.push(file.name);
							$("#fileSource").val(fileSource.join(','));
							if(file.name.split('.').pop().toLowerCase() == 'csv'){
								$('#feedType').val('CSV');
							}
						}
					});
				},
				progressall: function (e, data) {
					var progress = parseInt(data.loaded / data.total * 100, 10);
					$('#progress .bar').css('width',(progress-20) + '%');
					$('#progress .bar span.alertText').html(progress+'%');
				}
			});

			$('#fileupload').click(function(){
				$('#progress .bar').css('width','0%');
				$('#progress .bar span.alertText').html('0%');
	
			});
			

			$("#pillSourceFile ul").unbind('click').on('click','li',function(){
				fileSource.cleanArrayByName($(this).attr('data-value'));
				$('#fileSource').val(fileSource.join(','));
			});

			$('#parsing').unbind('click').click(function(){
				$('#parsingModal .modal-body span.alertText').html('');
				$('#parsingModal').modal('show');
			});

			

			$('#yakcat').typeahead({
				minLength : 3,
				source: function (typeahead, query) {
					$.ajax({
							dataType: "json",
							url: "/api/cats",				
							success: function( ajax ) {
								typeahead.process(ajax.data.cats);
							}
						})},
				property: "title",
				onselect: function(obj) { 
					$("#pillYakcat ul").append("<li class='yakcat-val status-important' data-id='"+obj._id+"' data-title='"+obj.title+"' >"+obj.title+"</li>");
					$('#yakcat').val('').focus();
					yakCatIds.push(obj._id);
					yakCatNames.push(obj.title);
					$('#yakCatIdsHidden').val(yakCatIds.join(','));
					$('#yakCatNamesHidden').val(yakCatNames.join(','));
				}
			});

			$("#pillYakcat ul").unbind('click').on('click','li',function(){
				yakCatIds.cleanArrayByName($(this).attr('data-id'));
				yakCatNames.cleanArrayByName($(this).attr('data-title'));
				$('#yakCatIdsHidden').val(yakCatIds.join(','));
				$('#yakCatNamesHidden').val(yakCatNames.join(','));
			});
			
			
			$('#btn-freetag-adder').unbind('click').on('click',function(event){
				event.preventDefault();
				$("#pillFreetag ul").append("<li class='freetag-val' data-value='"+$('#freetag').val()+"'>"+$('#freetag').val()+"</li>");
				freeTags.push($('#freetag').val());
				$('#tagsHidden').val(freeTags.join(','));
				$('#freetag').val('').focus();
				return false;
			});	

			$('#freetag').typeahead({
				minLength : 3,
				source: function (typeahead, query) {
					$.ajax({
							dataType: "json",
							url: "/api/yakNE",				
							success: function( ajax ) {
								typeahead.process(ajax.data.yakne);
							}
						})},
				property: "title",
				onselect: function(obj) { 
					$("#pillFreetag ul").append("<li class='freetag-val status-info' data-value='"+obj.title+"'>"+obj.title+"</li>");
					$('#freetag').val('').focus();
					freeTags.push(obj.title);
					$('#tagsHidden').val(freeTags.join(','));
				}
			});

			$("#pillFreetag ul").unbind('click').on('click','li',function(){
				freeTags.cleanArrayByName($(this).attr('data-value'));
				$('#tagsHidden').val(freeTags.join(','));
			});


			$('#btn-source-adder').unbind('click').on('click',function(){
				$("#pillSourceLink").show();
				$("#pillSourceLink ul").append("<li class='source-val status-warning' data-value='"+$('#source').val()+"'>"+$('#source').val()+"</li>");
				$('#pillSourceLink').val('').focus();
				linkSource.push($('#source').val());
				$("#linkSource").val(linkSource.join(','));
							
			});

			$("#pillSourceLink ul").unbind('click').on('click','li',function(){
				linkSource.cleanArrayByName($(this).attr('data-value'));
				$('#linkSource').val(linkSource.join(','));
			});
			

			/*CLEAN LOCATION*/
			$('#defaultPlaceName').unbind('blur').on('blur',function(){
				if($(this).val() == ''){
					$("#feedForm #longitude").val('');
					$("#feedForm #latitude").val('');
					markerLocation.setVisible(false);
				}

			});
			
			//Place autocomplete
			var input = document.getElementById('defaultPlaceName');
			var autocomplete = new google.maps.places.Autocomplete(input);
			autocomplete.bindTo('bounds', map);
			google.maps.event.addListener(autocomplete, 'place_changed', function() {
				var place = autocomplete.getPlace();				
				if (!place.geometry) {
					return;
				}
				
				var formattedPlace = getPlaceFromGmapResult(place);
				$('#defaultPlaceSearchName').val(formattedPlace.address.state+', '+formattedPlace.address.area);				
				map.setCenter(place.geometry.location);
				$("#feedForm #longitude").val(place.geometry.location.Za);
				$("#feedForm #latitude").val(place.geometry.location.Ya);

				markerLocation.setPosition(place.geometry.location);
				markerLocation.setVisible(true);
			});


			/*EXTERNAL SOURCE LINK COMPLETION*/
			$('#link').on('blur',function(){
				if($(this).val() != '' && $(this).val().slice(0,7) != "http://")
					$(this).val('http://'+$(this).val());
			});	
				

				
		});
		


		/*PROCESS FORM*/
		$('#feedForm').ajaxForm(
			function() {
				alert('validated');
				$("#MyGrid").fadeIn();
				$("#feedForm").hide();
				$("#btnBack").hide();
				google.maps.event.removeListener(listenerHandle);
				markerLocation.setVisible(false);
				refreshDatagrid();
			}
		);

		
		
		/*Form custom validation*/
		$('#feedForm').unbind('submit').on('submit',function(){
			var err = false;
			if($('#humanName').val() == ""){
				setError('#humanName','Entrer un nom pour ce flux');
				err = true;
			}else
				removeError('#humanName');

			
			if($('#link').val() != "" && !$('#link').val().isUrl()){
				setError('#link','Entrer une url valide');
				err = true;
			}else
				removeError('#link');
			
			if($('#licence').val() == ""){
				setError('#licence','Entrer un nom de licence');
				err = true;
			}else
				removeError('#licence');

			if($('#persistDays input').val() == "" || !$('#persistDays input').val().isInt()){
				setError('#persistDays','Entrer un chiffre');
				err = true;
			}else
				removeError('#persistDays');
			
			if(typeof $('input:radio[name=yakType]:checked').val() == "undefined" ){
				setError('#yakType','Choisir un type info');
				err = true;
			}else
				removeError('#yakType');
			
			if($('#defaultPlaceName').val() == ""){
				setError('#defaultPlaceName','Définir une géoloc par défaut');
				err = true;
			}else
				removeError('#defaultPlaceName');
			
			if($('#defaultPlaceSearchName').val() == ""){
				setError('#defaultPlaceSearchName','Définir un texte de recherche par défaut');
				err = true;
			}else
				removeError('#defaultPlaceSearchName');

			if($('#linkSource').val() == "" && $('#fileSource').val() == "" ){
				setError('#dataSource','Définir soit un fichier source, soit une url source');
				err = true;
			}else
				removeError('#dataSource');		
			
			if($('#infoTitle').val() == ""){
				setError('#infoTitle','Définir le champ contenant le titre de la news.');
				setError('#parsing','Définir le champ contenant le titre de la news.');
				err = true;
			}else{
				removeError('#infoTitle');
				removeError('#parsing');
			}
				
			
			

			if (err){
				$('#err').show();
				return false;
			}else
				return true;
		});	
		
		

		