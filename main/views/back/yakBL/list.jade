mixin list()
	table#MyGrid.table.table-bordered.datagrid
		thead
			tr.headerControle
				th
					.datagrid-header-left
						.input-append.search
							input#search.input-medium(type='text', placeholder='Recherche', data-provide="typeahead", autocomplete="off")
							button.btn
								i.icon-search
					.datagrid-header-right
						button.btn#btnAdd
							i.icon-plus
							span Ajouter
			tr.headerControle
				td(colspan=5)
					select#filterStatus
						option(value="1") Actifs
						option(value="0") Inactifs

		tfoot
			tr
				th
					.datagrid-footer-left(style='display: none;')
						.grid-controls
							span
								span.grid-start
								| -
								span.grid-end
								| de
								span.grid-count
							select.grid-pagesize
								option 9
								option 20
								option 50
								option 100
							span Par Page
					.datagrid-footer-right(style='display: none;')
						.grid-pager
							button.btn.grid-prevpage
								i.icon-chevron-left
							span Page
							.input-append.dropdown.combobox.dropup
								input.span1(type='text')
								button.btn(data-toggle='dropdown')
									i.caret
								ul.dropdown-menu
							span
								| de
								span.grid-pages
							button.btn.grid-nextpage
								i.icon-chevron-right


	script
	
		var firstLoad = true;

		$(document).ready(function() {
			
			if($.cookie("statusYakBL")){
				var status = $.cookie("statusYakBL");
				$('#filterStatus').val(status);
			}

			$('#MyGrid').datagrid({
				dataSource: new ApiDataSource({
					columns: [
					{
						property: 'title',
						label: 'Mot Blacklisté',
						sortable: true
					},
					{
						property: 'creationDate',
						label: 'Création',
						sortable: true
					}],
					formatter: function (items) {
						$.each(items, function (index, item) {
							item.title = fillContent(item);
							item.creationDate = formatDate(item.creationDate);
						});
					}
				})
			});
		});


		var ApiDataSource = function (options) {
			this._formatter = options.formatter;
			this._columns = options.columns;
		};

		ApiDataSource.prototype = {
			columns: function () {
				return this._columns;
			},
			data: function (options, callback) {

				var url = '/api/yakBL';
				var self = this;

				if (!options.search) {
					options.search = "^";
				}

				url += '/' + (options.pageIndex + 1);
				url += '/' + options.pageSize;
				url += '/' + options.search;

				var sortPropertyArray = [];
				var sortDirectionArray = [];

				// Add currently selected datagrid column to sort properties
				if (options.sortProperty) {
					sortPropertyArray.push(options.sortProperty);
					sortDirectionArray.push(options.sortDirection);
				}

				// sort by name by default
				if(sortPropertyArray.length == 0)
					sortPropertyArray.push( "title");
				if(sortDirectionArray.length == 0)
					sortDirectionArray.push("asc");
				
					
				// Would be easier if we could pass dictionaries, needs testing
				url += '/' + sortPropertyArray.join() + '/' + sortDirectionArray.join();

				// Filter by status
				var status = $('#filterStatus :selected').val();
				url += '/' + status;
				
				$.ajax(url, {
					type: 'GET'
				}).done(function (response) {

					if (firstLoad) {
						$("#search").focus();
						$('th[data-property="name"]').addClass('sorted');
						$('th[data-property="name"]').append('<i class="icon-chevron-down"></i>');
						firstLoad = false;
					}
					// Prepare data to return to Datagrid
					var data = response.yakBL;
					var count = response.count;
					var startIndex = (response.pageIndex - 1) * response.pageSize;
					var endIndex = parseInt(startIndex) + parseInt(response.pageSize);
					var end = (endIndex > count) ? count : endIndex;
					var page = parseInt(response.pageIndex);
					var pages = Math.ceil(response.count / response.pageSize);
					var start = startIndex + 1;

					if (self._formatter) self._formatter(data);

					callback({ data: data, start: start, end: end, count: count, pages: pages, page: page });

				});
			}
		};

		

		/*bind form edition on the loaded datagrid event to avoid double loading*/
		$('#MyGrid').unbind('loaded').on('loaded',function(){
				// Edit YAKNE function
			$("#MyGrid .editYakBL").on('click', function(event){
				event.preventDefault();
				event.stopPropagation();
				editYakBL(this.id,0);
				
			});

			
			$("#MyGrid a.duplicateItem").on('click', function(event){
				event.preventDefault();
				event.stopPropagation();
				editYakBL(this.id,1);
			});
		});
		

		$('#filterStatus').live('change', function() {
			var currentSelection = $('#filterStatus :selected').val();
			$.cookie("statusYakBL",currentSelection,{ expires: 100000, path : '/' });
			refreshDatagrid();
		});

		
		function fillContent(item) {
			var res = "";
			var icon = "icon-time";
			var title_icon = "En attente";
			var title_title = "";
			
			res += '<div class="liens">';
			res += '<a href="#" id="'+item._id+'" class="duplicateItem listIcon" title="Dupliquer"><i class="icon-random"></i></a>';
			res += "</div>";

			res += '<a class="editYakBL" id="' + item._id + '" href="#">';

			if (item.status == 1) {
				icon = 'icon-ok-sign';
				title_icon = "Actif";
			}
			else {
				icon = 'icon-ban-circle';
				title_icon = "Inactif";
			}

	
			res += 	'<div class="text-info"><i class="' + icon + ' status" title="' + title_icon + '" ></i>' + item.title + '</div>';
			
			res += '</a>';

			return res;
		}

		function formatDate(creationDate) {
			var dateTmp = new Date(creationDate);
			return dateTmp.getDate()+'/'+(dateTmp.getMonth()+1)+'/'+dateTmp.getFullYear();

		}


		

		function refreshDatagrid () {
			// Temporary refresh method for datagrid
			var $gridsearch = jQuery('#MyGrid').find('.search');
			var search = $gridsearch.find('input').val();
			$gridsearch.trigger('searched', search);
		}

		
		$("#btnBack").unbind('click').on('click',function(){
			$("#yakBLForm").hide();
			$("#MyGrid").show();
			$("#yakBLForm input[type=hidden]").val('');
			$('#yakBLForm').clearForm();
			$('#err').hide();
			$("#btnBack").hide();
			$("#pillZone ul").empty();
			$("#pillFeed ul").empty();
			$("#caseSensitive").attr('checked',false);
			zone = new Array();
			feed = new Array();
			zoneName = new Array();
			feedName = new Array();
		});

		
		

		/* get data and edit yakBL in the form
			flagDuplicate = 1 for duplicating the yakBL
		*/
		function editYakBL(id,flagDuplicate){
			$("#btnBack").show();
			$("#MyGrid").hide();
			
			// We remove the error class when we open a form for editing a place
			$('#yakBLForm').removeClass("error");

			/*INIT FORM FOR EDITION*/
			$("#yakBLForm").show();
			
			$("#pillZone ul").html('');
			$("#pillFeed ul").html('');
			$("#pillFeed").show();
			$("#pillZone").show();
			$("#yakBLForm input[type=hidden]").val('');
			$('#yakBLForm').clearForm();	
			$('#err').hide();
			zone = new Array();
			feed = new Array();
			zoneName = new Array();
			feedName = new Array();
			
			
			var url = '/api/yakBL/'+id;
			
			// We search for the yakBL in mongo and we fill the form with the yakBL's values
			$.ajax({
				url: url,
				type: 'GET',
				async: false,
				success: function (response)
				{
					/*FORM INITIALISATION*/
					var yakBL = response.data.yakBL;
	
					if(flagDuplicate == 1){
						$("#yakBLForm legend.mainlegend").html("Dupliquer un mot blacklisté : ");
						$("#yakBLForm #title").val(yakBL.title+'_copy').focus();
						$("#yakBLForm #objid").val('');
					}	
					else{	
						$("#yakBLForm legend.mainlegend").html("Modifier un mot blacklisté :");
						$("#yakBLForm #objid").val(yakBL._id);
						$("#yakBLForm #title").val(yakBL.title).focus();
					}							

					

					$("#zoneHidden").val(yakBL.zone.join(','));								
					$("#zoneNameHidden").val(yakBL.zoneName.join(','));								
					$("#feedHidden").val(yakBL.feed.join(','));								
					$("#feedNameHidden").val(yakBL.feedName.join(','));								

					
					if(yakBL.zone.length > 0){
						yakBL.zone.forEach(function(z){
							if(z != ""){

								$.get('/api/zone/'+z,function(data){
									$("#pillZone ul").append("<li class='zone-val status-success' data-id='"+data.zone._id+"'>"+data.zone.title+"</li>");
									zone.push(data.zone._id);
									zoneName.push(data.zone.title);	
									$("#zoneHidden").val(zone.join(','));
									$("#zoneNameHidden").val(zoneName.join(','));
								});
							}
						});	
					}

					$('#yakBLForm input:radio[name=status][value='+yakBL.status+']').click();
					

					$("#yakBLForm #title").focus();
					
					
				}
			});
		}
		

		// Add New YakBL
		$("#btnAdd").click(function(){
			$("#MyGrid").hide();
			$("#yakBLForm")[0].reset();
			// We remove the error class when we open a form for creating a new yakBL
			$('#yakBLForm #titleGroup').removeClass("error");
			$("#btnBack").fadeIn();
			$("#yakBLForm").fadeIn();
			$("#yakBLForm #objid").val("");
			$("#pillNormalizedTag ul").empty();
			$("#pillExactTag ul").empty();
			$("#pillYakcat ul").empty();
			$('#err').hide();
			$("#yakBLForm #title").focus();

		});
			
		$('#yakBLForm input:radio[name=status][value=1]').click();


		