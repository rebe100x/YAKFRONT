extends ../layout
block content

	include ../mixins/menu.jade
	include ../mixins/forms/profileForm.jade
	mixin menu('firstvisit')

	div.container-fluid
		div.row-fluid
			div.span3
			div.span6
				- if (message)
					div.alert.fade.in
						button.close(type="button",data-dismiss="alert") x
						strong=message
				div.content-header
					div.header-inner
						h2 Initialisation de votre compte:
						p.subheader Pour une meilleur expérience de Yakwala, nous vous invitons à paramétrer votre compte dès maintenant:
				hr
				form#firstvisitForm(action='/firstvisit', method='POST')	
					input#location(type='hidden', name='location', value='')
					input#address(type='hidden', name='address', value='')
					input#formatted_address(type='hidden', name='formatted_address', value='')
										
					div.control-group
						div.controls
							label.control-label.label-xlarge(for="username") Choisissez un nom d'utilisateur( au moin 4 caractères) :  
							input.input-xlarge#username(type="text", name="username", autocomplete="off", placeholder="Votre nom d'utilisateur") 
						div.controls
							label.control-label.label-xlarge(for="oldpass") Choisissez un mot de passe ( au moins 8 caractères ):  
							input.input-xlarge#password(type="text", name="password", autocomplete="off", placeholder="Votre mot de passe") 
					div.control-group
						div.controls
							label.control-label(for="city") Votre géolocalisation par défault servira à recentrer la carte autour de vous: 
								span#cityTarget
							input#city.searchInput(type='text', name='city', placeholder='Chercher une adresse, une ville...', autocomplete="off",)
					div.control-group
						div.controls
							label.control-label(for="favplace") Choisissez vos endroits favoris à ajouter dans vos raccourcis: 
								ul.favplacelist.unstyled
									-if(locals.user.favplace)
										- each favplace in locals.user.favplace
											li(pointid=favplace._id,lat=favplace.location.lat, lng=favplace.location.lng)
												i.icon-map-marker
												span= favplace.name
												i.icon-remove.icon-pointer(onclick='removefavPlace($(this));')
					div.control-group
						div.controls
							label(for='favplace') Ajouter des endroits favoris : 
							div.input-append
								input#favplace2.searchInput(type="text",data-provide="typeahead", name="favplace", autocomplete="off", placeholder='Chercher une adresse, une ville...') 
								button.btn#btn-favplace-adder(type="button") Add
					div.control-group
						div.controls
							label.checkbox
								<input id="cgu" type="checkbox" name="cgu" value="1"> J'ai lu et j'accepte les conditions générales d'utilisation
					div.control-group
						div.controls
							button.btn.btn-large.btn-block.btn-inverse(type='submit', name='submit', id='submit', value='submit') Enregistrer
		//script(src='http://maps.google.com/maps/api/js?v=3.9&sensor=false&libraries=drawing')		
		script
			var conf = !{conf};
			var mainConf = !{mainConf};	
			var user =!{JSON.stringify(user)};

			function randomNames(str){
			var adjs = ["autumn", "hidden", "bitter", "misty", "silent", "empty", "dry",
			"dark", "summer", "icy", "delicate", "quiet", "white", "cool", "spring",
			"winter", "patient", "twilight", "dawn", "crimson", "wispy", "weathered",
			"blue", "billowing", "broken", "cold", "damp", "falling", "frosty", "green",
			"long", "late", "lingering", "bold", "little", "morning", "muddy", "old",
			"red", "rough", "still", "small", "sparkling", "throbbing", "shy",
			"wandering", "withered", "wild", "black", "young", "holy", "solitary",
			"fragrant", "aged", "snowy", "proud", "floral", "restless", "divine",
			"polished", "ancient", "purple", "lively", "nameless"]

			, nouns = ["waterfall", "river", "breeze", "moon", "rain", "wind", "sea",
			"morning", "snow", "lake", "sunset", "pine", "shadow", "leaf", "dawn",
			"glitter", "forest", "hill", "cloud", "meadow", "sun", "glade", "bird",
			"brook", "butterfly", "bush", "dew", "dust", "field", "fire", "flower",
			"firefly", "feather", "grass", "haze", "mountain", "night", "pond",
			"darkness", "snowflake", "silence", "sound", "sky", "shape", "surf",
			"thunder", "violet", "water", "wildflower", "wave", "water", "resonance",
			"sun", "wood", "dream", "cherry", "tree", "fog", "frost", "voice", "paper",
			"frog", "smoke", "star"];

			return str+"_"+adjs[Math.floor(Math.random()*(adjs.length-1))]+"_"+nouns[Math.floor(Math.random()*(nouns.length-1))];
			}

			function setUserName(el)
			{
				$("#username").val($(el).html());
				$("#suggestionsDiv").remove();
			}
			$(document).ready(function() {
				
				$("form").submit(function(){
					var currusername = $("#username").val();
					$.getJSON('/api/findbylogin/' + currusername,function(users) {
						if(users.users.length != 0)
						{

							var suggestions = "<ul id='suggestionsDiv'>";
							suggestions += "<li>Nom d'utilisateur reservé:</li>";
							
							suggestions += "</ul>";
							$("#username").after(suggestions);
							for(i=0; i<9; i++)
							{
								var randomName = randomNames(currusername);
								$("#suggestionsDiv").append("<li><a onclick='setUserName(this)'>" + randomName + "</a></li>");
									
							}
							
							
							//alert(suggestions);
							
							
							return false;
						}
					
					});
				});

				$('#firstvisitForm').isHappy({
					fields: {
						'#username': {
							required: true,
							message: "Entrez un un nom d'utilisateur d'au moins 4 caractères",
							test: function(val){return (val.length < 4)?false:true;}
						},
						'#password': {
							required: true,
							message: "Entrez un mot de passe d'au moins 8 caractères",
							test: function(val){return (val.length < 8)?false:true;}
						},
						'#cgu': {
							required: true,
							message: 'Lisez et validez les CGU',
							test: function(val){return (val == 1)?true:false;}
						}
					}
				});
				
				$('#city').typeahead({
					minLength : 2,							
					source: function (typeahead, query) {
						
						if(query.length > 2){
							$("#city").css({'background-image':'url(\'images/loader.gif\')','padding-left':'20px'});
							var addressQuery = {"address": query,"region":"fr" };
							var geocoder = new google.maps.Geocoder();
							geocoder.geocode( addressQuery, function(results, status) {
								if (status == google.maps.GeocoderStatus.OK) {
									//results[0].geometry.location
									typeahead.process(results);
								} 
								
								if(status == google.maps.GeocoderStatus.ZERO_RESULTS){}
									
								if( status == google.maps.GeocoderStatus.INVALID_REQUEST 
									|| status == google.maps.GeocoderStatus.REQUEST_DENIED  
									|| status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT){
									var salt = new Date().getTime();
									$('#cityTarget').html("<div id='alert"+salt+"' class='control-label'><i class='icon-exclamation-sign'> </i>Adresse invalide ("+status+")</div>");
									setTimeout(function() {
										$("#alert"+salt).fadeOut();
									}, 3000);
									$('#city').select();
								}
							});
						}
					},
					property: "formatted_address",
					onselect: function(obj) { 
						$("#city").css({'background-image': 'none','padding-left':'0px'});
						$('#cityTarget').html("<div>"+obj.formatted_address+"</div>");
						$('#city').val('').focus();
						var placeGmap = getPlaceFromGmapResult(obj);
						
						$('#location').val(JSON.stringify(placeGmap.location));
						var curPos = {x:placeGmap.location.lat,y:placeGmap.location.lng,z:mainConf.rangeDefault};
						$.cookie("geoloc", JSON.stringify(curPos),{ expires: 10000, path : '/' });
						$('#address').val(JSON.stringify(placeGmap.address));
						$('#formatted_address').val(JSON.stringify(placeGmap.formatted_address));
					}
				});
				
				
			}); // END READY	

