extends ../layout
block content
	include ../mixins/menu.jade
	include ../mixins/locationChooser.jade
	include ../mixins/forms/postForm.jade
	include ../mixins/forms/loginForm.jade
	include ../mixins/forms/searchForm.jade
	mixin menu('feed')
	mixin locationChooser('map')


	div.container-fluid
		div.row-fluid
			div.span8
				div#newsfeedContainer
					span#newsfeedContent.tabContent			
						ul#newsfeed
			div.span4
				div.columnTitle TOPS
				div#topsFeed
					
	style
		#newsfeedContent{position:relative;display:block;overflow:auto;height:auto;z-index:2000;}				
	link(rel='stylesheet', href='/javascripts/lib/jquery/css/share.css')
	script(src="/javascripts/lib/jquery/js/timeago.js")	
	script(src="/javascripts/lib/jquery/js/share.js")	
	script(src="/javascripts/lib/jquery/js/jquery.livequery.js")
	script(src="/javascripts/json2.js")	
	script
	
	

		/*INIT*/
		var conf = !{conf};
		var mainConf = !{mainConf};	
		
		
		var geolocalized = 0;
		var infowindow = null;
		var bounds = new Array();
		var markers = [];
		var infoArray = [];
		var markerLocation = null;
		var yakcatArray = [];
		var placeArray = [];
		var hashtag = [];
		var hashtagTmp = [];
			
		var markerClustererOptions = {gridSize:30,maxZoom: 17,styles: [{height: 28,width: 28,url: "/images/markers/m1.png"},{height: 38,width: 38,url: "/images/markers/m2.png"},{height: 55,width:55,url: "/images/markers/m3.png"},{height: 85,width: 85,url: "/images/markers/m4.png"},{height: 85,width: 85,url: "/images/markers/m5.png"}]};
		var markerCluster = null;
		var pinkParksStyles = [{featureType: "Water",stylers: [{ hue: "#006eff" },{ saturation:1 },{ lightness: -13 }]},{featureType: "Road",stylers: [{ hue: "#ff0000" },{ saturation: -100 },{ lightness: 31 }]},{featureType: "Landscape",stylers: [{ hue: "#ff0008" },{saturation: -90 },{ lightness: 66 }]}];
		var pinkParksStyles =[{}];
		
		var skip = 0;
		var zoom = 1;
		var infoContent = '';
		var rule = new RegExp('#([^\\s]*)','g');
		var rule2 = new RegExp('[#]','g');
		var postFlag = 0;
		var listenerHandle = null;
		
		

		setInterval(function() {
				silentUpdater();			
			}, 10000);

		/*READY FUNCTIONS*/
		$(document).ready(function() {
			/*control opener*/
			$('#searchBtn').click(function(){

					$.cookie("searchString",searchString,{ expires: 10000, path : '/' });

					var str = encodeURIComponent($('#searchStr').val());
					var placeName = $('#searchPlaceStr').val();
					var location = JSON.stringify({lat:curPos.x,lng:curPos.y});	

					if(str != 'Quoi ?' && str != ''){
						searchString = str;
					}else
					{
						searchString = null;
					}
					//console.log(curPos);
					getAndPrintInfo();
				});

			

			//$('#newsfeedContent').mCustomScrollbar({mouseWheel:true,callbacks:{onTotalScroll:printArrayFeedItem},scrollButtons:{enable:true,scrollType:"continuous",},advanced:{autoExpandHorizontalScroll:true,updateOnContentResize: true,updateOnBrowserResize:true}});
			//$('#newspostContent').mCustomScrollbar({mouseWheel:true,scrollButtons:{enable:true,scrollType:"continuous",},advanced:{autoExpandHorizontalScroll:true,updateOnContentResize: true,updateOnBrowserResize:true}});
			
			
			$('#newsfeed').delegate(".mapHighlighter",'click', function (e) {

				//console.log(e.target);
				if (e.target.className != "yakComments" && e.target.className != "yakLikes" && e.target.className != "yakTextarea" && e.target.className != "username" && e.target.className != "yakLikes" && e.target.className != "icon-thumbs-down" && e.target.className != "icon-thumbs-up")
					getItemDetails(this);
				
			});

			getAndPrintInfo();
		});
		
		function unhighlightInfo(obj,callback){
			markerHL.setAnimation(null);
			markerHL.setVisible(false);
			
			if (callback && typeof(callback) === "function") {  
				callback(obj);  
			} 
		}
		
		
		
		function silentUpdater(){
			
			searchString = encodeURIComponent(searchString).replace(/%2520/g, ' ');		
			
			//bounds = map.getBounds();
			
			var apiUrl = '';
			if(yakType.toString() == 5)
				apiUrl = '/api/geoalerts/'+curPos.x+'/'+curPos.y+'/'+rangeFromZ()+'/'+'null'+'/'+dateFrom+'/0/'+searchString+'/500';
			else	
				apiUrl = '/api/geoinfos/'+curPos.x+'/'+curPos.y+'/'+rangeFromZ()+'/'+'null'+'/'+dateFrom+'/0/'+yakType.toString()+'/'+searchString+'/500';
			

			$.getJSON(apiUrl,function(ajax) {	
				$.each(ajax.data.info, function(key,val) {
					
					

					var flagExists = 0;
					
					$.each(infoArray,function(key2,val2){
						if(val2._id == val._id){
							flagExists = 1;
						}
					});
					
					if(flagExists == 0){

						printFeedItem(val,1,0);	
					
						
						infoArray.push(val);	
						
						
						
					}
				});
			});
		}
		
		function getAndPrintInfo(){
			infoArray = [];
			
			
			
			if(typeof(yakType) == 'undefined' || yakType.length == 0){
				printEmptyFeedItem();
				return;
			}

			var apiUrl = '';
			if(yakType.toString() == 5)
				apiUrl = '/api/geoalerts/'+curPos.x+'/'+curPos.y+'/'+rangeFromZ()+'/'+'null'+'/'+dateFrom+'/0/'+searchString+'/500';
			else	
				apiUrl = '/api/geoinfos/'+curPos.x+'/'+curPos.y+'/'+rangeFromZ()+'/'+'null'+'/'+dateFrom+'/0/'+yakType.toString()+'/'+searchString+'/500';
			
			
			$.getJSON(apiUrl,function(ajax) {	
			
				// empty the news feed
				$('#newsfeed').html('');

				if(typeof(ajax.data.info) == 'undefined' || ajax.data.info.length == 0){
					//$('#newsfeed').html('Aucune info !');
					printEmptyFeedItem();
				}else{
					
					$.each(ajax.data.info, function(key,val) {
						
						infoArray.push(val);					
						
						if(key<10)
							printFeedItem(val,0,0);	
					});
				printLoadingFeedItem();	
				//markerCluster.addMarkers(markers);
				}
				$("abbr.timeago").timeago();
				$('#newsfeedContent').mCustomScrollbar("update");
			});

		}

		function printFeedItem(item,top,scrollTo){
			
			/*if(item.yakCatName.length > 0){
				var yakCatNameArray = item.yakCatName.map(function(item){
					if(item.substr(0,1)!="#")
						item = "#"+item;
					return item.linkify();
					
				});	
				yakCatNameArray = yakCatNameArray.slice(0,3);

			}else
				var yakCatNameArray = new Array();
		
			if(typeof(item.freeTag[0]) != 'undefined' && item.freeTag[0].length > 0){
				var tagNameArray = item.freeTag.map(function(item){
					if(item.substr(0,1)!="#")
						item = "#"+item;
					return item.linkify();
				});
				tagNameArray = tagNameArray.slice(0,3);
			}else
				var tagNameArray = new Array();
			*/

			var dateTmp = new Date(item.pubDate);
			var pubDate = dateTmp.getDate()+'/'+(dateTmp.getMonth()+1)+'/'+dateTmp.getFullYear();
			dateTmp = new Date(item.dateEndPrint);
			var dateTmp2 = new Date(item.dateEndPrint);
			var dateEndPrint = dateTmp2.getDate()+'/'+(dateTmp2.getMonth()+1)+'/'+dateTmp2.getFullYear();

			infoContent = $("<div />");
			infoContent.attr("class", "infowindow mapHighlighter");
			infoContent.attr("infoId", item._id);

			var yakTypeImage = $("<div />");
			yakTypeImage.attr("class", "yakTypeImage");
			yakTypeImage.html("<img src='/images/markers/type" + item.yakType + ".png' />");
			infoContent.append(yakTypeImage);

			if(!(typeof item.thumb === 'undefined') && item.thumb != '' && item.thumb != null)
			{
				var thumbImage = $("<div />");
				thumbImage.attr("class", "thumbImage");
				thumbImage.append("<img src=\'"+item.thumb+"\' />");
				infoContent.append(thumbImage);
			}

			var itemTitle = $("<div />");
			itemTitle.attr("class", "itemTitle");
			itemTitle.html(item.title.linkify());
			infoContent.append(itemTitle);

			thedate = buildItemDate(item);
			var postedBy = $("<div />");
			postedBy.attr("class", "postedBy");
			
			postedBy.html("Post√© par <a onclick='setSearchFor(this)'>@"+item.origin+"</a> " + "<span class=\'date\'>"+thedate+"</span>");

			infoContent.append(postedBy);
			
			var thetags = "<div class=\'tags\'>";					

			/*if(item.yakCatName.length > 0)
				thetags += yakCatNameArray.join(', ');

			if(tagNameArray.length > 0){
				if(item.yakCatName.length > 0)
					thetags += ', ';
				thetags += tagNameArray.join(', ');
			}*/
			//console.log(item.yakCatName);
			if(item.yakCatName.length > 0)
			{
				for (var i = 0; i < item.yakCatName.length; i++) {
					thetags += '<a class="tagHashLink" onclick="setSearchFor(this)">#' + item.yakCatName[i] +'</a> ';	
				}
			}

			if (typeof(item.freeTag) != 'undefined') {
				if(item.freeTag.length > 0){
					if(item.freeTag.length > 0)
						thetags += ', ';
					for (var i = 0; i < item.freeTag.length; i++) {
						thetags += '<a class="tagHashLink" onclick="setSearchFor(this)">#' + item.freeTag[i] +'</a> ';	
					}
				}
			}
			thetags += "</div>";

			
			infoContent.append(thetags);

			if(typeof(item.address) != 'undefined' && item.address != 'null' && item.address != '')
				var theaddress = "<div class=\'infodetail\'>"+item.address+"</div>";
					if(user.login == 'renaud.bessieres' || user.login == 'dany.srour') /// this is debug
						theaddress += "<div class=\'infodetail\'>"+pubDate+" >> "+dateEndPrint+"</div>";

			/*PRINT ON THE FEED*/
			//$('#newsfeed').append('<li class=\'mapHighlighter\' infoId=\''+item._id+'\'><i class=\'icon-eye-open\' ></i> '+item.title+'</li>')
			if(top==1)
			{
				var li = $("<li />");
				li.attr("class", "mapHighlighterDetails");
				li.attr("infoId", item._id);
				li.append(infoContent);
				$('#newsfeed').prepend(li);
			}
			else
			{
				var li = $("<li />");
				li.attr("class", "mapHighlighterDetails");
				li.attr("infoId", item._id);
				li.append(infoContent);
				$('#newsfeed').append(li);
			}
			
			

			if (scrollTo==1) {  
				$('#newsfeedContent').mCustomScrollbar("update");
				$('#newsfeedContent').mCustomScrollbar("scrollTo","ul#newsfeed");

			}  
		}

		

		function printLoadingFeedItem(){
			$('.loadingfeeditem').hide();
			if(skip < infoArray.length - 10){
				infoContent = "<div class=\'infowindow loadingfeeditem\'></div>";					
				$('#newsfeed').append('<li class=\'mapHighlighterDetails\'>'+infoContent+'</li>');
			}
			
		}

		function printEmptyFeedItem(){
			$('.emptyfeeditem').hide();
			infoContent = "<div class=\'infowindow emptyfeeditem\'>Aucune info !</div>";					
			$('#newsfeed').append('<li class=\'mapHighlighterDetails\'>'+infoContent+'</li>');
		}

		function printArrayFeedItem(){
			skip = skip + 10;
			var itemArray = infoArray.slice(skip,skip+10);
			$.each(itemArray,function(key,val){
				printFeedItem(val,0,0);
			});
			printLoadingFeedItem();
			$('#newsfeedContent').mCustomScrollbar("update");
		}

		function getItemDetails(el){
			
			var currentItem = $(el);
			var infoid = currentItem.attr("infoid")
			if (currentItem.find(".loadingMore").length > 0 || currentItem.find(".myitem").length > 0)
			{
				currentItem.find(".myitem").find(".icon-chevron-up").remove();
				currentItem.find(".myitem").append("<i class='icon-chevron-up' title='close' style='float: right; clear: both; position: relative; bottom: 21px;' onclick='$(this).parent().hide(); $(this).remove();'></i>");
				currentItem.find(".myitem").show();				
				return;
			}


			
			currentItem.append('<img src="images/loader_big.gif" class="loadingMore">');
			$.getJSON('/api/afeed', { id: infoid } ,function(data) {

				var val = data.info[0];
				var item = createFeedPageItem(val);
				currentItem.find(".loadingMore").remove();
				currentItem.append(item);
				currentItem.find(".myitem").append("<i class='icon-chevron-up' title='close' style='float: right; clear: both; position: relative; bottom: 21px;' onclick='$(this).parent().hide(); $(this).remove();'></i>");
				setshortUrl();
				setLikeSystem();
			});

			if ($(el).find(".myitem").css("display") == "none") {
				$("#newsfeed").find(".myitem").hide();
				$(el).find(".myitem").show();
			}
			else
			{
				$(el).find(".myitem").hide();
			}
			
		}


		function createFeedPageItem(val)
		{
			item = $("<div />");
			item.attr("class", "myitem");

			

			/*create the content element*/
			content = $("<div />");
			content.attr("class", "content");
			content.html("<div class='theContent'>" + val.content + "</div>");
			
			content.append("<br />");
			
			/* create the likes system */ 
			var yakLikes = $("<span />");
			yakLikes.attr("class", "yakLikes");
			yakLikes.attr("rel", val._id);

			var yakComments = $("<span />");
			yakComments.attr("class", "yakComments");
			yakComments.attr("rel", val._id);
			//console.log(val.yakComments);
			setCommentText(val.yakComments.length,yakComments);
			
			yakComments.click(function(){
				if ($(this).parent().find(".commentBox").length > 0)
				{
					return;
				}
					
				var currEleComment = $(this);
				var divComment = $("<div />");
				divComment.attr("class", "commentBox");
				$(this).append('<img class="loadingMore" src="images/loader_big.gif">');
				$.getJSON('/api/afeed', { id: $(this).attr("rel")} ,function(data) {
						$.each(data.info[0].yakComments, function(key, val){
							divComment.append(drawAComment(val, 'map'));
						});
						divComment.append('<textarea maxlength="250" rows="3" class="yakTextarea" placeholder="Ajouter un commentaire..."></textarea>');

						divComment.find("textarea").keypress(function(event){
							if (event.keyCode == 13) {

								var comment = $(this).val();
								if(comment.length > 250)
								{
									alert("Comments only 250...");
									return;
								}
								var theArea = $(this);
								$(this).val("posting...Please wait");
								$(this).attr("disabled", "disabled");
								var newComment = new Array();
								newComment.username = user.login;
								newComment.userid = user._id;
								newComment.comment = comment;
								newComment.userthumb = user.thumb;
								newComment.date = new Date();
								$.post('/setComment', {infoId : currEleComment.attr("rel"), username: user.login, userthumb: user.thumb, comment: comment.substring(0, 249)} , function(res){
									if (res == 'updated')
									{
										theArea.val("");
										theArea.removeAttr("disabled");
										theArea.before(drawAComment(newComment));
									}

				});
							};
						});
						currEleComment.find(".loadingMore").remove();
						currEleComment.after(divComment);
				});	
			});

			var thumbsUp = "<i class='icon-thumbs-up'></i>&nbsp;";
			var thumbsDown = "<i class='icon-thumbs-down'></i>";
			if($.inArray(user._id, val.yaklikeUsersIds) > -1)
			{
				thumbsUp = "Vous avez aim√© cette info !";
			}

			if($.inArray(user._id, val.yakunlikeUsersIds) > -1)
			{
				thumbsDown = "Vous n'avez pas aim√© cette info.";
			}

			if($.inArray(user._id, val.yaklikeUsersIds) > -1 && $.inArray(user._id, val.yakunlikeUsersIds) == -1)
			{
				//yakLikes.append("<span class='theUps'>" + val.likes + "</span> likes- " + "" + "<span class='theDowns'>" + val.unlikes +"</span> dislikes");			
				yakLikes.append("<span class='theUps'>" + val.likes + "</span> likes");			
				yakLikes.click(function(){
					$('.alreadyVoted').hide();	
					$(this).append("<span class='alreadyVoted'> Vous avez d√©j√† donn√©e votre avis !</span>");
					setTimeout('$(".alreadyVoted").remove()', 3000);
				});

			}
			else if($.inArray(user._id, val.yaklikeUsersIds) == -1 && $.inArray(user._id, val.yakunlikeUsersIds) > -1)
			{
				//yakLikes.append("<span class='theUps'>" + val.likes + "</span> likes- " + "" + "<span class='theDowns'>" + val.unlikes +"</span> dislikes");							
				yakLikes.append("<span class='theUps'>" + val.likes + "</span> likes");							
				yakLikes.click(function(){
					$('.alreadyVoted').hide();
					$(this).append("<span class='alreadyVoted'> Vous avez d√©j√† donn√©e votre avis !</span>");
					setTimeout('$(".alreadyVoted").remove()', 3000);
				});
			}
			else
			{

			//yakLikes.append(thumbsUp + "<span class='theUps'>" + val.likes + "</span> likes- " + thumbsDown + "<span class='theDowns'>" + val.unlikes +"</span> dislikes");			
			yakLikes.append(thumbsUp + "<span class='theUps'>" + val.likes + "</span> likes ");			

			}


			more = $("<a />");
			more.attr("class", "more");
			more.attr("href", val.outGoingLink);
			more.attr("target", "_blank");
			more.attr("rel", val._id);
			more.attr("data-toggle", "data-toggle");
			more.html(" plus de d√©tails...");
			
			content.append("<div class='shareMe'><i style='background: none' class='icon-share' title='Share Me'><img src='images/ftg.png' class='ftgIcon' /> </i></div>");
			if(typeof(val.outGoingLink) != 'undefined')
				content.find(".theContent").append(more);
			item.append(content);
			item.append(yakLikes);
			item.append(yakComments);
			item.append()
			return item;	
		}

		function rangeFromZ(){
			return (-1)*0.0099/1*(curPos.z)+1;
		}