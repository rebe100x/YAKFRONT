{ body: 
   { title: [32m'info title 2'[39m,
     content: [32m'info content 2'[39m,
     yakCat: [32m'Array'[39m,
     yakType: [32m'3'[39m,
     freeTag: [32m'Array'[39m,
     pubDate: [32m'1354276822'[39m,
     placeId: [32m'50b37abefa9a95340e00002d'[39m,
     access_token: [32m'82bf023262fb5f37d12870cd1ae082917e92e6cd'[39m,
     v: [32m'20120228'[39m,
     locale: [32m'fr'[39m },
  socket: 
   { _handle: 
      { writeQueueSize: [33m0[39m,
        socket: [36m[Circular][39m,
        onread: [36m[Function: onread][39m },
     _pendingWriteReqs: [33m0[39m,
     _flags: [33m0[39m,
     _connectQueueSize: [33m0[39m,
     destroyed: [33mfalse[39m,
     errorEmitted: [33mfalse[39m,
     bytesRead: [33m10972[39m,
     bytesWritten: [33m25[39m,
     allowHalfOpen: [33mtrue[39m,
     writable: [33mtrue[39m,
     readable: [33mtrue[39m,
     server: 
      { connections: [33m2[39m,
        allowHalfOpen: [33mtrue[39m,
        _handle: 
         { writeQueueSize: [33m0[39m,
           onconnection: [36m[Function: onconnection][39m,
           socket: [36m[Circular][39m },
        _events: 
         { request: 
            { [Function: app]
              use: [36m[Function][39m,
              handle: [36m[Function][39m,
              listen: [36m[Function][39m,
              setMaxListeners: [36m[Function][39m,
              emit: [36m[Function][39m,
              addListener: [36m[Function][39m,
              on: [36m[Function][39m,
              once: [36m[Function][39m,
              removeListener: [36m[Function][39m,
              removeAllListeners: [36m[Function][39m,
              listeners: [36m[Function][39m,
              route: [32m'/'[39m,
              stack: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              init: [36m[Function][39m,
              defaultConfiguration: [36m[Function][39m,
              engine: [36m[Function][39m,
              param: [36m[Function][39m,
              set: [36m[Function][39m,
              path: [36m[Function][39m,
              enabled: [36m[Function][39m,
              disabled: [36m[Function][39m,
              enable: [36m[Function][39m,
              disable: [36m[Function][39m,
              configure: [36m[Function][39m,
              get: [36m[Function][39m,
              post: [36m[Function][39m,
              put: [36m[Function][39m,
              head: [36m[Function][39m,
              delete: [36m[Function][39m,
              options: [36m[Function][39m,
              trace: [36m[Function][39m,
              copy: [36m[Function][39m,
              lock: [36m[Function][39m,
              mkcol: [36m[Function][39m,
              move: [36m[Function][39m,
              propfind: [36m[Function][39m,
              proppatch: [36m[Function][39m,
              unlock: [36m[Function][39m,
              report: [36m[Function][39m,
              mkactivity: [36m[Function][39m,
              checkout: [36m[Function][39m,
              merge: [36m[Function][39m,
              [32m'm-search'[39m: [36m[Function][39m,
              notify: [36m[Function][39m,
              subscribe: [36m[Function][39m,
              unsubscribe: [36m[Function][39m,
              patch: [36m[Function][39m,
              all: [36m[Function][39m,
              del: [36m[Function][39m,
              render: [36m[Function][39m,
              request: {},
              response: {},
              cache: {},
              settings: 
               { env: [32m'development'[39m,
                 [32m'jsonp callback name'[39m: [32m'callback'[39m,
                 [32m'json spaces'[39m: [33m2[39m,
                 views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
                 [32m'view engine'[39m: [32m'jade'[39m },
              engines: {},
              viewCallbacks: [],
              _events: { mount: [36m[Function][39m },
              _router: 
               { map: [36m[Object][39m,
                 params: {},
                 _params: [],
                 caseSensitive: [33mfalse[39m,
                 strict: [33mfalse[39m,
                 middleware: [36m[Function: router][39m },
              routes: 
               { get: [36m[Object][39m,
                 post: [36m[Object][39m,
                 delete: [36m[Object][39m,
                 put: [36m[Object][39m },
              router: [36m[Getter][39m,
              locals: 
               { [Function: locals]
                 settings: [36m[Object][39m,
                 conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
              _usedRouter: [33mtrue[39m },
           connection: [36m[Function: connectionListener][39m,
           checkContinue: [] },
        httpAllowHalfOpen: [33mfalse[39m },
     ondrain: [36m[Function][39m,
     _idleTimeout: [33m120000[39m,
     _idleNext: 
      { _handle: 
         { writeQueueSize: [33m0[39m,
           socket: [36m[Circular][39m,
           onread: [36m[Function: onread][39m },
        _pendingWriteReqs: [33m0[39m,
        _flags: [33m0[39m,
        _connectQueueSize: [33m0[39m,
        destroyed: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        bytesRead: [33m37900[39m,
        bytesWritten: [33m4820[39m,
        allowHalfOpen: [33mtrue[39m,
        writable: [33mtrue[39m,
        readable: [33mtrue[39m,
        server: 
         { connections: [33m2[39m,
           allowHalfOpen: [33mtrue[39m,
           _handle: 
            { writeQueueSize: [33m0[39m,
              onconnection: [36m[Function: onconnection][39m,
              socket: [36m[Circular][39m },
           _events: 
            { request: 
               { [Function: app]
                 use: [36m[Function][39m,
                 handle: [36m[Function][39m,
                 listen: [36m[Function][39m,
                 setMaxListeners: [36m[Function][39m,
                 emit: [36m[Function][39m,
                 addListener: [36m[Function][39m,
                 on: [36m[Function][39m,
                 once: [36m[Function][39m,
                 removeListener: [36m[Function][39m,
                 removeAllListeners: [36m[Function][39m,
                 listeners: [36m[Function][39m,
                 route: [32m'/'[39m,
                 stack: [36m[Object][39m,
                 init: [36m[Function][39m,
                 defaultConfiguration: [36m[Function][39m,
                 engine: [36m[Function][39m,
                 param: [36m[Function][39m,
                 set: [36m[Function][39m,
                 path: [36m[Function][39m,
                 enabled: [36m[Function][39m,
                 disabled: [36m[Function][39m,
                 enable: [36m[Function][39m,
                 disable: [36m[Function][39m,
                 configure: [36m[Function][39m,
                 get: [36m[Function][39m,
                 post: [36m[Function][39m,
                 put: [36m[Function][39m,
                 head: [36m[Function][39m,
                 delete: [36m[Function][39m,
                 options: [36m[Function][39m,
                 trace: [36m[Function][39m,
                 copy: [36m[Function][39m,
                 lock: [36m[Function][39m,
                 mkcol: [36m[Function][39m,
                 move: [36m[Function][39m,
                 propfind: [36m[Function][39m,
                 proppatch: [36m[Function][39m,
                 unlock: [36m[Function][39m,
                 report: [36m[Function][39m,
                 mkactivity: [36m[Function][39m,
                 checkout: [36m[Function][39m,
                 merge: [36m[Function][39m,
                 [32m'm-search'[39m: [36m[Function][39m,
                 notify: [36m[Function][39m,
                 subscribe: [36m[Function][39m,
                 unsubscribe: [36m[Function][39m,
                 patch: [36m[Function][39m,
                 all: [36m[Function][39m,
                 del: [36m[Function][39m,
                 render: [36m[Function][39m,
                 request: {},
                 response: {},
                 cache: {},
                 settings: [36m[Object][39m,
                 engines: {},
                 viewCallbacks: [],
                 _events: [36m[Object][39m,
                 _router: [36m[Object][39m,
                 routes: [36m[Object][39m,
                 router: [36m[Getter][39m,
                 locals: [36m[Object][39m,
                 _usedRouter: [33mtrue[39m },
              connection: [36m[Function: connectionListener][39m,
              checkContinue: [] },
           httpAllowHalfOpen: [33mfalse[39m },
        ondrain: [36m[Function][39m,
        _idleTimeout: [33m120000[39m,
        _idleNext: 
         { _idleNext: [36m[Circular][39m,
           _idlePrev: [36m[Circular][39m,
           ontimeout: [36m[Function][39m },
        _idlePrev: [36m[Circular][39m,
        _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
        _events: 
         { timeout: { [Function: g] listener: [36m[Function][39m },
           error: [36m[Function][39m,
           close: [ [36m[Function][39m ] },
        ondata: [36m[Function][39m,
        onend: [36m[Function][39m,
        _httpMessage: [1mnull[22m },
     _idlePrev: 
      { _idleNext: [36m[Circular][39m,
        _idlePrev: 
         { _handle: 
            { writeQueueSize: [33m0[39m,
              socket: [36m[Circular][39m,
              onread: [36m[Function: onread][39m },
           _pendingWriteReqs: [33m0[39m,
           _flags: [33m0[39m,
           _connectQueueSize: [33m0[39m,
           destroyed: [33mfalse[39m,
           errorEmitted: [33mfalse[39m,
           bytesRead: [33m37900[39m,
           bytesWritten: [33m4820[39m,
           allowHalfOpen: [33mtrue[39m,
           writable: [33mtrue[39m,
           readable: [33mtrue[39m,
           server: 
            { connections: [33m2[39m,
              allowHalfOpen: [33mtrue[39m,
              _handle: 
               { writeQueueSize: [33m0[39m,
                 onconnection: [36m[Function: onconnection][39m,
                 socket: [36m[Circular][39m },
              _events: 
               { request: [36m[Object][39m,
                 connection: [36m[Function: connectionListener][39m,
                 checkContinue: [] },
              httpAllowHalfOpen: [33mfalse[39m },
           ondrain: [36m[Function][39m,
           _idleTimeout: [33m120000[39m,
           _idleNext: [36m[Circular][39m,
           _idlePrev: [36m[Circular][39m,
           _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
           _events: 
            { timeout: { [Function: g] listener: [36m[Function][39m },
              error: [36m[Function][39m,
              close: [ [36m[Function][39m ] },
           ondata: [36m[Function][39m,
           onend: [36m[Function][39m,
           _httpMessage: [1mnull[22m },
        ontimeout: [36m[Function][39m },
     _idleStart: [35mTue, 27 Nov 2012 10:19:38 GMT[39m,
     _events: 
      { timeout: { [Function: g] listener: [36m[Function][39m },
        error: [36m[Function][39m,
        close: 
         [ [36m[Function][39m,
           [36m[Function: onServerResponseClose][39m ] },
     ondata: [36m[Function][39m,
     onend: [36m[Function][39m,
     _httpMessage: 
      { output: [],
        viewCallbacks: [],
        outputEncodings: [],
        locals: 
         { [Function: locals]
           session: [90mundefined[39m,
           redir: [90mundefined[39m,
           message: [90mundefined[39m,
           type: [90mundefined[39m,
           user: 
            { __v: 0,
              _id: 50af3cc0540c32480c000002,
              address: 
               { zip: '123',
                 country: 'France',
                 area: 'Rhône-Alpes',
                 state: 'Rhône',
                 city: 'Lyon',
                 arr: '',
                 street: '',
                 street_number: '' },
              apiCode: '046019c3bd6f095e816b0c66c73474e992c4605e',
              apiCodeCreationDate: Tue, 27 Nov 2012 09:35:18 GMT,
              apiToken: '82bf023262fb5f37d12870cd1ae082917e92e6cd',
              apiTokenCreationDate: Tue, 27 Nov 2012 10:19:37 GMT,
              bio: '',
              formatted_address: 'Lyon, France',
              hash: '794c135be75a344b650b9dd3ac0f2fcfdc9b2fec',
              location: { lat: 45.764043, lng: 4.835659 },
              login: 'renaud.bessieres',
              mail: 'renaud.bessieres@gmail.com',
              name: 'renaud.bessieres',
              salt: '8b680de1cc5a874ab34260daeff8ed26149a9f55',
              token: '734e9b18dddb2b14dac7904bfc2e3ed59935b750',
              type: 1,
              web: '',
              apiStatus: 2,
              status: 1,
              lastLoginDate: Fri, 23 Nov 2012 09:07:12 GMT,
              lastModifDate: Fri, 23 Nov 2012 09:07:12 GMT,
              creationDate: Fri, 23 Nov 2012 09:07:12 GMT,
              favplace: 
               [ { _id: 50af49fbc711804817000002,
                   location: [Object],
                   name: 'api test1' },
                 { _id: 50af49fbc711804817000003,
                   location: [Object],
                   name: 'api test2' },
                 { name: 'Paris, France',
                   location: [Object],
                   _id: 50af61f315a0488c18000002 },
                 { _id: 50b4823441a9666c16000002,
                   location: [Object],
                   name: 'api test1' },
                 { _id: 50b4823441a9666c16000003,
                   location: [Object],
                   name: 'api test2' } ],
              placesubs: [],
              tagsubs: [ 'tag33', 'tag1', 'tag2' ],
              usersubs: 
               [ { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: '2012-11-23T07:05:56.559Z',
                   lastModifDate: '2012-11-23T07:05:56.559Z',
                   lastLoginDate: '2012-11-23T07:05:56.559Z',
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                   salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                   name: 'rebe100x',
                   mail: 'rebe100x@gmail.com',
                   login: 'rebe100x',
                   location: [Object],
                   hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                   formatted_address: 'Marseille, France',
                   address: [Object],
                   _id: '50af2054fba918480c000006',
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: '2012-11-23T07:21:40.444Z',
                   lastModifDate: '2012-11-23T07:21:40.444Z',
                   lastLoginDate: '2012-11-23T07:21:40.444Z',
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                   salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                   name: 'labs.yakwala',
                   mail: 'labs.yakwala@gmail.com',
                   login: 'labs.yakwala',
                   location: [Object],
                   hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                   formatted_address: 'Paris, France',
                   address: [Object],
                   _id: '50af2404beccdf180b000002',
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   lastModifDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   lastLoginDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                   salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                   name: 'rebe100x',
                   mail: 'rebe100x@gmail.com',
                   login: 'rebe100x',
                   location: [Object],
                   hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                   formatted_address: 'Marseille, France',
                   address: [Object],
                   _id: 50af2054fba918480c000006,
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   lastModifDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   lastLoginDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                   salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                   name: 'labs.yakwala',
                   mail: 'labs.yakwala@gmail.com',
                   login: 'labs.yakwala',
                   location: [Object],
                   hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                   formatted_address: 'Paris, France',
                   address: [Object],
                   _id: 50af2404beccdf180b000002,
                   __v: 0 } ],
              thumb: '4abd68108860dcea8000c08ce82b09d1.jpeg',
              tag: [ '' ] } },
        writable: [33mtrue[39m,
        end: [36m[Function][39m,
        _last: [33mfalse[39m,
        chunkedEncoding: [33mfalse[39m,
        shouldKeepAlive: [33mtrue[39m,
        useChunkedEncodingByDefault: [33mtrue[39m,
        _hasBody: [33mtrue[39m,
        _trailer: [32m''[39m,
        finished: [33mfalse[39m,
        socket: [36m[Circular][39m,
        connection: [36m[Circular][39m,
        _events: { finish: [36m[Function][39m, header: [36m[Function][39m },
        _expect_continue: [33mtrue[39m,
        _sent100: [33mtrue[39m,
        app: 
         { [Function: app]
           use: [36m[Function][39m,
           handle: [36m[Function][39m,
           listen: [36m[Function][39m,
           setMaxListeners: [36m[Function][39m,
           emit: [36m[Function][39m,
           addListener: [36m[Function][39m,
           on: [36m[Function][39m,
           once: [36m[Function][39m,
           removeListener: [36m[Function][39m,
           removeAllListeners: [36m[Function][39m,
           listeners: [36m[Function][39m,
           route: [32m'/'[39m,
           stack: 
            [ { route: [32m''[39m, handle: [36m[Function: query][39m },
              { route: [32m''[39m,
                handle: [36m[Function: expressInit][39m },
              { route: [32m''[39m,
                handle: [36m[Function: bodyParser][39m },
              { route: [32m''[39m, handle: [36m[Function: static][39m },
              { route: [32m''[39m,
                handle: [36m[Function: cookieParser][39m },
              { route: [32m''[39m, handle: [36m[Function: session][39m },
              { route: [32m''[39m, handle: [36m[Function][39m },
              { route: [32m''[39m,
                handle: [36m[Function: methodOverride][39m },
              { route: [32m''[39m, handle: [36m[Function: router][39m },
              { route: [32m''[39m,
                handle: [36m[Function: errorHandler][39m } ],
           init: [36m[Function][39m,
           defaultConfiguration: [36m[Function][39m,
           engine: [36m[Function][39m,
           param: [36m[Function][39m,
           set: [36m[Function][39m,
           path: [36m[Function][39m,
           enabled: [36m[Function][39m,
           disabled: [36m[Function][39m,
           enable: [36m[Function][39m,
           disable: [36m[Function][39m,
           configure: [36m[Function][39m,
           get: [36m[Function][39m,
           post: [36m[Function][39m,
           put: [36m[Function][39m,
           head: [36m[Function][39m,
           delete: [36m[Function][39m,
           options: [36m[Function][39m,
           trace: [36m[Function][39m,
           copy: [36m[Function][39m,
           lock: [36m[Function][39m,
           mkcol: [36m[Function][39m,
           move: [36m[Function][39m,
           propfind: [36m[Function][39m,
           proppatch: [36m[Function][39m,
           unlock: [36m[Function][39m,
           report: [36m[Function][39m,
           mkactivity: [36m[Function][39m,
           checkout: [36m[Function][39m,
           merge: [36m[Function][39m,
           [32m'm-search'[39m: [36m[Function][39m,
           notify: [36m[Function][39m,
           subscribe: [36m[Function][39m,
           unsubscribe: [36m[Function][39m,
           patch: [36m[Function][39m,
           all: [36m[Function][39m,
           del: [36m[Function][39m,
           render: [36m[Function][39m,
           request: {},
           response: {},
           cache: {},
           settings: 
            { env: [32m'development'[39m,
              [32m'jsonp callback name'[39m: [32m'callback'[39m,
              [32m'json spaces'[39m: [33m2[39m,
              views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
              [32m'view engine'[39m: [32m'jade'[39m },
           engines: {},
           viewCallbacks: [],
           _events: { mount: [36m[Function][39m },
           _router: 
            { map: 
               { get: [36m[Object][39m,
                 post: [36m[Object][39m,
                 delete: [36m[Object][39m,
                 put: [36m[Object][39m },
              params: {},
              _params: [],
              caseSensitive: [33mfalse[39m,
              strict: [33mfalse[39m,
              middleware: [36m[Function: router][39m },
           routes: 
            { get: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              post: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              delete: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              put: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ] },
           router: [36m[Getter][39m,
           locals: 
            { [Function: locals]
              settings: 
               { env: [32m'development'[39m,
                 [32m'jsonp callback name'[39m: [32m'callback'[39m,
                 [32m'json spaces'[39m: [33m2[39m,
                 views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
                 [32m'view engine'[39m: [32m'jade'[39m },
              conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
           _usedRouter: [33mtrue[39m },
        _headers: { [32m'x-powered-by'[39m: [32m'Express'[39m },
        _headerNames: { [32m'x-powered-by'[39m: [32m'X-Powered-By'[39m },
        req: [36m[Circular][39m } },
  files: 
   { value: 
      { size: [33m9344[39m,
        path: [32m'c:\\NODE\\YAKFRONT\\main\\public\\uploads\\originals\\64669b4066d1371efbe4aa8be084a6dd.jpg'[39m,
        name: [32m'miro.jpg'[39m,
        type: [32m'image/jpeg'[39m,
        hash: [33mfalse[39m,
        lastModifiedDate: [35mTue, 27 Nov 2012 10:19:38 GMT[39m,
        _writeStream: 
         { path: [32m'c:\\NODE\\YAKFRONT\\main\\public\\uploads\\originals\\64669b4066d1371efbe4aa8be084a6dd.jpg'[39m,
           fd: [33m3[39m,
           writable: [33mfalse[39m,
           flags: [32m'w'[39m,
           encoding: [32m'binary'[39m,
           mode: [33m438[39m,
           bytesWritten: [33m9344[39m,
           busy: [33mfalse[39m,
           _queue: [],
           _open: [36m[Function][39m,
           drainable: [33mtrue[39m },
        length: [36m[Getter][39m,
        filename: [36m[Getter][39m,
        mime: [36m[Getter][39m } },
  connection: 
   { _handle: 
      { writeQueueSize: [33m0[39m,
        socket: [36m[Circular][39m,
        onread: [36m[Function: onread][39m },
     _pendingWriteReqs: [33m0[39m,
     _flags: [33m0[39m,
     _connectQueueSize: [33m0[39m,
     destroyed: [33mfalse[39m,
     errorEmitted: [33mfalse[39m,
     bytesRead: [33m10972[39m,
     bytesWritten: [33m25[39m,
     allowHalfOpen: [33mtrue[39m,
     writable: [33mtrue[39m,
     readable: [33mtrue[39m,
     server: 
      { connections: [33m2[39m,
        allowHalfOpen: [33mtrue[39m,
        _handle: 
         { writeQueueSize: [33m0[39m,
           onconnection: [36m[Function: onconnection][39m,
           socket: [36m[Circular][39m },
        _events: 
         { request: 
            { [Function: app]
              use: [36m[Function][39m,
              handle: [36m[Function][39m,
              listen: [36m[Function][39m,
              setMaxListeners: [36m[Function][39m,
              emit: [36m[Function][39m,
              addListener: [36m[Function][39m,
              on: [36m[Function][39m,
              once: [36m[Function][39m,
              removeListener: [36m[Function][39m,
              removeAllListeners: [36m[Function][39m,
              listeners: [36m[Function][39m,
              route: [32m'/'[39m,
              stack: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              init: [36m[Function][39m,
              defaultConfiguration: [36m[Function][39m,
              engine: [36m[Function][39m,
              param: [36m[Function][39m,
              set: [36m[Function][39m,
              path: [36m[Function][39m,
              enabled: [36m[Function][39m,
              disabled: [36m[Function][39m,
              enable: [36m[Function][39m,
              disable: [36m[Function][39m,
              configure: [36m[Function][39m,
              get: [36m[Function][39m,
              post: [36m[Function][39m,
              put: [36m[Function][39m,
              head: [36m[Function][39m,
              delete: [36m[Function][39m,
              options: [36m[Function][39m,
              trace: [36m[Function][39m,
              copy: [36m[Function][39m,
              lock: [36m[Function][39m,
              mkcol: [36m[Function][39m,
              move: [36m[Function][39m,
              propfind: [36m[Function][39m,
              proppatch: [36m[Function][39m,
              unlock: [36m[Function][39m,
              report: [36m[Function][39m,
              mkactivity: [36m[Function][39m,
              checkout: [36m[Function][39m,
              merge: [36m[Function][39m,
              [32m'm-search'[39m: [36m[Function][39m,
              notify: [36m[Function][39m,
              subscribe: [36m[Function][39m,
              unsubscribe: [36m[Function][39m,
              patch: [36m[Function][39m,
              all: [36m[Function][39m,
              del: [36m[Function][39m,
              render: [36m[Function][39m,
              request: {},
              response: {},
              cache: {},
              settings: 
               { env: [32m'development'[39m,
                 [32m'jsonp callback name'[39m: [32m'callback'[39m,
                 [32m'json spaces'[39m: [33m2[39m,
                 views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
                 [32m'view engine'[39m: [32m'jade'[39m },
              engines: {},
              viewCallbacks: [],
              _events: { mount: [36m[Function][39m },
              _router: 
               { map: [36m[Object][39m,
                 params: {},
                 _params: [],
                 caseSensitive: [33mfalse[39m,
                 strict: [33mfalse[39m,
                 middleware: [36m[Function: router][39m },
              routes: 
               { get: [36m[Object][39m,
                 post: [36m[Object][39m,
                 delete: [36m[Object][39m,
                 put: [36m[Object][39m },
              router: [36m[Getter][39m,
              locals: 
               { [Function: locals]
                 settings: [36m[Object][39m,
                 conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
              _usedRouter: [33mtrue[39m },
           connection: [36m[Function: connectionListener][39m,
           checkContinue: [] },
        httpAllowHalfOpen: [33mfalse[39m },
     ondrain: [36m[Function][39m,
     _idleTimeout: [33m120000[39m,
     _idleNext: 
      { _handle: 
         { writeQueueSize: [33m0[39m,
           socket: [36m[Circular][39m,
           onread: [36m[Function: onread][39m },
        _pendingWriteReqs: [33m0[39m,
        _flags: [33m0[39m,
        _connectQueueSize: [33m0[39m,
        destroyed: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        bytesRead: [33m37900[39m,
        bytesWritten: [33m4820[39m,
        allowHalfOpen: [33mtrue[39m,
        writable: [33mtrue[39m,
        readable: [33mtrue[39m,
        server: 
         { connections: [33m2[39m,
           allowHalfOpen: [33mtrue[39m,
           _handle: 
            { writeQueueSize: [33m0[39m,
              onconnection: [36m[Function: onconnection][39m,
              socket: [36m[Circular][39m },
           _events: 
            { request: 
               { [Function: app]
                 use: [36m[Function][39m,
                 handle: [36m[Function][39m,
                 listen: [36m[Function][39m,
                 setMaxListeners: [36m[Function][39m,
                 emit: [36m[Function][39m,
                 addListener: [36m[Function][39m,
                 on: [36m[Function][39m,
                 once: [36m[Function][39m,
                 removeListener: [36m[Function][39m,
                 removeAllListeners: [36m[Function][39m,
                 listeners: [36m[Function][39m,
                 route: [32m'/'[39m,
                 stack: [36m[Object][39m,
                 init: [36m[Function][39m,
                 defaultConfiguration: [36m[Function][39m,
                 engine: [36m[Function][39m,
                 param: [36m[Function][39m,
                 set: [36m[Function][39m,
                 path: [36m[Function][39m,
                 enabled: [36m[Function][39m,
                 disabled: [36m[Function][39m,
                 enable: [36m[Function][39m,
                 disable: [36m[Function][39m,
                 configure: [36m[Function][39m,
                 get: [36m[Function][39m,
                 post: [36m[Function][39m,
                 put: [36m[Function][39m,
                 head: [36m[Function][39m,
                 delete: [36m[Function][39m,
                 options: [36m[Function][39m,
                 trace: [36m[Function][39m,
                 copy: [36m[Function][39m,
                 lock: [36m[Function][39m,
                 mkcol: [36m[Function][39m,
                 move: [36m[Function][39m,
                 propfind: [36m[Function][39m,
                 proppatch: [36m[Function][39m,
                 unlock: [36m[Function][39m,
                 report: [36m[Function][39m,
                 mkactivity: [36m[Function][39m,
                 checkout: [36m[Function][39m,
                 merge: [36m[Function][39m,
                 [32m'm-search'[39m: [36m[Function][39m,
                 notify: [36m[Function][39m,
                 subscribe: [36m[Function][39m,
                 unsubscribe: [36m[Function][39m,
                 patch: [36m[Function][39m,
                 all: [36m[Function][39m,
                 del: [36m[Function][39m,
                 render: [36m[Function][39m,
                 request: {},
                 response: {},
                 cache: {},
                 settings: [36m[Object][39m,
                 engines: {},
                 viewCallbacks: [],
                 _events: [36m[Object][39m,
                 _router: [36m[Object][39m,
                 routes: [36m[Object][39m,
                 router: [36m[Getter][39m,
                 locals: [36m[Object][39m,
                 _usedRouter: [33mtrue[39m },
              connection: [36m[Function: connectionListener][39m,
              checkContinue: [] },
           httpAllowHalfOpen: [33mfalse[39m },
        ondrain: [36m[Function][39m,
        _idleTimeout: [33m120000[39m,
        _idleNext: 
         { _idleNext: [36m[Circular][39m,
           _idlePrev: [36m[Circular][39m,
           ontimeout: [36m[Function][39m },
        _idlePrev: [36m[Circular][39m,
        _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
        _events: 
         { timeout: { [Function: g] listener: [36m[Function][39m },
           error: [36m[Function][39m,
           close: [ [36m[Function][39m ] },
        ondata: [36m[Function][39m,
        onend: [36m[Function][39m,
        _httpMessage: [1mnull[22m },
     _idlePrev: 
      { _idleNext: [36m[Circular][39m,
        _idlePrev: 
         { _handle: 
            { writeQueueSize: [33m0[39m,
              socket: [36m[Circular][39m,
              onread: [36m[Function: onread][39m },
           _pendingWriteReqs: [33m0[39m,
           _flags: [33m0[39m,
           _connectQueueSize: [33m0[39m,
           destroyed: [33mfalse[39m,
           errorEmitted: [33mfalse[39m,
           bytesRead: [33m37900[39m,
           bytesWritten: [33m4820[39m,
           allowHalfOpen: [33mtrue[39m,
           writable: [33mtrue[39m,
           readable: [33mtrue[39m,
           server: 
            { connections: [33m2[39m,
              allowHalfOpen: [33mtrue[39m,
              _handle: 
               { writeQueueSize: [33m0[39m,
                 onconnection: [36m[Function: onconnection][39m,
                 socket: [36m[Circular][39m },
              _events: 
               { request: [36m[Object][39m,
                 connection: [36m[Function: connectionListener][39m,
                 checkContinue: [] },
              httpAllowHalfOpen: [33mfalse[39m },
           ondrain: [36m[Function][39m,
           _idleTimeout: [33m120000[39m,
           _idleNext: [36m[Circular][39m,
           _idlePrev: [36m[Circular][39m,
           _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
           _events: 
            { timeout: { [Function: g] listener: [36m[Function][39m },
              error: [36m[Function][39m,
              close: [ [36m[Function][39m ] },
           ondata: [36m[Function][39m,
           onend: [36m[Function][39m,
           _httpMessage: [1mnull[22m },
        ontimeout: [36m[Function][39m },
     _idleStart: [35mTue, 27 Nov 2012 10:19:38 GMT[39m,
     _events: 
      { timeout: { [Function: g] listener: [36m[Function][39m },
        error: [36m[Function][39m,
        close: 
         [ [36m[Function][39m,
           [36m[Function: onServerResponseClose][39m ] },
     ondata: [36m[Function][39m,
     onend: [36m[Function][39m,
     _httpMessage: 
      { output: [],
        viewCallbacks: [],
        outputEncodings: [],
        locals: 
         { [Function: locals]
           session: [90mundefined[39m,
           redir: [90mundefined[39m,
           message: [90mundefined[39m,
           type: [90mundefined[39m,
           user: 
            { __v: 0,
              _id: 50af3cc0540c32480c000002,
              address: 
               { zip: '123',
                 country: 'France',
                 area: 'Rhône-Alpes',
                 state: 'Rhône',
                 city: 'Lyon',
                 arr: '',
                 street: '',
                 street_number: '' },
              apiCode: '046019c3bd6f095e816b0c66c73474e992c4605e',
              apiCodeCreationDate: Tue, 27 Nov 2012 09:35:18 GMT,
              apiToken: '82bf023262fb5f37d12870cd1ae082917e92e6cd',
              apiTokenCreationDate: Tue, 27 Nov 2012 10:19:37 GMT,
              bio: '',
              formatted_address: 'Lyon, France',
              hash: '794c135be75a344b650b9dd3ac0f2fcfdc9b2fec',
              location: { lat: 45.764043, lng: 4.835659 },
              login: 'renaud.bessieres',
              mail: 'renaud.bessieres@gmail.com',
              name: 'renaud.bessieres',
              salt: '8b680de1cc5a874ab34260daeff8ed26149a9f55',
              token: '734e9b18dddb2b14dac7904bfc2e3ed59935b750',
              type: 1,
              web: '',
              apiStatus: 2,
              status: 1,
              lastLoginDate: Fri, 23 Nov 2012 09:07:12 GMT,
              lastModifDate: Fri, 23 Nov 2012 09:07:12 GMT,
              creationDate: Fri, 23 Nov 2012 09:07:12 GMT,
              favplace: 
               [ { _id: 50af49fbc711804817000002,
                   location: [Object],
                   name: 'api test1' },
                 { _id: 50af49fbc711804817000003,
                   location: [Object],
                   name: 'api test2' },
                 { name: 'Paris, France',
                   location: [Object],
                   _id: 50af61f315a0488c18000002 },
                 { _id: 50b4823441a9666c16000002,
                   location: [Object],
                   name: 'api test1' },
                 { _id: 50b4823441a9666c16000003,
                   location: [Object],
                   name: 'api test2' } ],
              placesubs: [],
              tagsubs: [ 'tag33', 'tag1', 'tag2' ],
              usersubs: 
               [ { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: '2012-11-23T07:05:56.559Z',
                   lastModifDate: '2012-11-23T07:05:56.559Z',
                   lastLoginDate: '2012-11-23T07:05:56.559Z',
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                   salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                   name: 'rebe100x',
                   mail: 'rebe100x@gmail.com',
                   login: 'rebe100x',
                   location: [Object],
                   hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                   formatted_address: 'Marseille, France',
                   address: [Object],
                   _id: '50af2054fba918480c000006',
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: '2012-11-23T07:21:40.444Z',
                   lastModifDate: '2012-11-23T07:21:40.444Z',
                   lastLoginDate: '2012-11-23T07:21:40.444Z',
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                   salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                   name: 'labs.yakwala',
                   mail: 'labs.yakwala@gmail.com',
                   login: 'labs.yakwala',
                   location: [Object],
                   hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                   formatted_address: 'Paris, France',
                   address: [Object],
                   _id: '50af2404beccdf180b000002',
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   lastModifDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   lastLoginDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                   salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                   name: 'rebe100x',
                   mail: 'rebe100x@gmail.com',
                   login: 'rebe100x',
                   location: [Object],
                   hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                   formatted_address: 'Marseille, France',
                   address: [Object],
                   _id: 50af2054fba918480c000006,
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   lastModifDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   lastLoginDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                   salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                   name: 'labs.yakwala',
                   mail: 'labs.yakwala@gmail.com',
                   login: 'labs.yakwala',
                   location: [Object],
                   hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                   formatted_address: 'Paris, France',
                   address: [Object],
                   _id: 50af2404beccdf180b000002,
                   __v: 0 } ],
              thumb: '4abd68108860dcea8000c08ce82b09d1.jpeg',
              tag: [ '' ] } },
        writable: [33mtrue[39m,
        end: [36m[Function][39m,
        _last: [33mfalse[39m,
        chunkedEncoding: [33mfalse[39m,
        shouldKeepAlive: [33mtrue[39m,
        useChunkedEncodingByDefault: [33mtrue[39m,
        _hasBody: [33mtrue[39m,
        _trailer: [32m''[39m,
        finished: [33mfalse[39m,
        socket: [36m[Circular][39m,
        connection: [36m[Circular][39m,
        _events: { finish: [36m[Function][39m, header: [36m[Function][39m },
        _expect_continue: [33mtrue[39m,
        _sent100: [33mtrue[39m,
        app: 
         { [Function: app]
           use: [36m[Function][39m,
           handle: [36m[Function][39m,
           listen: [36m[Function][39m,
           setMaxListeners: [36m[Function][39m,
           emit: [36m[Function][39m,
           addListener: [36m[Function][39m,
           on: [36m[Function][39m,
           once: [36m[Function][39m,
           removeListener: [36m[Function][39m,
           removeAllListeners: [36m[Function][39m,
           listeners: [36m[Function][39m,
           route: [32m'/'[39m,
           stack: 
            [ { route: [32m''[39m, handle: [36m[Function: query][39m },
              { route: [32m''[39m,
                handle: [36m[Function: expressInit][39m },
              { route: [32m''[39m,
                handle: [36m[Function: bodyParser][39m },
              { route: [32m''[39m, handle: [36m[Function: static][39m },
              { route: [32m''[39m,
                handle: [36m[Function: cookieParser][39m },
              { route: [32m''[39m, handle: [36m[Function: session][39m },
              { route: [32m''[39m, handle: [36m[Function][39m },
              { route: [32m''[39m,
                handle: [36m[Function: methodOverride][39m },
              { route: [32m''[39m, handle: [36m[Function: router][39m },
              { route: [32m''[39m,
                handle: [36m[Function: errorHandler][39m } ],
           init: [36m[Function][39m,
           defaultConfiguration: [36m[Function][39m,
           engine: [36m[Function][39m,
           param: [36m[Function][39m,
           set: [36m[Function][39m,
           path: [36m[Function][39m,
           enabled: [36m[Function][39m,
           disabled: [36m[Function][39m,
           enable: [36m[Function][39m,
           disable: [36m[Function][39m,
           configure: [36m[Function][39m,
           get: [36m[Function][39m,
           post: [36m[Function][39m,
           put: [36m[Function][39m,
           head: [36m[Function][39m,
           delete: [36m[Function][39m,
           options: [36m[Function][39m,
           trace: [36m[Function][39m,
           copy: [36m[Function][39m,
           lock: [36m[Function][39m,
           mkcol: [36m[Function][39m,
           move: [36m[Function][39m,
           propfind: [36m[Function][39m,
           proppatch: [36m[Function][39m,
           unlock: [36m[Function][39m,
           report: [36m[Function][39m,
           mkactivity: [36m[Function][39m,
           checkout: [36m[Function][39m,
           merge: [36m[Function][39m,
           [32m'm-search'[39m: [36m[Function][39m,
           notify: [36m[Function][39m,
           subscribe: [36m[Function][39m,
           unsubscribe: [36m[Function][39m,
           patch: [36m[Function][39m,
           all: [36m[Function][39m,
           del: [36m[Function][39m,
           render: [36m[Function][39m,
           request: {},
           response: {},
           cache: {},
           settings: 
            { env: [32m'development'[39m,
              [32m'jsonp callback name'[39m: [32m'callback'[39m,
              [32m'json spaces'[39m: [33m2[39m,
              views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
              [32m'view engine'[39m: [32m'jade'[39m },
           engines: {},
           viewCallbacks: [],
           _events: { mount: [36m[Function][39m },
           _router: 
            { map: 
               { get: [36m[Object][39m,
                 post: [36m[Object][39m,
                 delete: [36m[Object][39m,
                 put: [36m[Object][39m },
              params: {},
              _params: [],
              caseSensitive: [33mfalse[39m,
              strict: [33mfalse[39m,
              middleware: [36m[Function: router][39m },
           routes: 
            { get: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              post: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              delete: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              put: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ] },
           router: [36m[Getter][39m,
           locals: 
            { [Function: locals]
              settings: 
               { env: [32m'development'[39m,
                 [32m'jsonp callback name'[39m: [32m'callback'[39m,
                 [32m'json spaces'[39m: [33m2[39m,
                 views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
                 [32m'view engine'[39m: [32m'jade'[39m },
              conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
           _usedRouter: [33mtrue[39m },
        _headers: { [32m'x-powered-by'[39m: [32m'Express'[39m },
        _headerNames: { [32m'x-powered-by'[39m: [32m'X-Powered-By'[39m },
        req: [36m[Circular][39m } },
  httpVersion: [32m'1.1'[39m,
  _body: [33mtrue[39m,
  _events: 
   { error: [36m[Function][39m,
     aborted: [36m[Function][39m,
     data: [36m[Function][39m,
     end: [36m[Function][39m },
  complete: [33mtrue[39m,
  headers: 
   { [32m'user-agent'[39m: [32m'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'[39m,
     host: [32m'localhost:3000'[39m,
     accept: [32m'*/*'[39m,
     [32m'accept-language'[39m: [32m'fr'[39m,
     [32m'content-length'[39m: [32m'10607'[39m,
     expect: [32m'100-continue'[39m,
     [32m'content-type'[39m: [32m'multipart/form-data; boundary=----------------------------1b80feba833f'[39m },
  _ended: [33mtrue[39m,
  trailers: {},
  secret: [32m'SAfuBUZ2'[39m,
  cookies: {},
  readable: [33mfalse[39m,
  url: [32m'/api/user/feed/50af3cc0540c32480c000002'[39m,
  signedCookies: {},
  sessionStore: 
   { sessions: 
      { [32m'mHBZ+LvzMzNJxu31Wdc+8gbg'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'HMNFTia+eV/QbzGZlBXxBIQn'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        shpr7bAbqlOkEIGSHjx2QSIi: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'8k/Vu7oz3tkRumc5jJHybnhM'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        D0ozfoeFW2eOfcX3y8nS4DE0: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'4beZqytdgvIgGw/t+dFDZSO/'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'Xj3NyHNPxZLbMhi/tCpt6Nhm'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'g5PQBiVhcNxQ3HplkY+Qq5CL'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        oTqPUKTd9KIYjJeXsJoFbp4M: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'F1DE+bwFbImYmLMDzXZ0hi5f'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        Gg4R9G9lkcnVznLohl4DIeoc: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        vKJPPBFYh1lJ5pxO3057ksIi: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'1MYtoVaLVr+GcsJ+84KG2WSm'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        bS8s5vnUVuq4IVtRP96jbwKo: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'Q7V+WAZtJH+WRVL1zQo4VKrF'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'IDHrCgV1y5jmR0dpJbS5faX+'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        FgG2jqvNQuqZXJYVkCuEZ0Qb: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'FLR+duCg2uXQerWtnqlAS4Hd'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'w8Yy/xzT9XGXKNTLaRtzUOEf'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m,
        [32m'+27tEIZhaU8iqfR0MyzApVr5'[39m: [32m'{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}'[39m },
     generate: [36m[Function][39m },
  method: [32m'POST'[39m,
  statusCode: [1mnull[22m,
  sessionID: [32m'V3OXHLIu21zhzJB6Pv6kuPt4'[39m,
  client: 
   { _handle: 
      { writeQueueSize: [33m0[39m,
        socket: [36m[Circular][39m,
        onread: [36m[Function: onread][39m },
     _pendingWriteReqs: [33m0[39m,
     _flags: [33m0[39m,
     _connectQueueSize: [33m0[39m,
     destroyed: [33mfalse[39m,
     errorEmitted: [33mfalse[39m,
     bytesRead: [33m10972[39m,
     bytesWritten: [33m25[39m,
     allowHalfOpen: [33mtrue[39m,
     writable: [33mtrue[39m,
     readable: [33mtrue[39m,
     server: 
      { connections: [33m2[39m,
        allowHalfOpen: [33mtrue[39m,
        _handle: 
         { writeQueueSize: [33m0[39m,
           onconnection: [36m[Function: onconnection][39m,
           socket: [36m[Circular][39m },
        _events: 
         { request: 
            { [Function: app]
              use: [36m[Function][39m,
              handle: [36m[Function][39m,
              listen: [36m[Function][39m,
              setMaxListeners: [36m[Function][39m,
              emit: [36m[Function][39m,
              addListener: [36m[Function][39m,
              on: [36m[Function][39m,
              once: [36m[Function][39m,
              removeListener: [36m[Function][39m,
              removeAllListeners: [36m[Function][39m,
              listeners: [36m[Function][39m,
              route: [32m'/'[39m,
              stack: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              init: [36m[Function][39m,
              defaultConfiguration: [36m[Function][39m,
              engine: [36m[Function][39m,
              param: [36m[Function][39m,
              set: [36m[Function][39m,
              path: [36m[Function][39m,
              enabled: [36m[Function][39m,
              disabled: [36m[Function][39m,
              enable: [36m[Function][39m,
              disable: [36m[Function][39m,
              configure: [36m[Function][39m,
              get: [36m[Function][39m,
              post: [36m[Function][39m,
              put: [36m[Function][39m,
              head: [36m[Function][39m,
              delete: [36m[Function][39m,
              options: [36m[Function][39m,
              trace: [36m[Function][39m,
              copy: [36m[Function][39m,
              lock: [36m[Function][39m,
              mkcol: [36m[Function][39m,
              move: [36m[Function][39m,
              propfind: [36m[Function][39m,
              proppatch: [36m[Function][39m,
              unlock: [36m[Function][39m,
              report: [36m[Function][39m,
              mkactivity: [36m[Function][39m,
              checkout: [36m[Function][39m,
              merge: [36m[Function][39m,
              [32m'm-search'[39m: [36m[Function][39m,
              notify: [36m[Function][39m,
              subscribe: [36m[Function][39m,
              unsubscribe: [36m[Function][39m,
              patch: [36m[Function][39m,
              all: [36m[Function][39m,
              del: [36m[Function][39m,
              render: [36m[Function][39m,
              request: {},
              response: {},
              cache: {},
              settings: 
               { env: [32m'development'[39m,
                 [32m'jsonp callback name'[39m: [32m'callback'[39m,
                 [32m'json spaces'[39m: [33m2[39m,
                 views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
                 [32m'view engine'[39m: [32m'jade'[39m },
              engines: {},
              viewCallbacks: [],
              _events: { mount: [36m[Function][39m },
              _router: 
               { map: [36m[Object][39m,
                 params: {},
                 _params: [],
                 caseSensitive: [33mfalse[39m,
                 strict: [33mfalse[39m,
                 middleware: [36m[Function: router][39m },
              routes: 
               { get: [36m[Object][39m,
                 post: [36m[Object][39m,
                 delete: [36m[Object][39m,
                 put: [36m[Object][39m },
              router: [36m[Getter][39m,
              locals: 
               { [Function: locals]
                 settings: [36m[Object][39m,
                 conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
              _usedRouter: [33mtrue[39m },
           connection: [36m[Function: connectionListener][39m,
           checkContinue: [] },
        httpAllowHalfOpen: [33mfalse[39m },
     ondrain: [36m[Function][39m,
     _idleTimeout: [33m120000[39m,
     _idleNext: 
      { _handle: 
         { writeQueueSize: [33m0[39m,
           socket: [36m[Circular][39m,
           onread: [36m[Function: onread][39m },
        _pendingWriteReqs: [33m0[39m,
        _flags: [33m0[39m,
        _connectQueueSize: [33m0[39m,
        destroyed: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        bytesRead: [33m37900[39m,
        bytesWritten: [33m4820[39m,
        allowHalfOpen: [33mtrue[39m,
        writable: [33mtrue[39m,
        readable: [33mtrue[39m,
        server: 
         { connections: [33m2[39m,
           allowHalfOpen: [33mtrue[39m,
           _handle: 
            { writeQueueSize: [33m0[39m,
              onconnection: [36m[Function: onconnection][39m,
              socket: [36m[Circular][39m },
           _events: 
            { request: 
               { [Function: app]
                 use: [36m[Function][39m,
                 handle: [36m[Function][39m,
                 listen: [36m[Function][39m,
                 setMaxListeners: [36m[Function][39m,
                 emit: [36m[Function][39m,
                 addListener: [36m[Function][39m,
                 on: [36m[Function][39m,
                 once: [36m[Function][39m,
                 removeListener: [36m[Function][39m,
                 removeAllListeners: [36m[Function][39m,
                 listeners: [36m[Function][39m,
                 route: [32m'/'[39m,
                 stack: [36m[Object][39m,
                 init: [36m[Function][39m,
                 defaultConfiguration: [36m[Function][39m,
                 engine: [36m[Function][39m,
                 param: [36m[Function][39m,
                 set: [36m[Function][39m,
                 path: [36m[Function][39m,
                 enabled: [36m[Function][39m,
                 disabled: [36m[Function][39m,
                 enable: [36m[Function][39m,
                 disable: [36m[Function][39m,
                 configure: [36m[Function][39m,
                 get: [36m[Function][39m,
                 post: [36m[Function][39m,
                 put: [36m[Function][39m,
                 head: [36m[Function][39m,
                 delete: [36m[Function][39m,
                 options: [36m[Function][39m,
                 trace: [36m[Function][39m,
                 copy: [36m[Function][39m,
                 lock: [36m[Function][39m,
                 mkcol: [36m[Function][39m,
                 move: [36m[Function][39m,
                 propfind: [36m[Function][39m,
                 proppatch: [36m[Function][39m,
                 unlock: [36m[Function][39m,
                 report: [36m[Function][39m,
                 mkactivity: [36m[Function][39m,
                 checkout: [36m[Function][39m,
                 merge: [36m[Function][39m,
                 [32m'm-search'[39m: [36m[Function][39m,
                 notify: [36m[Function][39m,
                 subscribe: [36m[Function][39m,
                 unsubscribe: [36m[Function][39m,
                 patch: [36m[Function][39m,
                 all: [36m[Function][39m,
                 del: [36m[Function][39m,
                 render: [36m[Function][39m,
                 request: {},
                 response: {},
                 cache: {},
                 settings: [36m[Object][39m,
                 engines: {},
                 viewCallbacks: [],
                 _events: [36m[Object][39m,
                 _router: [36m[Object][39m,
                 routes: [36m[Object][39m,
                 router: [36m[Getter][39m,
                 locals: [36m[Object][39m,
                 _usedRouter: [33mtrue[39m },
              connection: [36m[Function: connectionListener][39m,
              checkContinue: [] },
           httpAllowHalfOpen: [33mfalse[39m },
        ondrain: [36m[Function][39m,
        _idleTimeout: [33m120000[39m,
        _idleNext: 
         { _idleNext: [36m[Circular][39m,
           _idlePrev: [36m[Circular][39m,
           ontimeout: [36m[Function][39m },
        _idlePrev: [36m[Circular][39m,
        _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
        _events: 
         { timeout: { [Function: g] listener: [36m[Function][39m },
           error: [36m[Function][39m,
           close: [ [36m[Function][39m ] },
        ondata: [36m[Function][39m,
        onend: [36m[Function][39m,
        _httpMessage: [1mnull[22m },
     _idlePrev: 
      { _idleNext: [36m[Circular][39m,
        _idlePrev: 
         { _handle: 
            { writeQueueSize: [33m0[39m,
              socket: [36m[Circular][39m,
              onread: [36m[Function: onread][39m },
           _pendingWriteReqs: [33m0[39m,
           _flags: [33m0[39m,
           _connectQueueSize: [33m0[39m,
           destroyed: [33mfalse[39m,
           errorEmitted: [33mfalse[39m,
           bytesRead: [33m37900[39m,
           bytesWritten: [33m4820[39m,
           allowHalfOpen: [33mtrue[39m,
           writable: [33mtrue[39m,
           readable: [33mtrue[39m,
           server: 
            { connections: [33m2[39m,
              allowHalfOpen: [33mtrue[39m,
              _handle: 
               { writeQueueSize: [33m0[39m,
                 onconnection: [36m[Function: onconnection][39m,
                 socket: [36m[Circular][39m },
              _events: 
               { request: [36m[Object][39m,
                 connection: [36m[Function: connectionListener][39m,
                 checkContinue: [] },
              httpAllowHalfOpen: [33mfalse[39m },
           ondrain: [36m[Function][39m,
           _idleTimeout: [33m120000[39m,
           _idleNext: [36m[Circular][39m,
           _idlePrev: [36m[Circular][39m,
           _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
           _events: 
            { timeout: { [Function: g] listener: [36m[Function][39m },
              error: [36m[Function][39m,
              close: [ [36m[Function][39m ] },
           ondata: [36m[Function][39m,
           onend: [36m[Function][39m,
           _httpMessage: [1mnull[22m },
        ontimeout: [36m[Function][39m },
     _idleStart: [35mTue, 27 Nov 2012 10:19:38 GMT[39m,
     _events: 
      { timeout: { [Function: g] listener: [36m[Function][39m },
        error: [36m[Function][39m,
        close: 
         [ [36m[Function][39m,
           [36m[Function: onServerResponseClose][39m ] },
     ondata: [36m[Function][39m,
     onend: [36m[Function][39m,
     _httpMessage: 
      { output: [],
        viewCallbacks: [],
        outputEncodings: [],
        locals: 
         { [Function: locals]
           session: [90mundefined[39m,
           redir: [90mundefined[39m,
           message: [90mundefined[39m,
           type: [90mundefined[39m,
           user: 
            { __v: 0,
              _id: 50af3cc0540c32480c000002,
              address: 
               { zip: '123',
                 country: 'France',
                 area: 'Rhône-Alpes',
                 state: 'Rhône',
                 city: 'Lyon',
                 arr: '',
                 street: '',
                 street_number: '' },
              apiCode: '046019c3bd6f095e816b0c66c73474e992c4605e',
              apiCodeCreationDate: Tue, 27 Nov 2012 09:35:18 GMT,
              apiToken: '82bf023262fb5f37d12870cd1ae082917e92e6cd',
              apiTokenCreationDate: Tue, 27 Nov 2012 10:19:37 GMT,
              bio: '',
              formatted_address: 'Lyon, France',
              hash: '794c135be75a344b650b9dd3ac0f2fcfdc9b2fec',
              location: { lat: 45.764043, lng: 4.835659 },
              login: 'renaud.bessieres',
              mail: 'renaud.bessieres@gmail.com',
              name: 'renaud.bessieres',
              salt: '8b680de1cc5a874ab34260daeff8ed26149a9f55',
              token: '734e9b18dddb2b14dac7904bfc2e3ed59935b750',
              type: 1,
              web: '',
              apiStatus: 2,
              status: 1,
              lastLoginDate: Fri, 23 Nov 2012 09:07:12 GMT,
              lastModifDate: Fri, 23 Nov 2012 09:07:12 GMT,
              creationDate: Fri, 23 Nov 2012 09:07:12 GMT,
              favplace: 
               [ { _id: 50af49fbc711804817000002,
                   location: [Object],
                   name: 'api test1' },
                 { _id: 50af49fbc711804817000003,
                   location: [Object],
                   name: 'api test2' },
                 { name: 'Paris, France',
                   location: [Object],
                   _id: 50af61f315a0488c18000002 },
                 { _id: 50b4823441a9666c16000002,
                   location: [Object],
                   name: 'api test1' },
                 { _id: 50b4823441a9666c16000003,
                   location: [Object],
                   name: 'api test2' } ],
              placesubs: [],
              tagsubs: [ 'tag33', 'tag1', 'tag2' ],
              usersubs: 
               [ { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: '2012-11-23T07:05:56.559Z',
                   lastModifDate: '2012-11-23T07:05:56.559Z',
                   lastLoginDate: '2012-11-23T07:05:56.559Z',
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                   salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                   name: 'rebe100x',
                   mail: 'rebe100x@gmail.com',
                   login: 'rebe100x',
                   location: [Object],
                   hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                   formatted_address: 'Marseille, France',
                   address: [Object],
                   _id: '50af2054fba918480c000006',
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: '2012-11-23T07:21:40.444Z',
                   lastModifDate: '2012-11-23T07:21:40.444Z',
                   lastLoginDate: '2012-11-23T07:21:40.444Z',
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                   salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                   name: 'labs.yakwala',
                   mail: 'labs.yakwala@gmail.com',
                   login: 'labs.yakwala',
                   location: [Object],
                   hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                   formatted_address: 'Paris, France',
                   address: [Object],
                   _id: '50af2404beccdf180b000002',
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   lastModifDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   lastLoginDate: Fri, 23 Nov 2012 07:05:56 GMT,
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                   salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                   name: 'rebe100x',
                   mail: 'rebe100x@gmail.com',
                   login: 'rebe100x',
                   location: [Object],
                   hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                   formatted_address: 'Marseille, France',
                   address: [Object],
                   _id: 50af2054fba918480c000006,
                   __v: 0 },
                 { tag: [],
                   thumb: 'no-user.png',
                   usersubs: [],
                   tagsubs: [],
                   placesubs: [],
                   favplace: [Object],
                   creationDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   lastModifDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   lastLoginDate: Fri, 23 Nov 2012 07:21:40 GMT,
                   status: 1,
                   apiStatus: 2,
                   type: 1,
                   token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                   salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                   name: 'labs.yakwala',
                   mail: 'labs.yakwala@gmail.com',
                   login: 'labs.yakwala',
                   location: [Object],
                   hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                   formatted_address: 'Paris, France',
                   address: [Object],
                   _id: 50af2404beccdf180b000002,
                   __v: 0 } ],
              thumb: '4abd68108860dcea8000c08ce82b09d1.jpeg',
              tag: [ '' ] } },
        writable: [33mtrue[39m,
        end: [36m[Function][39m,
        _last: [33mfalse[39m,
        chunkedEncoding: [33mfalse[39m,
        shouldKeepAlive: [33mtrue[39m,
        useChunkedEncodingByDefault: [33mtrue[39m,
        _hasBody: [33mtrue[39m,
        _trailer: [32m''[39m,
        finished: [33mfalse[39m,
        socket: [36m[Circular][39m,
        connection: [36m[Circular][39m,
        _events: { finish: [36m[Function][39m, header: [36m[Function][39m },
        _expect_continue: [33mtrue[39m,
        _sent100: [33mtrue[39m,
        app: 
         { [Function: app]
           use: [36m[Function][39m,
           handle: [36m[Function][39m,
           listen: [36m[Function][39m,
           setMaxListeners: [36m[Function][39m,
           emit: [36m[Function][39m,
           addListener: [36m[Function][39m,
           on: [36m[Function][39m,
           once: [36m[Function][39m,
           removeListener: [36m[Function][39m,
           removeAllListeners: [36m[Function][39m,
           listeners: [36m[Function][39m,
           route: [32m'/'[39m,
           stack: 
            [ { route: [32m''[39m, handle: [36m[Function: query][39m },
              { route: [32m''[39m,
                handle: [36m[Function: expressInit][39m },
              { route: [32m''[39m,
                handle: [36m[Function: bodyParser][39m },
              { route: [32m''[39m, handle: [36m[Function: static][39m },
              { route: [32m''[39m,
                handle: [36m[Function: cookieParser][39m },
              { route: [32m''[39m, handle: [36m[Function: session][39m },
              { route: [32m''[39m, handle: [36m[Function][39m },
              { route: [32m''[39m,
                handle: [36m[Function: methodOverride][39m },
              { route: [32m''[39m, handle: [36m[Function: router][39m },
              { route: [32m''[39m,
                handle: [36m[Function: errorHandler][39m } ],
           init: [36m[Function][39m,
           defaultConfiguration: [36m[Function][39m,
           engine: [36m[Function][39m,
           param: [36m[Function][39m,
           set: [36m[Function][39m,
           path: [36m[Function][39m,
           enabled: [36m[Function][39m,
           disabled: [36m[Function][39m,
           enable: [36m[Function][39m,
           disable: [36m[Function][39m,
           configure: [36m[Function][39m,
           get: [36m[Function][39m,
           post: [36m[Function][39m,
           put: [36m[Function][39m,
           head: [36m[Function][39m,
           delete: [36m[Function][39m,
           options: [36m[Function][39m,
           trace: [36m[Function][39m,
           copy: [36m[Function][39m,
           lock: [36m[Function][39m,
           mkcol: [36m[Function][39m,
           move: [36m[Function][39m,
           propfind: [36m[Function][39m,
           proppatch: [36m[Function][39m,
           unlock: [36m[Function][39m,
           report: [36m[Function][39m,
           mkactivity: [36m[Function][39m,
           checkout: [36m[Function][39m,
           merge: [36m[Function][39m,
           [32m'm-search'[39m: [36m[Function][39m,
           notify: [36m[Function][39m,
           subscribe: [36m[Function][39m,
           unsubscribe: [36m[Function][39m,
           patch: [36m[Function][39m,
           all: [36m[Function][39m,
           del: [36m[Function][39m,
           render: [36m[Function][39m,
           request: {},
           response: {},
           cache: {},
           settings: 
            { env: [32m'development'[39m,
              [32m'jsonp callback name'[39m: [32m'callback'[39m,
              [32m'json spaces'[39m: [33m2[39m,
              views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
              [32m'view engine'[39m: [32m'jade'[39m },
           engines: {},
           viewCallbacks: [],
           _events: { mount: [36m[Function][39m },
           _router: 
            { map: 
               { get: [36m[Object][39m,
                 post: [36m[Object][39m,
                 delete: [36m[Object][39m,
                 put: [36m[Object][39m },
              params: {},
              _params: [],
              caseSensitive: [33mfalse[39m,
              strict: [33mfalse[39m,
              middleware: [36m[Function: router][39m },
           routes: 
            { get: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              post: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              delete: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              put: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ] },
           router: [36m[Getter][39m,
           locals: 
            { [Function: locals]
              settings: 
               { env: [32m'development'[39m,
                 [32m'jsonp callback name'[39m: [32m'callback'[39m,
                 [32m'json spaces'[39m: [33m2[39m,
                 views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
                 [32m'view engine'[39m: [32m'jade'[39m },
              conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
           _usedRouter: [33mtrue[39m },
        _headers: { [32m'x-powered-by'[39m: [32m'Express'[39m },
        _headerNames: { [32m'x-powered-by'[39m: [32m'X-Powered-By'[39m },
        req: [36m[Circular][39m } },
  session: 
   { cookie: 
      { path: [32m'/'[39m,
        _expires: [1mnull[22m,
        originalMaxAge: [1mnull[22m,
        httpOnly: [33mtrue[39m } },
  httpVersionMajor: [33m1[39m,
  originalMethod: [32m'POST'[39m,
  _route_index: [33m21[39m,
  httpVersionMinor: [33m1[39m,
  route: 
   { path: [32m'/api/user/feed/:userid'[39m,
     method: [32m'post'[39m,
     callbacks: [ [36m[Function][39m, [36m[Function][39m ],
     keys: [ { name: [32m'userid'[39m, optional: [33mfalse[39m } ],
     regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m,
     params: [ userid: [32m'50af3cc0540c32480c000002'[39m ] },
  upgrade: [33mfalse[39m,
  originalUrl: [32m'/api/user/feed/50af3cc0540c32480c000002'[39m,
  params: [ userid: [32m'50af3cc0540c32480c000002'[39m ],
  _parsedUrl: 
   { pathname: [32m'/api/user/feed/50af3cc0540c32480c000002'[39m,
     path: [32m'/api/user/feed/50af3cc0540c32480c000002'[39m,
     href: [32m'/api/user/feed/50af3cc0540c32480c000002'[39m },
  query: {},
  app: 
   { [Function: app]
     use: [36m[Function][39m,
     handle: [36m[Function][39m,
     listen: [36m[Function][39m,
     setMaxListeners: [36m[Function][39m,
     emit: [36m[Function][39m,
     addListener: [36m[Function][39m,
     on: [36m[Function][39m,
     once: [36m[Function][39m,
     removeListener: [36m[Function][39m,
     removeAllListeners: [36m[Function][39m,
     listeners: [36m[Function][39m,
     route: [32m'/'[39m,
     stack: 
      [ { route: [32m''[39m, handle: [36m[Function: query][39m },
        { route: [32m''[39m,
          handle: [36m[Function: expressInit][39m },
        { route: [32m''[39m,
          handle: [36m[Function: bodyParser][39m },
        { route: [32m''[39m, handle: [36m[Function: static][39m },
        { route: [32m''[39m,
          handle: [36m[Function: cookieParser][39m },
        { route: [32m''[39m, handle: [36m[Function: session][39m },
        { route: [32m''[39m, handle: [36m[Function][39m },
        { route: [32m''[39m,
          handle: [36m[Function: methodOverride][39m },
        { route: [32m''[39m, handle: [36m[Function: router][39m },
        { route: [32m''[39m,
          handle: [36m[Function: errorHandler][39m } ],
     init: [36m[Function][39m,
     defaultConfiguration: [36m[Function][39m,
     engine: [36m[Function][39m,
     param: [36m[Function][39m,
     set: [36m[Function][39m,
     path: [36m[Function][39m,
     enabled: [36m[Function][39m,
     disabled: [36m[Function][39m,
     enable: [36m[Function][39m,
     disable: [36m[Function][39m,
     configure: [36m[Function][39m,
     get: [36m[Function][39m,
     post: [36m[Function][39m,
     put: [36m[Function][39m,
     head: [36m[Function][39m,
     delete: [36m[Function][39m,
     options: [36m[Function][39m,
     trace: [36m[Function][39m,
     copy: [36m[Function][39m,
     lock: [36m[Function][39m,
     mkcol: [36m[Function][39m,
     move: [36m[Function][39m,
     propfind: [36m[Function][39m,
     proppatch: [36m[Function][39m,
     unlock: [36m[Function][39m,
     report: [36m[Function][39m,
     mkactivity: [36m[Function][39m,
     checkout: [36m[Function][39m,
     merge: [36m[Function][39m,
     [32m'm-search'[39m: [36m[Function][39m,
     notify: [36m[Function][39m,
     subscribe: [36m[Function][39m,
     unsubscribe: [36m[Function][39m,
     patch: [36m[Function][39m,
     all: [36m[Function][39m,
     del: [36m[Function][39m,
     render: [36m[Function][39m,
     request: {},
     response: {},
     cache: {},
     settings: 
      { env: [32m'development'[39m,
        [32m'jsonp callback name'[39m: [32m'callback'[39m,
        [32m'json spaces'[39m: [33m2[39m,
        views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
        [32m'view engine'[39m: [32m'jade'[39m },
     engines: {},
     viewCallbacks: [],
     _events: { mount: [36m[Function][39m },
     _router: 
      { map: 
         { get: 
            [ { path: [32m'/user/login'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/login\/?$/i[39m,
                params: [] },
              { path: [32m'/user/logout'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/logout\/?$/i[39m,
                params: [] },
              { path: [32m'/user/new'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/new\/?$/i[39m,
                params: [] },
              { path: [32m'/user/validate/:token/:password'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/user\/validate\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/pictures/:size/:picture'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/pictures\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/static/images/:name'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/static\/images\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/\/?$/i[39m,
                params: [] },
              { path: [32m'/news/map'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/news\/map\/?$/i[39m,
                params: [] },
              { path: [32m'/news/map/search/:str'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/news\/map\/search\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/news/feed'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/news\/feed\/?$/i[39m,
                params: [] },
              { path: [32m'/settings'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/profile'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/profile\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/privateprofile'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/privateprofile\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/alerts'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/alerts\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/password'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/password\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/firstvisit'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/firstvisit\/?$/i[39m,
                params: [] },
              { path: [32m'/api/infos'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/infos\/?$/i[39m,
                params: [] },
              { path: [32m'/api/geoinfos/:x1/:y1/:x2/:y2/:heat/:type/:str'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/geoinfos\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/zones/:x/:y'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/zones\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/cats'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/cats\/?$/i[39m,
                params: [] },
              { path: [32m'/api/catsandtags'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/catsandtags\/?$/i[39m,
                params: [] },
              { path: [32m'/api/places'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/places\/?$/i[39m,
                params: [] },
              { path: [32m'/api/searchplaces/:str'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/searchplaces\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/usersearch/:string'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/usersearch\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/login'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/login\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/authorize\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri/:response_type'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri/:response_type/:scope'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/access_token/:client_id/:client_secret/:grant_type/:redirect_uri/:code'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/access_token\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/access_token'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/access_token\/?$/i[39m,
                params: [] },
              { path: [32m'/api/users/feed'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/users\/feed\/?$/i[39m },
              { path: [32m'/api/users/profile'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/users\/profile\/?$/i[39m },
              { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/users/search/:string'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/users\/search\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/docs/api'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/docs\/api\/?$/i[39m },
              { path: [32m'*'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^(.*)\/?$/i[39m } ],
           post: 
            [ { path: [32m'/user'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/?$/i[39m,
                params: [] },
              { path: [32m'/session'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/session\/?$/i[39m,
                params: [] },
              { path: [32m'/news'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/news\/?$/i[39m,
                params: [] },
              { path: [32m'/profile'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/profile\/?$/i[39m,
                params: [] },
              { path: [32m'/privateprofile'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/privateprofile\/?$/i[39m,
                params: [] },
              { path: [32m'/alerts'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/alerts\/?$/i[39m,
                params: [] },
              { path: [32m'/password'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/password\/?$/i[39m,
                params: [] },
              { path: [32m'/firstvisit'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/firstvisit\/?$/i[39m,
                params: [] },
              { path: [32m'/favplace'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/favplace\/?$/i[39m,
                params: [] },
              { path: [32m'/delfavplace'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/delfavplace\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/access_token'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/access_token\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/session'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/session\/?$/i[39m,
                params: [] },
              { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/delfavplace/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/delfavplace\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/updatefavplace/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/updatefavplace\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/unsubscribe/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/unsubscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/updatesubscribe/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/updatesubscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/unsubscribe/tag/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/unsubscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/updatesubscribe/tag/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/updatesubscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m,
                params: [36m[Object][39m },
              { path: [32m'/api/user/updatefeed/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/updatefeed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/delfeed/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/delfeed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m } ],
           delete: 
            [ { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m } ],
           put: 
            [ { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m } ] },
        params: {},
        _params: [],
        caseSensitive: [33mfalse[39m,
        strict: [33mfalse[39m,
        middleware: [36m[Function: router][39m },
     routes: 
      { get: 
         [ { path: [32m'/user/login'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/user\/login\/?$/i[39m,
             params: [] },
           { path: [32m'/user/logout'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/user\/logout\/?$/i[39m,
             params: [] },
           { path: [32m'/user/new'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/user\/new\/?$/i[39m,
             params: [] },
           { path: [32m'/user/validate/:token/:password'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m, [36m[Object][39m ],
             regexp: [31m/^\/user\/validate\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/pictures/:size/:picture'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m, [36m[Object][39m ],
             regexp: [31m/^\/pictures\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/static/images/:name'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/static\/images\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/\/?$/i[39m,
             params: [] },
           { path: [32m'/news/map'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/news\/map\/?$/i[39m,
             params: [] },
           { path: [32m'/news/map/search/:str'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/news\/map\/search\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/news/feed'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/news\/feed\/?$/i[39m,
             params: [] },
           { path: [32m'/settings'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [90mundefined[39m ],
             keys: [],
             regexp: [31m/^\/settings\/?$/i[39m,
             params: [] },
           { path: [32m'/settings/profile'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/settings\/profile\/?$/i[39m,
             params: [] },
           { path: [32m'/settings/privateprofile'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/settings\/privateprofile\/?$/i[39m,
             params: [] },
           { path: [32m'/settings/alerts'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/settings\/alerts\/?$/i[39m,
             params: [] },
           { path: [32m'/settings/password'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/settings\/password\/?$/i[39m,
             params: [] },
           { path: [32m'/settings/firstvisit'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/settings\/firstvisit\/?$/i[39m,
             params: [] },
           { path: [32m'/api/infos'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/infos\/?$/i[39m,
             params: [] },
           { path: [32m'/api/geoinfos/:x1/:y1/:x2/:y2/:heat/:type/:str'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: 
              [ [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m ],
             regexp: [31m/^\/api\/geoinfos\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/zones/:x/:y'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m, [36m[Object][39m ],
             regexp: [31m/^\/api\/zones\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/cats'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/cats\/?$/i[39m,
             params: [] },
           { path: [32m'/api/catsandtags'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/catsandtags\/?$/i[39m,
             params: [] },
           { path: [32m'/api/places'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/places\/?$/i[39m,
             params: [] },
           { path: [32m'/api/searchplaces/:str'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/searchplaces\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/usersearch/:string'[39m,
             method: [32m'get'[39m,
             callbacks: [ [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/usersearch\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/login'[39m,
             method: [32m'get'[39m,
             callbacks: [ [90mundefined[39m ],
             keys: [],
             regexp: [31m/^\/api\/oauth\/login\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/authorize'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/oauth\/authorize\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m, [36m[Object][39m ],
             regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri/:response_type'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ],
             regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri/:response_type/:scope'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: 
              [ [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m ],
             regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/access_token/:client_id/:client_secret/:grant_type/:redirect_uri/:code'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: 
              [ [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m,
                [36m[Object][39m ],
             regexp: [31m/^\/api\/oauth\/access_token\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/access_token'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/oauth\/access_token\/?$/i[39m,
             params: [] },
           { path: [32m'/api/users/feed'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/users\/feed\/?$/i[39m },
           { path: [32m'/api/users/profile'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/users\/profile\/?$/i[39m },
           { path: [32m'/api/favplace/:userid'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/subscribe/user/:userid'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/subscribe/tag/:userid'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/user/feed/:userid'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/user/:userid'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/users/search/:string'[39m,
             method: [32m'get'[39m,
             callbacks: [ [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/users\/search\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/docs/api'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/docs\/api\/?$/i[39m },
           { path: [32m'*'[39m,
             method: [32m'get'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^(.*)\/?$/i[39m } ],
        post: 
         [ { path: [32m'/user'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/user\/?$/i[39m,
             params: [] },
           { path: [32m'/session'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/session\/?$/i[39m,
             params: [] },
           { path: [32m'/news'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/news\/?$/i[39m,
             params: [] },
           { path: [32m'/profile'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/profile\/?$/i[39m,
             params: [] },
           { path: [32m'/privateprofile'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/privateprofile\/?$/i[39m,
             params: [] },
           { path: [32m'/alerts'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/alerts\/?$/i[39m,
             params: [] },
           { path: [32m'/password'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/password\/?$/i[39m,
             params: [] },
           { path: [32m'/firstvisit'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/firstvisit\/?$/i[39m,
             params: [] },
           { path: [32m'/favplace'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/favplace\/?$/i[39m,
             params: [] },
           { path: [32m'/delfavplace'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/delfavplace\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/access_token'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/oauth\/access_token\/?$/i[39m,
             params: [] },
           { path: [32m'/api/oauth/session'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m ],
             keys: [],
             regexp: [31m/^\/api\/oauth\/session\/?$/i[39m,
             params: [] },
           { path: [32m'/api/favplace/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/delfavplace/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/delfavplace\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/updatefavplace/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/updatefavplace\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/subscribe/user/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/unsubscribe/user/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/unsubscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/updatesubscribe/user/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/updatesubscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/subscribe/tag/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/unsubscribe/tag/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/unsubscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/updatesubscribe/tag/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/updatesubscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
             params: [] },
           { path: [32m'/api/user/feed/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m,
             params: [ userid: [32m'50af3cc0540c32480c000002'[39m ] },
           { path: [32m'/api/user/updatefeed/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/updatefeed\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/user/delfeed/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/delfeed\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/user/:userid'[39m,
             method: [32m'post'[39m,
             callbacks: [ [36m[Function][39m, [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m } ],
        delete: 
         [ { path: [32m'/api/favplace/:userid'[39m,
             method: [32m'delete'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/subscribe/user/:userid'[39m,
             method: [32m'delete'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/subscribe/tag/:userid'[39m,
             method: [32m'delete'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/user/feed/:userid'[39m,
             method: [32m'delete'[39m,
             callbacks: [ [36m[Function][39m, [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m } ],
        put: 
         [ { path: [32m'/api/favplace/:userid'[39m,
             method: [32m'put'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/subscribe/user/:userid'[39m,
             method: [32m'put'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/subscribe/tag/:userid'[39m,
             method: [32m'put'[39m,
             callbacks: [ [36m[Function][39m, [36m[Function][39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/user/feed/:userid'[39m,
             method: [32m'put'[39m,
             callbacks: [ [36m[Function][39m, [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m },
           { path: [32m'/api/user/:userid'[39m,
             method: [32m'put'[39m,
             callbacks: [ [36m[Function][39m, [90mundefined[39m ],
             keys: [ [36m[Object][39m ],
             regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m } ] },
     router: [36m[Getter][39m,
     locals: 
      { [Function: locals]
        settings: 
         { env: [32m'development'[39m,
           [32m'jsonp callback name'[39m: [32m'callback'[39m,
           [32m'json spaces'[39m: [33m2[39m,
           views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
           [32m'view engine'[39m: [32m'jade'[39m },
        conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
     _usedRouter: [33mtrue[39m },
  res: 
   { output: [],
     viewCallbacks: [],
     outputEncodings: [],
     locals: 
      { [Function: locals]
        session: [90mundefined[39m,
        redir: [90mundefined[39m,
        message: [90mundefined[39m,
        type: [90mundefined[39m,
        user: 
         { __v: 0,
           _id: 50af3cc0540c32480c000002,
           address: 
            { zip: '123',
              country: 'France',
              area: 'Rhône-Alpes',
              state: 'Rhône',
              city: 'Lyon',
              arr: '',
              street: '',
              street_number: '' },
           apiCode: '046019c3bd6f095e816b0c66c73474e992c4605e',
           apiCodeCreationDate: Tue, 27 Nov 2012 09:35:18 GMT,
           apiToken: '82bf023262fb5f37d12870cd1ae082917e92e6cd',
           apiTokenCreationDate: Tue, 27 Nov 2012 10:19:37 GMT,
           bio: '',
           formatted_address: 'Lyon, France',
           hash: '794c135be75a344b650b9dd3ac0f2fcfdc9b2fec',
           location: { lat: 45.764043, lng: 4.835659 },
           login: 'renaud.bessieres',
           mail: 'renaud.bessieres@gmail.com',
           name: 'renaud.bessieres',
           salt: '8b680de1cc5a874ab34260daeff8ed26149a9f55',
           token: '734e9b18dddb2b14dac7904bfc2e3ed59935b750',
           type: 1,
           web: '',
           apiStatus: 2,
           status: 1,
           lastLoginDate: Fri, 23 Nov 2012 09:07:12 GMT,
           lastModifDate: Fri, 23 Nov 2012 09:07:12 GMT,
           creationDate: Fri, 23 Nov 2012 09:07:12 GMT,
           favplace: 
            [ { _id: 50af49fbc711804817000002,
                location: [Object],
                name: 'api test1' },
              { _id: 50af49fbc711804817000003,
                location: [Object],
                name: 'api test2' },
              { name: 'Paris, France',
                location: [Object],
                _id: 50af61f315a0488c18000002 },
              { _id: 50b4823441a9666c16000002,
                location: [Object],
                name: 'api test1' },
              { _id: 50b4823441a9666c16000003,
                location: [Object],
                name: 'api test2' } ],
           placesubs: [],
           tagsubs: [ 'tag33', 'tag1', 'tag2' ],
           usersubs: 
            [ { tag: [],
                thumb: 'no-user.png',
                usersubs: [],
                tagsubs: [],
                placesubs: [],
                favplace: [Object],
                creationDate: '2012-11-23T07:05:56.559Z',
                lastModifDate: '2012-11-23T07:05:56.559Z',
                lastLoginDate: '2012-11-23T07:05:56.559Z',
                status: 1,
                apiStatus: 2,
                type: 1,
                token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                name: 'rebe100x',
                mail: 'rebe100x@gmail.com',
                login: 'rebe100x',
                location: [Object],
                hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                formatted_address: 'Marseille, France',
                address: [Object],
                _id: '50af2054fba918480c000006',
                __v: 0 },
              { tag: [],
                thumb: 'no-user.png',
                usersubs: [],
                tagsubs: [],
                placesubs: [],
                favplace: [Object],
                creationDate: '2012-11-23T07:21:40.444Z',
                lastModifDate: '2012-11-23T07:21:40.444Z',
                lastLoginDate: '2012-11-23T07:21:40.444Z',
                status: 1,
                apiStatus: 2,
                type: 1,
                token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                name: 'labs.yakwala',
                mail: 'labs.yakwala@gmail.com',
                login: 'labs.yakwala',
                location: [Object],
                hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                formatted_address: 'Paris, France',
                address: [Object],
                _id: '50af2404beccdf180b000002',
                __v: 0 },
              { tag: [],
                thumb: 'no-user.png',
                usersubs: [],
                tagsubs: [],
                placesubs: [],
                favplace: [Object],
                creationDate: Fri, 23 Nov 2012 07:05:56 GMT,
                lastModifDate: Fri, 23 Nov 2012 07:05:56 GMT,
                lastLoginDate: Fri, 23 Nov 2012 07:05:56 GMT,
                status: 1,
                apiStatus: 2,
                type: 1,
                token: '0f87bf4b5903906fdcb5297f9a385965cf7fc50e',
                salt: 'fea293ebb77ee6c2c5528cebb250040e022947d7',
                name: 'rebe100x',
                mail: 'rebe100x@gmail.com',
                login: 'rebe100x',
                location: [Object],
                hash: 'ef2a0a5a4e3fe6d9943d62d6f9cd1759e29c5d28',
                formatted_address: 'Marseille, France',
                address: [Object],
                _id: 50af2054fba918480c000006,
                __v: 0 },
              { tag: [],
                thumb: 'no-user.png',
                usersubs: [],
                tagsubs: [],
                placesubs: [],
                favplace: [Object],
                creationDate: Fri, 23 Nov 2012 07:21:40 GMT,
                lastModifDate: Fri, 23 Nov 2012 07:21:40 GMT,
                lastLoginDate: Fri, 23 Nov 2012 07:21:40 GMT,
                status: 1,
                apiStatus: 2,
                type: 1,
                token: '0f78a9080bae1c6a12b37369d77bd6065ea97805',
                salt: 'cfbba8f76d7c93eaa6dd02a28b8562ee5a26f26f',
                name: 'labs.yakwala',
                mail: 'labs.yakwala@gmail.com',
                login: 'labs.yakwala',
                location: [Object],
                hash: 'e2ac9b207bb5855f6066b8d80680e7f7da362d05',
                formatted_address: 'Paris, France',
                address: [Object],
                _id: 50af2404beccdf180b000002,
                __v: 0 } ],
           thumb: '4abd68108860dcea8000c08ce82b09d1.jpeg',
           tag: [ '' ] } },
     writable: [33mtrue[39m,
     end: [36m[Function][39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mfalse[39m,
     socket: 
      { _handle: 
         { writeQueueSize: [33m0[39m,
           socket: [36m[Circular][39m,
           onread: [36m[Function: onread][39m },
        _pendingWriteReqs: [33m0[39m,
        _flags: [33m0[39m,
        _connectQueueSize: [33m0[39m,
        destroyed: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        bytesRead: [33m10972[39m,
        bytesWritten: [33m25[39m,
        allowHalfOpen: [33mtrue[39m,
        writable: [33mtrue[39m,
        readable: [33mtrue[39m,
        server: 
         { connections: [33m2[39m,
           allowHalfOpen: [33mtrue[39m,
           _handle: 
            { writeQueueSize: [33m0[39m,
              onconnection: [36m[Function: onconnection][39m,
              socket: [36m[Circular][39m },
           _events: 
            { request: 
               { [Function: app]
                 use: [36m[Function][39m,
                 handle: [36m[Function][39m,
                 listen: [36m[Function][39m,
                 setMaxListeners: [36m[Function][39m,
                 emit: [36m[Function][39m,
                 addListener: [36m[Function][39m,
                 on: [36m[Function][39m,
                 once: [36m[Function][39m,
                 removeListener: [36m[Function][39m,
                 removeAllListeners: [36m[Function][39m,
                 listeners: [36m[Function][39m,
                 route: [32m'/'[39m,
                 stack: [36m[Object][39m,
                 init: [36m[Function][39m,
                 defaultConfiguration: [36m[Function][39m,
                 engine: [36m[Function][39m,
                 param: [36m[Function][39m,
                 set: [36m[Function][39m,
                 path: [36m[Function][39m,
                 enabled: [36m[Function][39m,
                 disabled: [36m[Function][39m,
                 enable: [36m[Function][39m,
                 disable: [36m[Function][39m,
                 configure: [36m[Function][39m,
                 get: [36m[Function][39m,
                 post: [36m[Function][39m,
                 put: [36m[Function][39m,
                 head: [36m[Function][39m,
                 delete: [36m[Function][39m,
                 options: [36m[Function][39m,
                 trace: [36m[Function][39m,
                 copy: [36m[Function][39m,
                 lock: [36m[Function][39m,
                 mkcol: [36m[Function][39m,
                 move: [36m[Function][39m,
                 propfind: [36m[Function][39m,
                 proppatch: [36m[Function][39m,
                 unlock: [36m[Function][39m,
                 report: [36m[Function][39m,
                 mkactivity: [36m[Function][39m,
                 checkout: [36m[Function][39m,
                 merge: [36m[Function][39m,
                 [32m'm-search'[39m: [36m[Function][39m,
                 notify: [36m[Function][39m,
                 subscribe: [36m[Function][39m,
                 unsubscribe: [36m[Function][39m,
                 patch: [36m[Function][39m,
                 all: [36m[Function][39m,
                 del: [36m[Function][39m,
                 render: [36m[Function][39m,
                 request: {},
                 response: {},
                 cache: {},
                 settings: [36m[Object][39m,
                 engines: {},
                 viewCallbacks: [],
                 _events: [36m[Object][39m,
                 _router: [36m[Object][39m,
                 routes: [36m[Object][39m,
                 router: [36m[Getter][39m,
                 locals: [36m[Object][39m,
                 _usedRouter: [33mtrue[39m },
              connection: [36m[Function: connectionListener][39m,
              checkContinue: [] },
           httpAllowHalfOpen: [33mfalse[39m },
        ondrain: [36m[Function][39m,
        _idleTimeout: [33m120000[39m,
        _idleNext: 
         { _handle: 
            { writeQueueSize: [33m0[39m,
              socket: [36m[Circular][39m,
              onread: [36m[Function: onread][39m },
           _pendingWriteReqs: [33m0[39m,
           _flags: [33m0[39m,
           _connectQueueSize: [33m0[39m,
           destroyed: [33mfalse[39m,
           errorEmitted: [33mfalse[39m,
           bytesRead: [33m37900[39m,
           bytesWritten: [33m4820[39m,
           allowHalfOpen: [33mtrue[39m,
           writable: [33mtrue[39m,
           readable: [33mtrue[39m,
           server: 
            { connections: [33m2[39m,
              allowHalfOpen: [33mtrue[39m,
              _handle: 
               { writeQueueSize: [33m0[39m,
                 onconnection: [36m[Function: onconnection][39m,
                 socket: [36m[Circular][39m },
              _events: 
               { request: [36m[Object][39m,
                 connection: [36m[Function: connectionListener][39m,
                 checkContinue: [] },
              httpAllowHalfOpen: [33mfalse[39m },
           ondrain: [36m[Function][39m,
           _idleTimeout: [33m120000[39m,
           _idleNext: 
            { _idleNext: [36m[Circular][39m,
              _idlePrev: [36m[Circular][39m,
              ontimeout: [36m[Function][39m },
           _idlePrev: [36m[Circular][39m,
           _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
           _events: 
            { timeout: { [Function: g] listener: [36m[Function][39m },
              error: [36m[Function][39m,
              close: [ [36m[Function][39m ] },
           ondata: [36m[Function][39m,
           onend: [36m[Function][39m,
           _httpMessage: [1mnull[22m },
        _idlePrev: 
         { _idleNext: [36m[Circular][39m,
           _idlePrev: 
            { _handle: 
               { writeQueueSize: [33m0[39m,
                 socket: [36m[Circular][39m,
                 onread: [36m[Function: onread][39m },
              _pendingWriteReqs: [33m0[39m,
              _flags: [33m0[39m,
              _connectQueueSize: [33m0[39m,
              destroyed: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              bytesRead: [33m37900[39m,
              bytesWritten: [33m4820[39m,
              allowHalfOpen: [33mtrue[39m,
              writable: [33mtrue[39m,
              readable: [33mtrue[39m,
              server: 
               { connections: [33m2[39m,
                 allowHalfOpen: [33mtrue[39m,
                 _handle: [36m[Object][39m,
                 _events: [36m[Object][39m,
                 httpAllowHalfOpen: [33mfalse[39m },
              ondrain: [36m[Function][39m,
              _idleTimeout: [33m120000[39m,
              _idleNext: [36m[Circular][39m,
              _idlePrev: [36m[Circular][39m,
              _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
              _events: 
               { timeout: [36m[Object][39m,
                 error: [36m[Function][39m,
                 close: [36m[Object][39m },
              ondata: [36m[Function][39m,
              onend: [36m[Function][39m,
              _httpMessage: [1mnull[22m },
           ontimeout: [36m[Function][39m },
        _idleStart: [35mTue, 27 Nov 2012 10:19:38 GMT[39m,
        _events: 
         { timeout: { [Function: g] listener: [36m[Function][39m },
           error: [36m[Function][39m,
           close: 
            [ [36m[Function][39m,
              [36m[Function: onServerResponseClose][39m ] },
        ondata: [36m[Function][39m,
        onend: [36m[Function][39m,
        _httpMessage: [36m[Circular][39m },
     connection: 
      { _handle: 
         { writeQueueSize: [33m0[39m,
           socket: [36m[Circular][39m,
           onread: [36m[Function: onread][39m },
        _pendingWriteReqs: [33m0[39m,
        _flags: [33m0[39m,
        _connectQueueSize: [33m0[39m,
        destroyed: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        bytesRead: [33m10972[39m,
        bytesWritten: [33m25[39m,
        allowHalfOpen: [33mtrue[39m,
        writable: [33mtrue[39m,
        readable: [33mtrue[39m,
        server: 
         { connections: [33m2[39m,
           allowHalfOpen: [33mtrue[39m,
           _handle: 
            { writeQueueSize: [33m0[39m,
              onconnection: [36m[Function: onconnection][39m,
              socket: [36m[Circular][39m },
           _events: 
            { request: 
               { [Function: app]
                 use: [36m[Function][39m,
                 handle: [36m[Function][39m,
                 listen: [36m[Function][39m,
                 setMaxListeners: [36m[Function][39m,
                 emit: [36m[Function][39m,
                 addListener: [36m[Function][39m,
                 on: [36m[Function][39m,
                 once: [36m[Function][39m,
                 removeListener: [36m[Function][39m,
                 removeAllListeners: [36m[Function][39m,
                 listeners: [36m[Function][39m,
                 route: [32m'/'[39m,
                 stack: [36m[Object][39m,
                 init: [36m[Function][39m,
                 defaultConfiguration: [36m[Function][39m,
                 engine: [36m[Function][39m,
                 param: [36m[Function][39m,
                 set: [36m[Function][39m,
                 path: [36m[Function][39m,
                 enabled: [36m[Function][39m,
                 disabled: [36m[Function][39m,
                 enable: [36m[Function][39m,
                 disable: [36m[Function][39m,
                 configure: [36m[Function][39m,
                 get: [36m[Function][39m,
                 post: [36m[Function][39m,
                 put: [36m[Function][39m,
                 head: [36m[Function][39m,
                 delete: [36m[Function][39m,
                 options: [36m[Function][39m,
                 trace: [36m[Function][39m,
                 copy: [36m[Function][39m,
                 lock: [36m[Function][39m,
                 mkcol: [36m[Function][39m,
                 move: [36m[Function][39m,
                 propfind: [36m[Function][39m,
                 proppatch: [36m[Function][39m,
                 unlock: [36m[Function][39m,
                 report: [36m[Function][39m,
                 mkactivity: [36m[Function][39m,
                 checkout: [36m[Function][39m,
                 merge: [36m[Function][39m,
                 [32m'm-search'[39m: [36m[Function][39m,
                 notify: [36m[Function][39m,
                 subscribe: [36m[Function][39m,
                 unsubscribe: [36m[Function][39m,
                 patch: [36m[Function][39m,
                 all: [36m[Function][39m,
                 del: [36m[Function][39m,
                 render: [36m[Function][39m,
                 request: {},
                 response: {},
                 cache: {},
                 settings: [36m[Object][39m,
                 engines: {},
                 viewCallbacks: [],
                 _events: [36m[Object][39m,
                 _router: [36m[Object][39m,
                 routes: [36m[Object][39m,
                 router: [36m[Getter][39m,
                 locals: [36m[Object][39m,
                 _usedRouter: [33mtrue[39m },
              connection: [36m[Function: connectionListener][39m,
              checkContinue: [] },
           httpAllowHalfOpen: [33mfalse[39m },
        ondrain: [36m[Function][39m,
        _idleTimeout: [33m120000[39m,
        _idleNext: 
         { _handle: 
            { writeQueueSize: [33m0[39m,
              socket: [36m[Circular][39m,
              onread: [36m[Function: onread][39m },
           _pendingWriteReqs: [33m0[39m,
           _flags: [33m0[39m,
           _connectQueueSize: [33m0[39m,
           destroyed: [33mfalse[39m,
           errorEmitted: [33mfalse[39m,
           bytesRead: [33m37900[39m,
           bytesWritten: [33m4820[39m,
           allowHalfOpen: [33mtrue[39m,
           writable: [33mtrue[39m,
           readable: [33mtrue[39m,
           server: 
            { connections: [33m2[39m,
              allowHalfOpen: [33mtrue[39m,
              _handle: 
               { writeQueueSize: [33m0[39m,
                 onconnection: [36m[Function: onconnection][39m,
                 socket: [36m[Circular][39m },
              _events: 
               { request: [36m[Object][39m,
                 connection: [36m[Function: connectionListener][39m,
                 checkContinue: [] },
              httpAllowHalfOpen: [33mfalse[39m },
           ondrain: [36m[Function][39m,
           _idleTimeout: [33m120000[39m,
           _idleNext: 
            { _idleNext: [36m[Circular][39m,
              _idlePrev: [36m[Circular][39m,
              ontimeout: [36m[Function][39m },
           _idlePrev: [36m[Circular][39m,
           _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
           _events: 
            { timeout: { [Function: g] listener: [36m[Function][39m },
              error: [36m[Function][39m,
              close: [ [36m[Function][39m ] },
           ondata: [36m[Function][39m,
           onend: [36m[Function][39m,
           _httpMessage: [1mnull[22m },
        _idlePrev: 
         { _idleNext: [36m[Circular][39m,
           _idlePrev: 
            { _handle: 
               { writeQueueSize: [33m0[39m,
                 socket: [36m[Circular][39m,
                 onread: [36m[Function: onread][39m },
              _pendingWriteReqs: [33m0[39m,
              _flags: [33m0[39m,
              _connectQueueSize: [33m0[39m,
              destroyed: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              bytesRead: [33m37900[39m,
              bytesWritten: [33m4820[39m,
              allowHalfOpen: [33mtrue[39m,
              writable: [33mtrue[39m,
              readable: [33mtrue[39m,
              server: 
               { connections: [33m2[39m,
                 allowHalfOpen: [33mtrue[39m,
                 _handle: [36m[Object][39m,
                 _events: [36m[Object][39m,
                 httpAllowHalfOpen: [33mfalse[39m },
              ondrain: [36m[Function][39m,
              _idleTimeout: [33m120000[39m,
              _idleNext: [36m[Circular][39m,
              _idlePrev: [36m[Circular][39m,
              _idleStart: [35mTue, 27 Nov 2012 10:19:30 GMT[39m,
              _events: 
               { timeout: [36m[Object][39m,
                 error: [36m[Function][39m,
                 close: [36m[Object][39m },
              ondata: [36m[Function][39m,
              onend: [36m[Function][39m,
              _httpMessage: [1mnull[22m },
           ontimeout: [36m[Function][39m },
        _idleStart: [35mTue, 27 Nov 2012 10:19:38 GMT[39m,
        _events: 
         { timeout: { [Function: g] listener: [36m[Function][39m },
           error: [36m[Function][39m,
           close: 
            [ [36m[Function][39m,
              [36m[Function: onServerResponseClose][39m ] },
        ondata: [36m[Function][39m,
        onend: [36m[Function][39m,
        _httpMessage: [36m[Circular][39m },
     _events: { finish: [36m[Function][39m, header: [36m[Function][39m },
     _expect_continue: [33mtrue[39m,
     _sent100: [33mtrue[39m,
     app: 
      { [Function: app]
        use: [36m[Function][39m,
        handle: [36m[Function][39m,
        listen: [36m[Function][39m,
        setMaxListeners: [36m[Function][39m,
        emit: [36m[Function][39m,
        addListener: [36m[Function][39m,
        on: [36m[Function][39m,
        once: [36m[Function][39m,
        removeListener: [36m[Function][39m,
        removeAllListeners: [36m[Function][39m,
        listeners: [36m[Function][39m,
        route: [32m'/'[39m,
        stack: 
         [ { route: [32m''[39m, handle: [36m[Function: query][39m },
           { route: [32m''[39m,
             handle: [36m[Function: expressInit][39m },
           { route: [32m''[39m,
             handle: [36m[Function: bodyParser][39m },
           { route: [32m''[39m, handle: [36m[Function: static][39m },
           { route: [32m''[39m,
             handle: [36m[Function: cookieParser][39m },
           { route: [32m''[39m, handle: [36m[Function: session][39m },
           { route: [32m''[39m, handle: [36m[Function][39m },
           { route: [32m''[39m,
             handle: [36m[Function: methodOverride][39m },
           { route: [32m''[39m, handle: [36m[Function: router][39m },
           { route: [32m''[39m,
             handle: [36m[Function: errorHandler][39m } ],
        init: [36m[Function][39m,
        defaultConfiguration: [36m[Function][39m,
        engine: [36m[Function][39m,
        param: [36m[Function][39m,
        set: [36m[Function][39m,
        path: [36m[Function][39m,
        enabled: [36m[Function][39m,
        disabled: [36m[Function][39m,
        enable: [36m[Function][39m,
        disable: [36m[Function][39m,
        configure: [36m[Function][39m,
        get: [36m[Function][39m,
        post: [36m[Function][39m,
        put: [36m[Function][39m,
        head: [36m[Function][39m,
        delete: [36m[Function][39m,
        options: [36m[Function][39m,
        trace: [36m[Function][39m,
        copy: [36m[Function][39m,
        lock: [36m[Function][39m,
        mkcol: [36m[Function][39m,
        move: [36m[Function][39m,
        propfind: [36m[Function][39m,
        proppatch: [36m[Function][39m,
        unlock: [36m[Function][39m,
        report: [36m[Function][39m,
        mkactivity: [36m[Function][39m,
        checkout: [36m[Function][39m,
        merge: [36m[Function][39m,
        [32m'm-search'[39m: [36m[Function][39m,
        notify: [36m[Function][39m,
        subscribe: [36m[Function][39m,
        unsubscribe: [36m[Function][39m,
        patch: [36m[Function][39m,
        all: [36m[Function][39m,
        del: [36m[Function][39m,
        render: [36m[Function][39m,
        request: {},
        response: {},
        cache: {},
        settings: 
         { env: [32m'development'[39m,
           [32m'jsonp callback name'[39m: [32m'callback'[39m,
           [32m'json spaces'[39m: [33m2[39m,
           views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
           [32m'view engine'[39m: [32m'jade'[39m },
        engines: {},
        viewCallbacks: [],
        _events: { mount: [36m[Function][39m },
        _router: 
         { map: 
            { get: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              post: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              delete: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ],
              put: 
               [ [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m,
                 [36m[Object][39m ] },
           params: {},
           _params: [],
           caseSensitive: [33mfalse[39m,
           strict: [33mfalse[39m,
           middleware: [36m[Function: router][39m },
        routes: 
         { get: 
            [ { path: [32m'/user/login'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/login\/?$/i[39m,
                params: [] },
              { path: [32m'/user/logout'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/logout\/?$/i[39m,
                params: [] },
              { path: [32m'/user/new'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/new\/?$/i[39m,
                params: [] },
              { path: [32m'/user/validate/:token/:password'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/user\/validate\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/pictures/:size/:picture'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/pictures\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/static/images/:name'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/static\/images\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/\/?$/i[39m,
                params: [] },
              { path: [32m'/news/map'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/news\/map\/?$/i[39m,
                params: [] },
              { path: [32m'/news/map/search/:str'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/news\/map\/search\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/news/feed'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/news\/feed\/?$/i[39m,
                params: [] },
              { path: [32m'/settings'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/profile'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/profile\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/privateprofile'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/privateprofile\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/alerts'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/alerts\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/password'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/password\/?$/i[39m,
                params: [] },
              { path: [32m'/settings/firstvisit'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/settings\/firstvisit\/?$/i[39m,
                params: [] },
              { path: [32m'/api/infos'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/infos\/?$/i[39m,
                params: [] },
              { path: [32m'/api/geoinfos/:x1/:y1/:x2/:y2/:heat/:type/:str'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/geoinfos\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/zones/:x/:y'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/zones\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/cats'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/cats\/?$/i[39m,
                params: [] },
              { path: [32m'/api/catsandtags'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/catsandtags\/?$/i[39m,
                params: [] },
              { path: [32m'/api/places'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/places\/?$/i[39m,
                params: [] },
              { path: [32m'/api/searchplaces/:str'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/searchplaces\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/usersearch/:string'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/usersearch\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/login'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/login\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/authorize\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri/:response_type'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/authorize/:client_id/:redirect_uri/:response_type/:scope'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/authorize\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/access_token/:client_id/:client_secret/:grant_type/:redirect_uri/:code'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/oauth\/access_token\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/access_token'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/access_token\/?$/i[39m,
                params: [] },
              { path: [32m'/api/users/feed'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/users\/feed\/?$/i[39m },
              { path: [32m'/api/users/profile'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/users\/profile\/?$/i[39m },
              { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/:userid'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/users/search/:string'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/users\/search\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/docs/api'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/docs\/api\/?$/i[39m },
              { path: [32m'*'[39m,
                method: [32m'get'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^(.*)\/?$/i[39m } ],
           post: 
            [ { path: [32m'/user'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/user\/?$/i[39m,
                params: [] },
              { path: [32m'/session'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/session\/?$/i[39m,
                params: [] },
              { path: [32m'/news'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/news\/?$/i[39m,
                params: [] },
              { path: [32m'/profile'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/profile\/?$/i[39m,
                params: [] },
              { path: [32m'/privateprofile'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/privateprofile\/?$/i[39m,
                params: [] },
              { path: [32m'/alerts'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/alerts\/?$/i[39m,
                params: [] },
              { path: [32m'/password'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/password\/?$/i[39m,
                params: [] },
              { path: [32m'/firstvisit'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/firstvisit\/?$/i[39m,
                params: [] },
              { path: [32m'/favplace'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/favplace\/?$/i[39m,
                params: [] },
              { path: [32m'/delfavplace'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/delfavplace\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/access_token'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/access_token\/?$/i[39m,
                params: [] },
              { path: [32m'/api/oauth/session'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [],
                regexp: [31m/^\/api\/oauth\/session\/?$/i[39m,
                params: [] },
              { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/delfavplace/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/delfavplace\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/updatefavplace/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/updatefavplace\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/unsubscribe/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/unsubscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/updatesubscribe/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/updatesubscribe\/user\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/unsubscribe/tag/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/unsubscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/updatesubscribe/tag/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/updatesubscribe\/tag\/(?:([^\/]+?))\/?$/i[39m,
                params: [] },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m,
                params: [36m[Object][39m },
              { path: [32m'/api/user/updatefeed/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/updatefeed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/delfeed/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/delfeed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/:userid'[39m,
                method: [32m'post'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m } ],
           delete: 
            [ { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'delete'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m } ],
           put: 
            [ { path: [32m'/api/favplace/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/favplace\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/user/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/user\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/subscribe/tag/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/subscribe\/tag\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/feed/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/feed\/(?:([^\/]+?))\/?$/i[39m },
              { path: [32m'/api/user/:userid'[39m,
                method: [32m'put'[39m,
                callbacks: [36m[Object][39m,
                keys: [36m[Object][39m,
                regexp: [31m/^\/api\/user\/(?:([^\/]+?))\/?$/i[39m } ] },
        router: [36m[Getter][39m,
        locals: 
         { [Function: locals]
           settings: 
            { env: [32m'development'[39m,
              [32m'jsonp callback name'[39m: [32m'callback'[39m,
              [32m'json spaces'[39m: [33m2[39m,
              views: [32m'c:\\NODE\\YAKFRONT\\main/views'[39m,
              [32m'view engine'[39m: [32m'jade'[39m },
           conf: [32m'{"validationUrl":"http://localhost:3000/user/validate/","backurl":"http://dev.backend.yakwala.com/BACKEND/","fronturl":"http://localhost:3000","port":3000,"dbname":"yakwala","env":"DEV","uploadsDir":"c:\\\\NODE\\\\YAKFRONT\\\\main\\\\public\\\\uploads\\\\"}'[39m },
        _usedRouter: [33mtrue[39m },
     _headers: { [32m'x-powered-by'[39m: [32m'Express'[39m },
     _headerNames: { [32m'x-powered-by'[39m: [32m'X-Powered-By'[39m },
     req: [36m[Circular][39m },
  next: [36m[Function: next][39m }